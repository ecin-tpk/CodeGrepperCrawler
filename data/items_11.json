[
{"title": "adding numbers in an array javascript", "code": "console.log(\n  [].reduce((a, b) => a + b)\n)", "date": "Feb 24 2021", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Blue Badger", "source_name": null, "source_url": null},
{"title": "add numbers from array nodejs", "code": "//these are the values//\nvar values = [\n\t'1',\n  \t'2'\n]\n//makes a variable named total, adding together the values\nvar total = values[0] + values[1]\n\n//prints out the variable named total\nconsole.log(total);", "date": "Mar 18 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "gelitan sucks your ding dong", "source_name": null, "source_url": null},
{"title": "auto increment in mongoose + nodejs", "code": "...\nvar bookSchema = new Schema({\n    author: { type: Schema.Types.ObjectId, ref: 'Author' },\n    title: String,\n    genre: String,\n    publishDate: Date\n});\n\nbookSchema.plugin(autoIncrement.plugin, 'Book');\nvar Book = connection.model('Book', bookSchema);\n````\n\nThat's it. Now you can create book entities at will and they will have an `_id` field added of type `Number` and will automatically\n increment with each new document. Even declaring references is easy, just remember to change the reference property's type\n to `Number` instead of `ObjectId` if the referenced model is also using the plugin.\n\n````js\nvar authorSchema = new mongoose.Schema({\n...", "date": "Jan 25 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Concerned Cod", "source_name": "npmdoc.github.io", "source_url": "https://npmdoc.github.io/node-npmdoc-mongoose-auto-increment/build/apidoc.html"},
{"title": "api uber eat node js", "code": "uber.getStoreDetails(storeUuid);", "date": "Nov 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Nervous Nightingale", "source_name": "github.com", "source_url": "https://github.com/jzarca01/node-ubereats#get-store-details"},
{"title": "aes 256 nodejs", "code": "$\u00a0npm\u00a0install\u00a0aes256", "date": "Jan 03 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "null234", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/aes256"},
{"title": "api uber eat node js", "code": "uber.searchRestaurants((searchQuery = 'Indian'));", "date": "Nov 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Nervous Nightingale", "source_name": "github.com", "source_url": "https://github.com/jzarca01/node-ubereats#get-store-details"},
{"title": "api uber eat node js", "code": "uber.getRestaurants();", "date": "Nov 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Nervous Nightingale", "source_name": "github.com", "source_url": "https://github.com/jzarca01/node-ubereats#get-store-details"},
{"title": "api uber eat node js", "code": "const UberEats = require('node-ubereats');\nconst uber = new UberEats({\n  latitude: 48.8563148,\n  longitude: 2.3227369,\n  formattedAddress: '16 Rue de Rochechouart, 75009 Paris'\n});", "date": "Nov 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Nervous Nightingale", "source_name": "github.com", "source_url": "https://github.com/jzarca01/node-ubereats#get-store-details"},
{"title": "api uber eat node js", "code": "npm install --save node-ubereats", "date": "Nov 17 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Nervous Nightingale", "source_name": "github.com", "source_url": "https://github.com/jzarca01/node-ubereats#get-store-details"},
{"title": "aes 256 nodejs", "code": "var\u00a0aes256\u00a0=\u00a0require('aes256');\u00a0var\u00a0key\u00a0=\u00a0'my\u00a0passphrase';var\u00a0plaintext\u00a0=\u00a0'my\u00a0plaintext\u00a0message';\u00a0var\u00a0encrypted\u00a0=\u00a0aes256.encrypt(key,\u00a0plaintext);var\u00a0decrypted\u00a0=\u00a0aes256.decrypt(key,\u00a0encrypted);\u00a0//\u00a0plaintext\u00a0===\u00a0decrypted", "date": "Jan 03 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "null234", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/aes256"},
{"title": "add games on  node js", "code": "mkdir multiplayer-card-project\ncd multiplayer-card-project", "date": "Jul 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tough Tarsier", "source_name": "www.freecodecamp.org", "source_url": "https://www.freecodecamp.org/news/how-to-build-a-multiplayer-card-game-with-phaser-3-express-and-socket-io/"},
{"title": "nodejs atob", "code": "// If you need to convert to Base64 you could do so using Buffer:\nconsole.log(Buffer.from('Hello World!').toString('base64'));\n// Reverse (assuming the content you're decoding is a utf8 string):\nconsole.log(Buffer.from(b64Encoded, 'base64').toString());", "date": "Apr 03 2021", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "florinrelea", "source_name": null, "source_url": null},
{"title": "nodejs btoa", "code": "Buffer.from('Hello world!', 'binary').toString('base64')", "date": "Jun 12 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Uptight Unicorn", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/23097928/node-js-throws-btoa-is-not-defined-error"},
{"title": "atob nodejs", "code": "(function () {\n  \"use strict\";\n\n  var atob = require('atob');\n  var b64 = \"SGVsbG8sIFdvcmxkIQ==\";\n  var bin = atob(b64);\n\n  console.log(bin); // \"Hello, World!\"\n}());\n", "date": "Nov 28 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Handsome Hummingbird", "source_name": "npm.runkit.com", "source_url": "https://npm.runkit.com/atob"},
{"title": "Append text into a file nodejs", "code": "const fs = require('fs');\n\nfs.appendFile('message.txt', 'data to append', function (err) {\n  if (err) throw err;\n  console.log('Saved!');\n});\n\nIf message.txt doesnt exist, It will gonna create that too\n", "date": "Mar 16 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "aryang23", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/3459476/how-to-append-to-a-file-in-node"},
{"title": "Append text into a file nodejs", "code": "Synchronously\n\nconst fs = require('fs');\n\nfs.appendFileSync('message.txt', 'data to append');\n", "date": "Mar 16 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "aryang23", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/3459476/how-to-append-to-a-file-in-node"},
{"title": "archiver compressed file in nodejs", "code": "npm install archiver --save\n\n// require modules\nvar fs = require('fs');\nvar archiver = require('archiver');\n\n// create a file to stream archive data to.\nvar output = fs.createWriteStream(__dirname + '/example.zip');\n//Set the compression format to zip\nvar archive = archiver('zip', {\n    zlib: { level: 9 } // Sets the compression level.\n});\n\n// listen for all archive data to be written\n// 'close' event is fired only when a file descriptor is involved\noutput.on('close', function() {\n    console.log(archive.pointer() + ' total bytes');\n    console.log('archiver has been finalized and the output file descriptor has closed.');\n});\n\n// This event is fired when the data source is drained no matter what was the data source.\n// It is not part of this library but rather from the NodeJS Stream API.\n// @see:   https://nodejs.org/api/stream.html#stream_event_end\noutput.on('end', function() {\n    console.log('Data has been drained');\n});\n\n// good practice to catch this error explicitly\narchive.on('error', function(err) {\n    throw err;\n});\n// pipe archive data to the file\narchive.pipe(output);\n// append a file from stream\nvar file1 = __dirname + '/file1.txt';\narchive.append(fs.createReadStream(file1), { name: 'file1.txt' });\n\n// append a file from string\narchive.append('string cheese!', { name: 'file2.txt' });\n// append a file from buffer\nvar buffer3 = Buffer.from('buff it!');\narchive.append(buffer3, { name: 'file3.txt' });\n\n// append a file\narchive.file('file1.txt', { name: 'file4.txt' });\n\n// append files from a sub-directory and naming it `new-subdir` within the archive\narchive.directory('subdir/', 'new-subdir');\n\n// append files from a sub-directory, putting its contents at the root of archive\narchive.directory('subdir/', false);\n\n// append files from a glob pattern\narchive.glob('subdir/*.txt');\n\n// finalize the archive (ie we are done appending files but streams have to finish yet)\n// 'close', 'end' or 'finish' may be fired right after calling this method so register to them beforehand\narchive.finalize();\n", "date": "Oct 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "RvDev", "source_name": "programming.vip", "source_url": "https://programming.vip/docs/using-archive-to-compress-files-in-nodejs.html"},
{"title": "allow cross origin node", "code": "app.use(function(req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});", "date": "Apr 23 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Magnificent Manatee", "source_name": null, "source_url": null},
{"title": "node express cors headers", "code": "var express = require('express')\nvar cors = require('cors')\nvar app = express()\n\napp.use(cors())\n\napp.get('/products/:id', function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for all origins!'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n", "date": "Mar 24 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Adventurous Aardvark", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/resources/middleware/cors.html"},
{"title": ": not foundram Files/nodejs/npm: 3: : not foundram Files/nodejs/npm: 5:", "code": "sudo apt-get install nodejs\nsudo apt-get install npm\n", "date": "Jan 22 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Clever Cheetah", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/45853530/npm-install-error-not-foundram-files-nodejs-npm-3-mnt-c-program-files-nodejs"},
{"title": ": not foundram Files/nodejs/npm: 3: : not foundram Files/nodejs/npm: 5:", "code": "export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n", "date": "Jan 22 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Clever Cheetah", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/45853530/npm-install-error-not-foundram-files-nodejs-npm-3-mnt-c-program-files-nodejs"},
{"title": "allow cross origin node", "code": "app.use(function(req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"*\");\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});", "date": "Apr 23 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Magnificent Manatee", "source_name": null, "source_url": null},
{"title": "access-control-allow-origin nodejs express", "code": "// Add headers\napp.use(function (req, res, next) {\n\n    // Website you wish to allow to connect\n    res.setHeader('Access-Control-Allow-Origin', 'http://localhost:8888');\n\n    // Request methods you wish to allow\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\n\n    // Request headers you wish to allow\n    res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');\n\n    // Set to true if you need the website to include cookies in the requests sent\n    // to the API (e.g. in case you use sessions)\n    res.setHeader('Access-Control-Allow-Credentials', true);\n\n    // Pass to next layer of middleware\n    next();\n});", "date": "Jul 08 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Precious Plover", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/18310394/no-access-control-allow-origin-node-apache-port-issue"},
{"title": "node express cors headers", "code": "var express = require('express')\nvar cors = require('cors')\nvar app = express()\n\napp.use(cors())\n\napp.get('/products/:id', function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for all origins!'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n", "date": "Mar 24 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Adventurous Aardvark", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/resources/middleware/cors.html"},
{"title": "express js cors", "code": "var express = require('express')\nvar cors = require('cors')  //use this\nvar app = express()\n\napp.use(cors()) //and this\n\napp.get('/user/:id', function (req, res, next) {\n  res.json({user: 'CORS enabled'})\n})\n\napp.listen(5000, function () {\n  console.log('CORS-enabled web server listening on port 5000')\n})", "date": "Nov 13 2020", "vote": 20, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "Access to XMLHttpRequest has been blocked by CORS policy node js", "code": "/*\nnpm i cors\nor\n yarn add cors\nthen in your node app\n*/\nconst cors = require('cors');\nconst corsOptions ={\n    origin:'http://localhost:3000', \n    credentials:true,            //access-control-allow-credentials:true\n    optionSuccessStatus:200\n}\napp.use(cors(corsOptions));", "date": "Mar 19 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mohamed Awde", "source_name": null, "source_url": null},
{"title": "access to static file nodejs", "code": "app.use(express.static(__dirname + '/public'));\n<link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\" />\n", "date": "May 14 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Amin :)", "source_name": null, "source_url": null},
{"title": ".ignore file nodejs", "code": "node_modules\nbuild\nnpm-debug.log\n.nyc\n.env\n.DS_Store", "date": "Apr 03 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bored Bison", "source_name": "www.brcline.com", "source_url": "https://www.brcline.com/blog/simple-git-ignore-file-for-nodejs"},
{"title": ": not foundram Files/nodejs/npm: 3:", "code": "$ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n$ # ... do node things\n", "date": "Nov 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Sparkling Swiftlet", "source_name": "github.com", "source_url": "https://github.com/microsoft/WSL/issues/3882"},
{"title": "\u201cnew Set\u201d is returning an empty set in nodejs", "code": "Instead of:\nconst set = new Set(['foo', 'bar', 'baz', 'foo']); // Set(3) { 'foo', 'bar', 'baz' }\nconst result = [...set] // []\n\nDo:\nconst set = new Set(['foo', 'bar', 'baz', 'foo']); // Set(3) { 'foo', 'bar', 'baz' }\nconst result = Array.from(set) // ['foo', 'bar', 'baz']", "date": "Apr 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Wild Wren", "source_name": null, "source_url": null},
{"title": "zerossl not working for node js", "code": "// Make sure to include the certificate bundle as well\nconst options = {\n  key: fs.readFileSync(\"/dir/key.key\"),\n  cert: fs.readFileSync(\"/dir/crt.crt\"),\n  ca: fs.readFileSync(\"/dir/ca.ca\"),\n};", "date": "May 26 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Concerned Chipmunk", "source_name": null, "source_url": null},
{"title": "writefile in node js", "code": "// writefile.js\n\nconst fs = require('fs');\n\nlet lyrics = 'But still I\\'m having memories of high speeds when the cops crashed\\n' + \n             'As I laugh, pushin the gas while my Glocks blast\\n' + \n             'We was young and we was dumb but we had heart';\n\n// write to a new file named 2pac.txt\nfs.writeFile('2pac.txt', lyrics, (err) => {\n    // throws an error, you could also catch it here\n    if (err) throw err;\n\n    // success case, the file was saved\n    console.log('Lyric saved!');\n});\n", "date": "Mar 15 2020", "vote": 11, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/writing-to-files-in-node-js/"},
{"title": "fs.writefile", "code": "const fs = require('fs');\n\nfs.writeFile(\"/tmp/test\", \"Hey there!\", function(err) {\n    if(err) {\n        return console.log(err);\n    }\n    console.log(\"The file was saved!\");\n}); \n\n// Or\nfs.writeFileSync('/tmp/test-sync', 'Hey there!');", "date": "Aug 08 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Jeff Spicoli", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/2496710/writing-files-in-node-js"},
{"title": "writefile in node js", "code": "// write_stream.js\n\nconst fs = require('fs');\n\nlet writeStream = fs.createWriteStream('secret.txt');\n\n// write some data with a base64 encoding\nwriteStream.write('aef35ghhjdk74hja83ksnfjk888sfsf', 'base64');\n\n// the finish event is emitted when all data has been flushed from the stream\nwriteStream.on('finish', () => {\n    console.log('wrote all data to file');\n});\n\n// close the stream\nwriteStream.end();\n", "date": "Mar 15 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/writing-to-files-in-node-js/"},
{"title": "writefile in node js", "code": "// append_file.js\n\nconst fs = require('fs');\n\n// add a line to a lyric file, using appendFile\nfs.appendFile('empirestate.txt', '\\nRight there up on Broadway', (err) => {\n    if (err) throw err;\n    console.log('The lyrics were updated!');\n});\n", "date": "Mar 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/writing-to-files-in-node-js/"},
{"title": "writefile in node js", "code": "fs.writeFile('2pac.txt', 'Some other lyric', 'ascii', callback);\n", "date": "Mar 15 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/writing-to-files-in-node-js/"},
{"title": "writefile in node js", "code": "// fs_write.js\n\nconst fs = require('fs');\n\n// specify the path to the file, and create a buffer with characters we want to write\nlet path = 'ghetto_gospel.txt';\nlet buffer = new Buffer('Those who wish to follow me\\nI welcome with my hands\\nAnd the red sun sinks at last');\n\n// open the file in writing mode, adding a callback function where we do the actual writing\nfs.open(path, 'w', function(err, fd) {\n    if (err) {\n        throw 'could not open file: ' + err;\n    }\n\n    // write the contents of the buffer, from position 0 to the end, to the file descriptor returned in opening our file\n    fs.write(fd, buffer, 0, buffer.length, null, function(err) {\n        if (err) throw 'error writing file: ' + err;\n        fs.close(fd, function() {\n            console.log('wrote the file successfully');\n        });\n    });\n});\n", "date": "Mar 15 2020", "vote": -2, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/writing-to-files-in-node-js/"},
{"title": "write buffer to file in node", "code": "fs = require('fs');\nfs.writeFile('helloworld.txt', 'Hello World!', function (err) {\n  if (err) return console.log(err);\n  console.log('Hello World > helloworld.txt');\n});\n", "date": "Apr 19 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Concerned Chimpanzee", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/file-system/how-to-write-files-in-nodejs/"},
{"title": "read json file nodejs", "code": "const fs = require('fs');\nconst path = require('path');\n\nlet rawdata = fs.readFileSync(path.resolve(__dirname, 'student.json'));\nlet student = JSON.parse(rawdata);\nconsole.log(student);", "date": "Apr 13 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Victor Grk", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-json-files-with-node-js/"},
{"title": "HOW WRITE AND SAVE JSON FILE IN NODEJS", "code": "'use strict';\n\nconst fs = require('fs');\n\nlet student = { \n    name: 'Mike',\n    age: 23, \n    gender: 'Male',\n    department: 'English',\n    car: 'Honda' \n};\n \nlet data = JSON.stringify(student, null, 2);\n\nfs.writeFile('student-3.json', data, (err) => {\n    if (err) throw err;\n    console.log('Data written to file');\n});\n\nconsole.log('This is after the write call');\n", "date": "Sep 30 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Handsome Hamerkop", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-json-files-with-node-js/"},
{"title": "write json file nodejs", "code": "const fs = require('fs');\nconst path = require('path');\n\nlet student = { \n    name: 'Mike',\n    age: 23, \n    gender: 'Male',\n    department: 'English',\n    car: 'Honda' \n};\n \nfs.writeFileSync(path.resolve(__dirname, 'student.json'), JSON.stringify(student));\n", "date": "Apr 13 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Victor Grk", "source_name": null, "source_url": null},
{"title": "windows terminal vai kill all node js port", "code": "taskkill /f /im node.exe", "date": "Jun 06 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Precious Puma", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/14790910/stop-all-instances-of-node-js-server"},
{"title": "where to create service angularor nodejs", "code": "      \n        content_copy\n      \n      ng generate service hero\n      (or)\n\t  ng g s hero\n    ", "date": "Dec 06 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Different Dingo", "source_name": "angular.io", "source_url": "https://angular.io/tutorial/toh-pt4"},
{"title": "where to create service angularor nodejs", "code": "      \n        content_copy\n      \n      ng generate service hero\n    ", "date": "Dec 06 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Different Dingo", "source_name": "angular.io", "source_url": "https://angular.io/tutorial/toh-pt4"},
{"title": "Can we use django with node", "code": "Please answer this question", "date": "Nov 29 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Colorful Caterpillar", "source_name": null, "source_url": null},
{"title": "which is more popular nodejs or django", "code": "You can't use django with nodejs, @Coloful Caterpillar. You have to use some hacky method", "date": "Feb 13 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Ill Impala", "source_name": null, "source_url": null},
{"title": "what is the meanof using next in nodejs", "code": "/*\nSome people always write return next() is to ensure that the execution stops after triggering the callback.\n\nIf you don't do it, you risk triggering the callback a second time later, which usually has devastating results. \n*/\n\napp.get('/users/:id?', function(req, res, next){\n    var id = req.params.id;\n\n    if(!id)\n        return next();\n\n    // do something\n});\n\n", "date": "Jun 16 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Faithful Fish", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/16810449/when-to-use-next-and-return-next-in-node-js"},
{"title": "what is package.json in node", "code": "All npm packages contain a file, usually in the project root, called package. json - this file holds various metadata relevant to the project. This file is used to give information to npm that allows it to identify the project as well as handle the project's dependencies.", "date": "Mar 15 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": null, "source_url": null},
{"title": "middleware in node js", "code": "var express = require('express')\nvar app = express()\n\nvar myLogger = function (req, res, next) {\n  console.log('LOGGED')\n  next()\n}\n\napp.use(myLogger)\n\napp.get('/', function (req, res) {\n  res.send('Hello World!')\n})\n\napp.listen(3000)\n", "date": "Mar 18 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Hilarious Hummingbird", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/guide/writing-middleware.html"},
{"title": "what is middleware in node js", "code": "Notice the call above to next(). Calling this function invokes the next middleware function in the app. The next() function is not a part of the Node.js or Express API, but is the third argument that is passed to the middleware function. The next() function could be named anything, but by convention it is always named \u201cnext\u201d. To avoid confusion, always use this convention.\n", "date": "Jul 21 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Beautiful Badger", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/guide/writing-middleware.html"},
{"title": "what is app.use() used for", "code": "//app.get will see only exact match ex.> \"/book\" here app.get will not allow /book/1, etc \n//but app.use is different see below\n\n//what is difference between app.use and app.all\n//app.use takes only 1 callback while app.all takes multiple callbacks\n//app.use will only see whether url starts with specified path But, app.all() will match the complete path\n\napp.use( \"/book\" , middleware);\n// will match /book\n// will match /book/author\n// will match /book/subject\n\napp.all( \"/book\" , handler);\n// will match /book\n// won't match /book/author   \n// won't match /book/subject    \n\napp.all( \"/book/*\" , handler);\n// won't match /book        \n// will match /book/author\n// will match /book/subject", "date": "Jun 16 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Viraj", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/15601703/difference-between-app-use-and-app-get-in-express-js"},
{"title": "express router middleware", "code": "var express = require('express')\nvar app = express()\nvar router = express.Router()\n\n// a middleware function with no mount path. This code is executed for every request to the router\nrouter.use(function (req, res, next) {\n  console.log('Time:', Date.now())\n  next()\n})\n\n// a middleware sub-stack shows request info for any type of HTTP request to the /user/:id path\nrouter.use('/user/:id', function (req, res, next) {\n  console.log('Request URL:', req.originalUrl)\n  next()\n}, function (req, res, next) {\n  console.log('Request Type:', req.method)\n  next()\n})\n\n// a middleware sub-stack that handles GET requests to the /user/:id path\nrouter.get('/user/:id', function (req, res, next) {\n  // if the user ID is 0, skip to the next router\n  if (req.params.id === '0') next('route')\n  // otherwise pass control to the next middleware function in this stack\n  else next()\n}, function (req, res, next) {\n  // render a regular page\n  res.render('regular')\n})\n\n// handler for the /user/:id path, which renders a special page\nrouter.get('/user/:id', function (req, res, next) {\n  console.log(req.params.id)\n  res.render('special')\n})\n\n// mount the router on the app\napp.use('/', router)\n", "date": "Jan 10 2021", "vote": -2, "tags": ["javascript", "nodejs"], "posted_by": "Evil Eagle", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/guide/using-middleware.html"},
{"title": "what is amqp10 policy nodejs", "code": "var AMQPClient = require('amqp10').Client,\n    Promise = require('bluebird');\n\nvar client = new AMQPClient(); // Uses PolicyBase default policy\nclient.connect('amqp://localhost')\n  .then(function() {\n    return Promise.all([\n      client.createReceiver('amq.topic'),\n      client.createSender('amq.topic')\n    ]);\n  })\n  .spread(function(receiver, sender) {\n    receiver.on('errorReceived', function(err) { // check for errors });\n    receiver.on('message', function(message) {\n      console.log('Rx message: ', message.body);\n    });\n\n    return sender.send({ key: \"Value\" });\n  })\n  .error(function(err) {\n    console.log(\"error: \", err);\n  });\n", "date": "Oct 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Thoughtful Teira", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/amqp10"},
{"title": "what does results.push({}) nodejs mean", "code": "const mongoose = require('mongoose');\n    var data = async function () {\n         var array = [];\n         const finalResults = await new Promise((resolve, reject) => {\n            mongoose.connection.collection(\"organizations\").find({}).toArray(function(err, result) {\n              resolve(result);\n           });\n      });\n\n     for(var i = 0; i < finalResults.length; i++)\n     {\n          var a = finalResults[i].name;\n           array.push(a);\n      }\n        return array;\n    };\n\n    module.exports = {\n        data: data,\n    };", "date": "Apr 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Xerothermic Xenomorph", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/55849319/how-to-push-query-results-to-array-variable-in-node-js"},
{"title": "what does results.push({}) nodejs mean", "code": "const mongoose = require('mongoose');\n\nvar data = async function () {\n\n    const array = await mongoose.connection.collection(\"organizations\").find({}).toArray(function(err, result) {\n        if (err) throw err;\n        return result.map(r => r.name);\n    });\n\n    console.log(array); //this shows only [] meaning that the array is now empty.\n                        //this is shown in the log before the first log\n    return array;\n};\n\nmodule.exports = {\n    data: data,\n};", "date": "Apr 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Xerothermic Xenomorph", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/55849319/how-to-push-query-results-to-array-variable-in-node-js"},
{"title": "web scraping node js puppeteer", "code": "const puppeteer = require('puppeteer')\nconst $ = require('cheerio')\n\n(async () => {\n\tconst browser = await puppeteer.launch()\n\tconst page = await browser.newPage()\n\tawait page.goto('https://www.imdb.com/title/tt7126948/?ref_=nv_sr_srsg_0', { waitUntil: 'networkidle0' })\n\n\tconst content = await page.evaluate(() => document.body.innerHTML)\n\tconst data = $('div[class=\"title_wrapper\"]', content).find('h1').text()\n\n\tconsole.log(data)\n\n\tawait browser.close()\n})()", "date": "Dec 27 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "using multiparty with node js express", "code": "var express = require('express');\nvar multiparty = require('connect-multiparty'),\n    multipartyMiddleware = multiparty({ uploadDir: './imagesPath' });\n\nvar router = express.Router();\n\nrouter.post('/', multipartyMiddleware, function(req, res) {\n  console.log(req.body, req.files);\n  var file = req.files.file;\n  console.log(file.name);\n  console.log(file.type);\n  res.status(200).send('OK');\n});\n\nmodule.exports = router;", "date": "May 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "ZAC87", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/32914272/proper-way-to-use-connect-multiparty-with-express-js"},
{"title": "use static pages nodejs", "code": "app.use(express.static('public'));", "date": "Apr 20 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Confused Chamois", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/static-files.html"},
{"title": "nodejs static website", "code": "This is the Best Static Website Framework !!\nTry this !!\n\nhttps://github.com/DFCommunity/Hexo-Web-Nary/", "date": "Jul 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Courageous Caiman", "source_name": null, "source_url": null},
{"title": "what is @ atsign in first of file path nodejs", "code": "  const path = require('path');\n\n  ...\n  resolve: {\n    extensions: ['.js', '.vue', '.json'],\n    alias: {\n      ...\n      '@': path.resolve('src'),\n    }\n  },\n  ...\n", "date": "Oct 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Light Lemur", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/42749973/es6-import-using-at-sign-in-path-in-a-vue-js-project-using-webpack"},
{"title": "web scraping nodejs", "code": "const puppeteer = require('puppeteer')\nconst $ = require('cheerio')\n\n(async () => {\n\tconst browser = await puppeteer.launch()\n\tconst page = await browser.newPage()\n\tawait page.goto('https://www.imdb.com/title/tt7126948/?ref_=nv_sr_srsg_0', { waitUntil: 'networkidle0' })\n\n\tconst content = await page.evaluate(() => document.body.innerHTML)\n\tconst data = $('div[class=\"title_wrapper\"]', content).find('h1').text()\n\n\tconsole.log(data)\n\n\tawait browser.close()\n})()", "date": "Dec 27 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "node.js web scraping", "code": "//eventhough deprecated, still able to use\nconst request = require('request');\nrequest('http://www.google.com', function (error, response, body) {\n  console.error('error:', error); // Print the error if one occurred\n  console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n  console.log('body:', body); // Print the HTML for the Google homepage.\n});", "date": "Apr 01 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Hydrogen Studio", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/request"},
{"title": "validate password in nodejs", "code": "// joi-password-complexity is build over joi\nnpm i joi-password-complexity\nconst passwordComplexity = require(\"joi-password-complexity\");\nconst complexityOptions = {min: ,max: ,lowercase: ,\n                           uppercase: , numeric: ,symbol: , requirementCount: };\n-> passwordComplexity().validate(\"<your_password>\");\nor\n-> passwordComplexity(complexityOptions).validate(\"<your_password>\");", "date": "Oct 02 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "VeNOM", "source_name": null, "source_url": null},
{"title": "validate password in nodejs", "code": "akdffg", "date": "Apr 29 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Combative Cicada", "source_name": null, "source_url": null},
{"title": "use ca certifcate node js", "code": "$ export NODE_EXTRA_CA_CERTS=[your CA certificate file path]\n", "date": "Jan 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Disturbed Duck", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/29283040/how-to-add-custom-certificate-authority-ca-to-nodejs"},
{"title": "updating node js ubuntu", "code": "curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -\nsudo apt-get install -y nodejs", "date": "Aug 24 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Hurt Hornet", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/41195952/updating-nodejs-on-ubuntu-16-04"},
{"title": "update node ubuntu", "code": "sudo npm cache clean -f\nsudo npm install -g n\nsudo n stable\n", "date": "Sep 22 2020", "vote": 9, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Average Ant", "source_name": "askubuntu.com", "source_url": "https://askubuntu.com/questions/426750/how-can-i-update-my-nodejs-to-the-latest-version"},
{"title": "ubuntu update nodejs", "code": "# Using Ubuntu\ncurl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -\nsudo apt-get install -y nodejs\n\n# Using Debian, as root\ncurl -sL https://deb.nodesource.com/setup_13.x | bash -\napt-get install -y nodejs\n", "date": "Sep 04 2020", "vote": 2, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Poor Polecat", "source_name": "askubuntu.com", "source_url": "https://askubuntu.com/questions/426750/how-can-i-update-my-nodejs-to-the-latest-version"},
{"title": "upgrade node ubuntu", "code": "sudo npm cache clean -f\nsudo npm install -g n\nsudo n stable", "date": "Feb 27 2021", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Average Aardvark", "source_name": "askubuntu.com", "source_url": "https://askubuntu.com/questions/426750/how-can-i-update-my-nodejs-to-the-latest-version"},
{"title": "upgrade nodejs ubuntu", "code": "npm cache clean -f", "date": "Jan 10 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Sore Starling", "source_name": "phoenixnap.com", "source_url": "https://phoenixnap.com/kb/update-node-js-version"},
{"title": "ubuntu update nodejs", "code": "# Using Ubuntu\ncurl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -\nsudo apt-get install -y nodejs\n\n# Using Debian, as root\ncurl -sL https://deb.nodesource.com/setup_12.x | bash -\napt-get install -y nodejs\n", "date": "Sep 04 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Poor Polecat", "source_name": "askubuntu.com", "source_url": "https://askubuntu.com/questions/426750/how-can-i-update-my-nodejs-to-the-latest-version"},
{"title": "use nodejs mysql", "code": "var\u00a0mysql\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0require('mysql');var\u00a0connection\u00a0=\u00a0mysql.createConnection({\u00a0\u00a0host\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0'localhost',\u00a0\u00a0user\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0'me',\u00a0\u00a0password\u00a0:\u00a0'secret',\u00a0\u00a0database\u00a0:\u00a0'my_db'});\u00a0connection.connect();\u00a0connection.query('SELECT\u00a01\u00a0+\u00a01\u00a0AS\u00a0solution',\u00a0function\u00a0(error,\u00a0results,\u00a0fields)\u00a0{\u00a0\u00a0if\u00a0(error)\u00a0throw\u00a0error;\u00a0\u00a0console.log('The\u00a0solution\u00a0is:\u00a0',\u00a0results[0].solution);});\u00a0connection.end();", "date": "Dec 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Unknown dev", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/mysql"},
{"title": "node check if file exists", "code": "const fs = require(\"fs\"); // Or `import fs from \"fs\";` with ESM\nif (fs.existsSync(path)) {\n    // Do something\n}", "date": "May 22 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Witty Worm", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/4482686/check-synchronously-if-file-directory-exists-in-node-js"},
{"title": "use node js to check if a json file exists", "code": "const fs = require('fs')\n\nconst path = './file.txt'\n\ntry {\n  if (fs.existsSync(path)) {\n    //file exists\n  }\n} catch(err) {\n  console.error(err)\n}\n", "date": "Nov 02 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tame Tern", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/how-to-check-if-file-exists-node/"},
{"title": "use node js to check if a json file exists", "code": "const fs = require('fs')\n\nconst path = './file.txt'\n//Async method\nfs.access(path, fs.F_OK, (err) => {\n  if (err) {\n    console.error(err)\n    return\n  }\n\n  //file exists\n})\n", "date": "Nov 02 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tame Tern", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/how-to-check-if-file-exists-node/"},
{"title": "check if file exists javascript", "code": "function executeIfFileExist(src, callback) {\n    var xhr = new XMLHttpRequest()\n    xhr.onreadystatechange = function() {\n        if (this.readyState === this.DONE) {\n            callback()\n        }\n    }\n    xhr.open('HEAD', src)\n}", "date": "May 20 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "TC5550", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/3646914/how-do-i-check-if-file-exists-in-jquery-or-pure-javascript"},
{"title": "updating node js ubuntu", "code": "curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -\nsudo apt-get install -y nodejs", "date": "Aug 24 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Hurt Hornet", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/41195952/updating-nodejs-on-ubuntu-16-04"},
{"title": "update nodejs raspberry pi", "code": "sudo apt install nodejs", "date": "Mar 22 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Shiny Snail", "source_name": "medium.com", "source_url": "https://medium.com/@thedyslexiccoder/how-to-update-nodejs-npm-on-a-raspberry-pi-4-da75cad4148c"},
{"title": "update node js version ubuntu", "code": "sudo npm cache clean -f\nsudo npm install -g n\nsudo n stable\n", "date": "Aug 28 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Alive Armadillo", "source_name": "askubuntu.com", "source_url": "https://askubuntu.com/questions/426750/how-can-i-update-my-nodejs-to-the-latest-version"},
{"title": "update nodejs", "code": "//First, clear the npm cache:\n\tnpm cache clean -f\n\n//Install n, Node\u2019s version manager:\n\tnpm install -g n\n    \n//With the n module installed, you can use it to:\n\tInstall the latest stable version: n stable\n\tInstall the latest release: n latest", "date": "Apr 30 2020", "vote": 21, "tags": ["javascript", "nodejs"], "posted_by": "D@RK$T@R", "source_name": null, "source_url": null},
{"title": "how to update node js version", "code": "//check node version\n>node -v\n// let's install a program called n that will let us easily switch \n//between Node versions.\n>npm install -g n\n//Upgrading to the latest stable version\n>n stable \n//Changing to a specific version\n>n 10.16.0\n", "date": "Jul 14 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Volcano", "source_name": null, "source_url": null},
{"title": "upgrade node version", "code": "nvm install v12.16.2", "date": "Apr 25 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Wicked Walrus", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/10075990/upgrading-node-js-to-latest-version"},
{"title": "node updaten", "code": "npm cache clean -f\nnpm install -g n\nn stable", "date": "Oct 15 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Dead Deer", "source_name": null, "source_url": null},
{"title": "how to upgrade node.js", "code": "#linux\nsudo npm install n -g\nsudo n stable\n#windows\n#install the .msi from https://nodejs.org/en/download/", "date": "Dec 20 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Pigi", "source_name": null, "source_url": null},
{"title": "update nodejs version", "code": "npm cache clean -f", "date": "Jan 26 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bad Bat", "source_name": "phoenixnap.com", "source_url": "https://phoenixnap.com/kb/update-node-js-version"},
{"title": "updating node js ubuntu", "code": "curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -\nsudo apt-get install -y nodejs", "date": "Aug 24 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Hurt Hornet", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/41195952/updating-nodejs-on-ubuntu-16-04"},
{"title": "update nodejs", "code": "//First, clear the npm cache:\n\tnpm cache clean -f\n\n//Install n, Node\u2019s version manager:\n\tnpm install -g n\n    \n//With the n module installed, you can use it to:\n\tInstall the latest stable version: n stable\n\tInstall the latest release: n latest", "date": "Apr 30 2020", "vote": 21, "tags": ["javascript", "nodejs"], "posted_by": "D@RK$T@R", "source_name": null, "source_url": null},
{"title": "update node ubuntu", "code": "sudo npm cache clean -f\nsudo npm install -g n\nsudo n stable\n", "date": "Sep 22 2020", "vote": 9, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Average Ant", "source_name": "askubuntu.com", "source_url": "https://askubuntu.com/questions/426750/how-can-i-update-my-nodejs-to-the-latest-version"},
{"title": "ubuntu update nodejs", "code": "# Using Ubuntu\ncurl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -\nsudo apt-get install -y nodejs\n\n# Using Debian, as root\ncurl -sL https://deb.nodesource.com/setup_13.x | bash -\napt-get install -y nodejs\n", "date": "Sep 04 2020", "vote": 2, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Poor Polecat", "source_name": "askubuntu.com", "source_url": "https://askubuntu.com/questions/426750/how-can-i-update-my-nodejs-to-the-latest-version"},
{"title": "upgrade node ubuntu", "code": "sudo npm cache clean -f\nsudo npm install -g n\nsudo n stable", "date": "Feb 27 2021", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Average Aardvark", "source_name": "askubuntu.com", "source_url": "https://askubuntu.com/questions/426750/how-can-i-update-my-nodejs-to-the-latest-version"},
{"title": "update nodejs ubuntu", "code": "curl -sL https://deb.nodesource.com/setup_15.x | sudo -E bash -\nsudo apt-get install -y nodejs", "date": "Jan 20 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Lazy Locust", "source_name": null, "source_url": null},
{"title": "uninstall node js from mac", "code": "sudo rm -rf ~/.npm ~/.nvm ~/node_modules ~/.node-gyp ~/.npmrc ~/.node_repl_history\nsudo rm -rf /usr/local/bin/npm /usr/local/bin/node-debug /usr/local/bin/node /usr/local/bin/node-gyp\nsudo rm -rf /usr/local/share/man/man1/node* /usr/local/share/man/man1/npm*\nsudo rm -rf /usr/local/include/node /usr/local/include/node_modules\nsudo rm -rf /usr/local/lib/node /usr/local/lib/node_modules /usr/local/lib/dtrace/node.d\nsudo rm -rf /opt/local/include/node /opt/local/bin/node /opt/local/lib/node\nsudo rm -rf /usr/local/share/doc/node\nsudo rm -rf /usr/local/share/systemtap/tapset/node.stp\n\nbrew uninstall node\nbrew doctor\nbrew cleanup --prune-prefix", "date": "Jul 07 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Inexpensive Ibis", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/11177954/how-do-i-completely-uninstall-node-js-and-reinstall-from-beginning-mac-os-x"},
{"title": "upgrading node on mac", "code": "1 brew update\n2 brew upgrade node", "date": "Feb 12 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Cheerful Chimpanzee", "source_name": "bytearcher.com", "source_url": "https://bytearcher.com/articles/ways-to-get-the-latest-node.js-version-on-a-mac/"},
{"title": "update nodejs mac", "code": "sudo npm cache clean -f \nsudo npm install -g n\nsudo n stable/lts ", "date": "Oct 21 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Curious Coyote", "source_name": null, "source_url": null},
{"title": "update to node 12 mac", "code": "// Fix node not found first\t\nsudo chown -R `whoami`:admin /usr/local/include/node\n    sudo chown -R `whoami`:admin /usr/local/bin\n    sudo chown -R `whoami`:admin /usr/local/share\n    sudo chown -R `whoami`:admin /usr/local/lib/dtrace \n\n brew link --overwrite node\n \n// Then: \nsudo npm cache clean -f \nsudo npm install -g n \nsudo n stable/lts", "date": "Dec 07 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Light Ladybird", "source_name": null, "source_url": null},
{"title": "findone and update mongoose", "code": "// Using queries with promise chaining\nModel.findOne({ name: 'Mr. Anderson' }).\n  then(doc => Model.updateOne({ _id: doc._id }, { name: 'Neo' })).\n  then(() => Model.findOne({ name: 'Neo' })).\n  then(doc => console.log(doc.name)); // 'Neo'\n\n// Using queries with async/await\nconst doc = await Model.findOne({ name: 'Neo' });\nconsole.log(doc.name); // 'Neo'", "date": "May 28 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Lucky Lapwing", "source_name": null, "source_url": null},
{"title": "update query in mongoose", "code": "var conditions = { name: 'bourne' } \n  , update = { $inc: { visits: 1 }}\n\nModel.update(conditions, update, { multi: true }).then(updatedRows=>{\n  \n}).catch(err=>{\n  console.log(err)\n  \n})", "date": "Jun 10 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Adventurous Aardvark", "source_name": "mongoosejs.com", "source_url": "https://mongoosejs.com/docs/2.7.x/docs/updating-documents.html"},
{"title": "update in mongoose node js", "code": "app.put('/student/:id', (req, res) => {\n    Student.findByIdAndUpdate(req.params.id, req.body, (err, user) => {\n        if (err) {\n            return res\n                .status(500)\n                .send({error: \"unsuccessful\"})\n        };\n        res.send({success: \"success\"});\n    });\n\n});", "date": "Mar 07 2021", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Aggressive Anaconda", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/7267102/how-do-i-update-upsert-a-document-in-mongoose"},
{"title": "update in mongoose node js", "code": "router.patch('/:id', (req, res, next) => {\n    const id = req.params.id;\n    Product.findByIdAndUpdate(id, req.body, {\n            new: true\n        },\n        function(err, model) {\n            if (!err) {\n                res.status(201).json({\n                    data: model\n                });\n            } else {\n                res.status(500).json({\n                    message: \"not found any relative data\"\n                })\n            }\n        });\n});\n", "date": "Mar 07 2021", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Aggressive Anaconda", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/7267102/how-do-i-update-upsert-a-document-in-mongoose"},
{"title": "update nodejs", "code": "//First, clear the npm cache:\n\tnpm cache clean -f\n\n//Install n, Node\u2019s version manager:\n\tnpm install -g n\n    \n//With the n module installed, you can use it to:\n\tInstall the latest stable version: n stable\n\tInstall the latest release: n latest", "date": "Apr 30 2020", "vote": 21, "tags": ["javascript", "nodejs"], "posted_by": "D@RK$T@R", "source_name": null, "source_url": null},
{"title": "how to update node js version", "code": "//check node version\n>node -v\n// let's install a program called n that will let us easily switch \n//between Node versions.\n>npm install -g n\n//Upgrading to the latest stable version\n>n stable \n//Changing to a specific version\n>n 10.16.0\n", "date": "Jul 14 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Volcano", "source_name": null, "source_url": null},
{"title": "ubuntu update nodejs", "code": "# Using Ubuntu\ncurl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -\nsudo apt-get install -y nodejs\n\n# Using Debian, as root\ncurl -sL https://deb.nodesource.com/setup_13.x | bash -\napt-get install -y nodejs\n", "date": "Sep 04 2020", "vote": 2, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Poor Polecat", "source_name": "askubuntu.com", "source_url": "https://askubuntu.com/questions/426750/how-can-i-update-my-nodejs-to-the-latest-version"},
{"title": "upgrade node version", "code": "nvm install v12.16.2", "date": "Apr 25 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Wicked Walrus", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/10075990/upgrading-node-js-to-latest-version"},
{"title": "node updaten", "code": "npm cache clean -f\nnpm install -g n\nn stable", "date": "Oct 15 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Dead Deer", "source_name": null, "source_url": null},
{"title": "how to upgrade node.js", "code": "#linux\nsudo npm install n -g\nsudo n stable\n#windows\n#install the .msi from https://nodejs.org/en/download/", "date": "Dec 20 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Pigi", "source_name": null, "source_url": null},
{"title": "tskill nodejs port", "code": "For Linux/Mac OS:\n$ lsof -i tcp:3000\n$ kill -9 PID\n\nOn Windows:\nnetstat -ano | findstr :3000\ntskill typeyourPIDhere", "date": "Apr 04 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Obedient Oyster", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/a/45130296"},
{"title": "Travis ci configuration for node js react project", "code": "language: node_js\nnode_js:\n  - node\nenv:\n  global:\n    # include $HOME/.local/bin for `aws`\n    - PATH=$HOME/.local/bin:$PATH\nbefore_install:\n  - pyenv global 3.7.1\n  - pip install -U pip\n  - pip install awscli\nscript:\n  - yarn build\n  - echo \"Commit sha - $TRAVIS_COMMIT\"\n  - mkdir -p dist/@thawkin3/root-config/$TRAVIS_COMMIT\n  - mv dist/*.* dist/@thawkin3/root-config/$TRAVIS_COMMIT/\ndeploy:\n  provider: s3\n  access_key_id: \"$AWS_ACCESS_KEY_ID\"\n  secret_access_key: \"$AWS_SECRET_ACCESS_KEY\"\n  bucket: \"single-spa-demo\"\n  region: \"us-west-2\"\n  cache-control: \"max-age=31536000\"\n  acl: \"public_read\"\n  local_dir: dist\n  skip_cleanup: true\n  on:\n    branch: master\nafter_deploy:\n  - chmod +x after_deploy.sh\n  - \"./after_deploy.sh\"", "date": "May 12 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Crowded Cormorant", "source_name": "www.freecodecamp.org", "source_url": "https://www.freecodecamp.org/news/developing-and-deploying-micro-frontends-with-single-spa/"},
{"title": "transaction commit rollback nodejs", "code": "const mysql = require('mysql2/promise')\n\n/** See documentation from original answer */\nasync function transaction(queries, queryValues) {\n    if (queries.length !== queryValues.length) {\n        return Promise.reject(\n            'Number of provided queries did not match the number of provided query values arrays'\n        )\n    }\n    const connection = await mysql.createConnection(databaseConfigs)\n    try {\n        await connection.beginTransaction()\n        const queryPromises = []\n\n        queries.forEach((query, index) => {\n            queryPromises.push(connection.query(query, queryValues[index]))\n        })\n        const results = await Promise.all(queryPromises)\n        await connection.commit()\n        await connection.end()\n        return results\n    } catch (err) {\n        await connection.rollback()\n        await connection.end()\n        return Promise.reject(err)\n    }\n}\n", "date": "Oct 02 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Spotless Stag", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/15760067/node-js-mysql-transaction"},
{"title": "install node js lts ubuntu 18.04", "code": "// Enabling NodeSource Repository\n// replace %V% with desired major version\ncurl -sL https://deb.nodesource.com/setup_%V%.x | sudo bash -\n// Install using apt-get\nsudo apt-get install -y nodejs\n// check installed node version\nnode --version", "date": "Mar 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "abessrour", "source_name": null, "source_url": null},
{"title": "install nodejs from ubuntu 18.04", "code": "sudo bash nodesource_setup.sh\n", "date": "Jun 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Inquisitive Impala", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-18-04"},
{"title": "ubuntu 18.04 nodejs insatll", "code": "$ curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -", "date": "Mar 26 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Expensive Gilwon", "source_name": "soojae.tistory.com", "source_url": "https://soojae.tistory.com/25"},
{"title": "token authenticate nodejs", "code": "As a first test to ensure that you can connect to your FusionAuth service, create a test.js file, replacing the first parameter in the FusionAuthClient constructor [your API Key here] with a valid API key from your FusionAuth environment. Replace the email address user@example.com with a valid user in your FusionAuth environment. If you just installed FusionAuth there may only be a single user which will be the email address used to complete the Setup Wizard.\n\n", "date": "Mar 01 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Curious Capybara", "source_name": null, "source_url": null},
{"title": "token authentication in nodejs", "code": "If the request contains the access token, then the server will verify whether it was issued by the server itself using the stored secret. In case the token is expired or recognized as a one not signed by the server, the jsonwebtoken\u2019s verify method will throw an error. We can handle the error to return a 401 error back to the client.", "date": "Mar 01 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Curious Capybara", "source_name": null, "source_url": null},
{"title": "token authentication in nodejs", "code": "If the request contains the access token, then the server will verify whether it was issued by the server itself using the stored secret. In case the token is expired or recognized as a one not signed by the server, the jsonwebtoken\u2019s verify method will throw an error. We can handle the error to return a 401 error back to the client.", "date": "Mar 01 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Curious Capybara", "source_name": null, "source_url": null},
{"title": "the original image of nodejs image", "code": "debian:stretch", "date": "Apr 27 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Plan Master", "source_name": null, "source_url": null},
{"title": "The \"chunk\" argument must be one of type string or Buffer. Received type object nodejs", "code": "//change res.end() to res.send()", "date": "Feb 08 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Arex", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/51929027/throw-new-err-invalid-arg-typechunk-string-buffer-chunktypeerrorerr"},
{"title": "Texto unit\u00e1rio no node js", "code": "textos unit\u00e1rios no node js?", "date": "Feb 23 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Drab Dingo", "source_name": null, "source_url": null},
{"title": "create a customer in stripe node.js", "code": "const stripe = require('stripe')('api_key');\n\nstripe.customers.create({ email: 'email_address' }, (error, customer) => {\n\tif (error) {\n      console.error(error);\n    } else {\n      console.log(customer);\n    }\n});", "date": "Nov 12 2019", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tammar Wallaby", "source_name": null, "source_url": null},
{"title": "stripe subscription node js", "code": "var stripe = require('stripe')('sk_test_FceQdct2QZpFfQZC4Wx9hGeo00ghaTeqAc');\n\nstripe.subscriptions.create(\n  {\n    customer: 'cus_HKZRMeUnGPOb66',\n    items: [{price: 'gold'}],\n  },\n  function(err, subscription) {\n    // asynchronously called\n  }\n);", "date": "May 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tender Tamarin", "source_name": "stripe.com", "source_url": "https://stripe.com/docs/api/subscriptions/create"},
{"title": "stripe stripe js", "code": "import\u00a0{loadStripe}\u00a0from\u00a0'@stripe/stripe-js';\u00a0const\u00a0stripe\u00a0=\u00a0await\u00a0loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');", "date": "Dec 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "godwin_kvg", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/@stripe/stripe-js"},
{"title": "stop python script nodejs", "code": "var python_process;\n\nrouter.get('/start_python', function(req, res) {\n    var PythonShell = require('python-shell');\n    var pyshell = new PythonShell('general.py');\n\n    pyshell.end(function (err) {\n        if (err) {\n            console.log(err);\n        }\n    });\n    python_process = pyshell.childProcess;\n\n    res.send('Started.');\n});\n\n// this stops the process\nrouter.get('/stop_python', function(req, res) {\n   python_process.kill('SIGINT');\n   res.send('Stopped');\n});", "date": "May 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Precious Pheasant", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/45758671/how-to-kill-a-python-shell-module-process-in-node-js"},
{"title": "streami node js", "code": "const fs = require('fs');\nconst r = fs.createReadStream('file.txt');\nconst z = zlib.createGzip();\nconst w = fs.createWriteStream('file.txt.gz');\nr.pipe(z).pipe(w);", "date": "Dec 16 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Homely Hamster", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/stream.html#stream_readable_pipe_destination_options"},
{"title": "stream in node js", "code": "A stream is an abstract interface for working with streaming data in Node.js. The stream module provides an API for implementing the stream interface.\n\nThere are many stream objects provided by Node.js. For instance, a request to an HTTP server and process.stdout are both stream instances.\n\nStreams can be readable, writable, or both. All streams are instances of EventEmitter.\n\nTo access the stream module\n\nconst stream = require('stream');\nor import stream from 'stream';\n\nThere are four fundamental stream types within Node.js:\nWritable: streams to which data can be written (for example, fs.createWriteStream()).\nReadable: streams from which data can be read (for example, fs.createReadStream()).\nDuplex: streams that are both Readable and Writable (for example, net.Socket).\nTransform: Duplex streams that can modify or transform the data as it is written and read (for example, zlib.createDeflate()).", "date": "Sep 28 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "kepl3r", "source_name": null, "source_url": null},
{"title": "nodejs create stream", "code": "const { Readable } = require(\"stream\")\n\nconst readable = Readable.from([\"input string\"])\n\nreadable.on(\"data\", (chunk) => {\n  console.log(chunk) // will be called once with `\"input string\"`\n})", "date": "Jul 21 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "North Bear", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/12755997/how-to-create-streams-from-string-in-node-js"},
{"title": "ssl configuration in node js", "code": "const https = require(\"https\"),\n  fs = require(\"fs\"),\n  helmet = require(\"helmet\");\n\nconst options = {\n  key: fs.readFileSync(\"/srv/www/keys/my-site-key.pem\"),\n  cert: fs.readFileSync(\"/srv/www/keys/chain.pem\")\n};\n\nconst app = express();\n\napp.use(helmet()); // Add Helmet as a middleware\n\napp.use((req, res) => {\n  res.writeHead(200);\n  res.end(\"hello world\\n\");\n});\n\napp.listen(8000);\n\nhttps.createServer(options, app).listen(8080);\n", "date": "Jan 08 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Worried Wallaby", "source_name": "www.sitepoint.com", "source_url": "https://www.sitepoint.com/how-to-use-ssltls-with-node-js/"},
{"title": "split and join in node js", "code": "var str = \"How are you doing today?\";\nvar res = str.split(\" \");\nvar join = res.join(\",\");", "date": "Nov 29 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Embarrassed Echidna", "source_name": null, "source_url": null},
{"title": "sqlite3 multithreading nodejs", "code": "const cluster = require('cluster');\nconst db = new sqlite3.Database(':memory:')\n\nif (cluster.isMaster) {\n    console.log(`Master ${process.pid} is running`);\n    cluster.fork()\n        .on('exit', (worker, code, signal) => {\n            console.log(`worker ${worker.process.pid} died`);\n        });\n    cluster.fork()\n        .on('exit', (worker, code, signal) => {\n            console.log(`worker ${worker.process.pid} died`);\n        });\n\n} else if (cluster.worker.id === 1){\n  db.run(QUERY1);\n} else {\n db.run(QUERY2);\n}\n", "date": "Apr 13 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "JulesG10", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/28034781/parallel-sqlite-queries-in-node-js"},
{"title": "streami node js", "code": "const fs = require('fs');\nconst r = fs.createReadStream('file.txt');\nconst z = zlib.createGzip();\nconst w = fs.createWriteStream('file.txt.gz');\nr.pipe(z).pipe(w);", "date": "Dec 16 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Homely Hamster", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/stream.html#stream_readable_pipe_destination_options"},
{"title": "stream in node js", "code": "A stream is an abstract interface for working with streaming data in Node.js. The stream module provides an API for implementing the stream interface.\n\nThere are many stream objects provided by Node.js. For instance, a request to an HTTP server and process.stdout are both stream instances.\n\nStreams can be readable, writable, or both. All streams are instances of EventEmitter.\n\nTo access the stream module\n\nconst stream = require('stream');\nor import stream from 'stream';\n\nThere are four fundamental stream types within Node.js:\nWritable: streams to which data can be written (for example, fs.createWriteStream()).\nReadable: streams from which data can be read (for example, fs.createReadStream()).\nDuplex: streams that are both Readable and Writable (for example, net.Socket).\nTransform: Duplex streams that can modify or transform the data as it is written and read (for example, zlib.createDeflate()).", "date": "Sep 28 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "kepl3r", "source_name": null, "source_url": null},
{"title": "nodejs create stream", "code": "const { Readable } = require(\"stream\")\n\nconst readable = Readable.from([\"input string\"])\n\nreadable.on(\"data\", (chunk) => {\n  console.log(chunk) // will be called once with `\"input string\"`\n})", "date": "Jul 21 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "North Bear", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/12755997/how-to-create-streams-from-string-in-node-js"},
{"title": "socket.io emit to all other clients", "code": "// sending to sender-client only\nsocket.emit('message', \"this is a test\");\n\n// sending to all clients, include sender\nio.emit('message', \"this is a test\");\n\n// sending to all clients except sender\nsocket.broadcast.emit('message', \"this is a test\");\n\n// sending to all clients in 'game' room(channel) except sender\nsocket.broadcast.to('game').emit('message', 'nice game');\n\n// sending to all clients in 'game' room(channel), include sender\nio.in('game').emit('message', 'cool game');\n\n// sending to sender client, only if they are in 'game' room(channel)\nsocket.to('game').emit('message', 'enjoy the game');\n\n// sending to all clients in namespace 'myNamespace', include sender\nio.of('myNamespace').emit('message', 'gg');\n\n// sending to individual socketid\nsocket.broadcast.to(socketid).emit('message', 'for your eyes only');\n\n// list socketid\nfor (var socketid in io.sockets.sockets) {}\n OR\nObject.keys(io.sockets.sockets).forEach((socketid) => {});", "date": "May 16 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Silly Seahorse", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/10058226/send-response-to-all-clients-except-sender"},
{"title": "socket emit to specific room using nodejs socket.io", "code": "io.on('connection', function(socket){  socket.to('some room').emit('some event');});", "date": "Oct 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Suhail Khan", "source_name": "socket.io", "source_url": "https://socket.io/docs/rooms/"},
{"title": "socket emit cheat sheet", "code": "io.on('connect', onConnect);function onConnect(socket){  // sending to the client  socket.emit('hello', 'can you hear me?', 1, 2, 'abc');  // sending to all clients except sender  socket.broadcast.emit('broadcast', 'hello friends!');  // sending to all clients in 'game' room except sender  socket.to('game').emit('nice game', \"let's play a game\");  // sending to all clients in 'game1' and/or in 'game2' room, except sender  socket.to('game1').to('game2').emit('nice game', \"let's play a game (too)\");  // sending to all clients in 'game' room, including sender  io.in('game').emit('big-announcement', 'the game will start soon');  // sending to all clients in namespace 'myNamespace', including sender  io.of('myNamespace').emit('bigger-announcement', 'the tournament will start soon');  // sending to a specific room in a specific namespace, including sender  io.of('myNamespace').to('room').emit('event', 'message');  // sending to individual socketid (private message)  io.to(socketId).emit('hey', 'I just met you');  // WARNING: `socket.to(socket.id).emit()` will NOT work, as it will send to everyone in the room  // named `socket.id` but the sender. Please use the classic `socket.emit()` instead.  // sending with acknowledgement  socket.emit('question', 'do you think so?', function (answer) {});  // sending without compression  socket.compress(false).emit('uncompressed', \"that's rough\");  // sending a message that might be dropped if the client is not ready to receive messages  socket.volatile.emit('maybe', 'do you really need it?');  // specifying whether the data to send has binary data  socket.binary(false).emit('what', 'I have no binaries!');  // sending to all clients on this node (when using multiple nodes)  io.local.emit('hi', 'my lovely babies');  // sending to all connected clients  io.emit('an event sent to all connected clients');};", "date": "Sep 21 2020", "vote": 0, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Annoyed Alligator", "source_name": "socket.io", "source_url": "https://socket.io/docs/emit-cheatsheet/"},
{"title": "socket emit to specific room using nodejs socket.io", "code": "io.on('connection', socket => {  socket.on('disconnecting', () => {    const rooms = Object.keys(socket.rooms);    // the rooms array contains at least the socket ID  });  socket.on('disconnect', () => {    // socket.rooms === {}  });});", "date": "Oct 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Suhail Khan", "source_name": "socket.io", "source_url": "https://socket.io/docs/rooms/"},
{"title": "socket emit to specific room using nodejs socket.io", "code": "io.on('connection', socket => {  socket.on('say to someone', (id, msg) => {    socket.to(id).emit('my message', msg);  });});", "date": "Oct 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Suhail Khan", "source_name": "socket.io", "source_url": "https://socket.io/docs/rooms/"},
{"title": "socket emit to specific room using nodejs socket.io", "code": "io.to('room1').to('room2').to('room3').emit('some event');", "date": "Oct 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Suhail Khan", "source_name": "socket.io", "source_url": "https://socket.io/docs/rooms/"},
{"title": "show html file on nodejs code", "code": "let http = require('http');\nlet fs = require('fs');\n\u00a0\nlet handleRequest = (request, response) => {\n\u00a0\u00a0\u00a0\u00a0response.writeHead(200, {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'Content-Type': 'text/html'\n\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0fs.readFile('./index.html', null, function (error, data) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (error) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0response.writeHead(404);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0respone.write('Whoops! File not found!');\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} else {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0response.write(data);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0response.end();\n\u00a0\u00a0\u00a0\u00a0});\n};\n\u00a0\nhttp.createServer(handleRequest).listen(8000);\n", "date": "Sep 02 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "The-Glit_ch", "source_name": "vegibit.com", "source_url": "https://vegibit.com/render-html-in-node-js/"},
{"title": "how to list all collections from a database in mongodb node js", "code": "var mongo = require('mongodb').MongoClient;\n\nasync function connect(){\n    /**\n     * Connection URI. Update <username>, <password>, and <your-cluster-url> to reflect your cluster.\n     * See https://docs.mongodb.com/ecosystem/drivers/node/ for more details\n     */\n    const uri = \"yourUri\";\n \n\n    const client = new mongo(uri);\n \n    try {\n        // Connect to the MongoDB cluster\n        await client.connect();\n        \n        // Make the appropriate DB calls\n        const db = client.db(\"testDatabase\");\n       \n        const collections = await db.collections();\n        collections.forEach (c=>console.log(c.collectionName));\n        \n \n       \n       \n \n    } catch (e) {\n        console.error(e);\n    } finally {\n        await client.close();\n    }\n}\n\nconnect().catch(console.error);\n", "date": "Mar 19 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Fierce Flatworm", "source_name": null, "source_url": null},
{"title": "show all collections in mongodb node js", "code": "async function connect(){\n    /**\n     * Connection URI. Update <username>, <password>, and <your-cluster-url> to reflect your cluster.\n     * See https://docs.mongodb.com/ecosystem/drivers/node/ for more details\n     */\n    const uri = \"yourUri\";\n \n\n    const client = new mongo(uri);\n \n    try {\n        // Connect to the MongoDB cluster\n        await client.connect();\n        \n        // Make the appropriate DB calls\n        const db = client.db(\"testDatabase\");\n       \n        const collections = await db.collections();\n        collections.forEach (c=>console.log(c.collectionName));\n\n        }\n        \n        \n \n        // Make the appropriate DB calls\n       \n \n    } catch (e) {\n        console.error(e);\n    } finally {\n        await client.close();\n    }\n}\n\nconnect().catch(console.error);\n", "date": "Mar 19 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fierce Flatworm", "source_name": null, "source_url": null},
{"title": "setup node js express basic setup", "code": "npm init -y\nnpm i express\n", "date": "Jul 03 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "settimeout nodejs await", "code": "function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nasync function sleep(fn, ...args) {\n    await timeout(3000);\n    return fn(...args);\n}\n", "date": "Apr 22 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Exuberant Eel", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/33289726/combination-of-async-function-await-settimeout"},
{"title": "settimeout node js", "code": "setTimeout(function () {\n    console.log(\"5 secondes\"); \n}, 5000); \nconsole.log(\"now\");", "date": "Apr 03 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "adriendums", "source_name": null, "source_url": null},
{"title": "setinterval nodejs", "code": "setInterval(function () {\n    console.log(\"Every 5 secondes\"); \n}, 5000); \nconsole.log(\"now\");", "date": "Apr 03 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "adriendums", "source_name": null, "source_url": null},
{"title": "settimeout node js", "code": "setTimeout(function () {\n    console.log(\"5 secondes\"); \n}, 5000); \nconsole.log(\"now\");", "date": "Apr 03 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "adriendums", "source_name": null, "source_url": null},
{"title": "js do every x seconds", "code": "window.setInterval(function() {\n  // do stuff\n}, 1000); // 1000 milliseconds (1 second)", "date": "Mar 08 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Glamorous Goldfinch", "source_name": null, "source_url": null},
{"title": "setinterval nodejs", "code": "setInterval(function () {\n    console.log(\"Every 5 secondes\"); \n}, 5000); \nconsole.log(\"now\");", "date": "Apr 03 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "adriendums", "source_name": null, "source_url": null},
{"title": "setinterval vs settimeout js", "code": "var intervalID = setInterval(alert, 1000); // Will alert every second.\n// clearInterval(intervalID); // Will clear the timer.\n\nsetTimeout(alert, 1000); // Will alert once, after a second.\nsetInterval(function(){ \n\tconsole.log(\"Oooo Yeaaa!\");\n}, 2000);//run this thang every 2 seconds", "date": "May 07 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Xenophobic Xenomorph", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/2696692/setinterval-vs-settimeout"},
{"title": "set local time in node", "code": "const nDate = new Date().toLocaleString('en-US', {\n  timeZone: 'Asia/Calcutta'\n});\n\nconsole.log(nDate);", "date": "Mar 13 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Salo Hopeless", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/8083410/how-can-i-set-the-default-timezone-in-node-js"},
{"title": "sleep in nodejs?", "code": "await sleep(1000)\nfunction sleep(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n} ", "date": "Jul 18 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Outstanding Oystercatcher", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/14249506/how-can-i-wait-in-node-js-javascript-l-need-to-pause-for-a-period-of-time"},
{"title": "set in Dynamo DB not properly incrementing nodejs lamnda function", "code": "var AWS = require('aws-sdk');\nvar documentClient = new AWS.DynamoDB.DocumentClient({'region': 'eu-central-1'});\n\nexports.handler = function(item, context, callback) {\n\n    var params = {\n        TableName: \"my-table\",\n        Key:{\n            \"id\": item.id\n        },\n        UpdateExpression: \"ADD iteration :iteration SET itemdata = :itemdata\",\n        ExpressionAttributeValues:{\n            ':iteration': 1,\n            ':itemdata' : item.data\n        },\n        ReturnValues:\"NONE\"\n};\n\ndocumentClient.update(params, function(err, data) {\n    if (err) {\n      console.log(\"Error\", err);\n      const errResponse = {\n        statusCode: 500,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\"\n        },\n        body: JSON.stringify({ Error: 500, device : \"DynamoDB\", detail : err })\n      };\n      callback(null, errResponse);\n    } else {\n      console.log(\"Success\", params.Items);\n      const response = {\n        statusCode: 200,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\"\n        },\n        body: JSON.stringify(\"upsert complete.\")\n      };\n      callback(null, response);\n    }\n  });\n};", "date": "Aug 12 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Wild Wildebeest", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/58031562/aws-lambda-node-js-increment-value-if-exist-else-add-element"},
{"title": "express and node", "code": "// Load HTTP module\nconst http = require(\"http\");\n\nconst hostname = \"127.0.0.1\";\nconst port = 8000;\n\n// Create HTTP server \nconst server = http.createServer((req, res) => {\n\n   // Set the response HTTP header with HTTP status and Content type\n   res.writeHead(200, {'Content-Type': 'text/plain'});\n   \n   // Send the response body \"Hello World\"\n   res.end('Hello World\\n');\n});\n\n// Prints a log once the server starts listening\nserver.listen(port, hostname, () => {\n   console.log(`Server running at http://${hostname}:${port}/`);\n})\n", "date": "Nov 23 2019", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Swallow Tail Gull", "source_name": null, "source_url": null},
{"title": "social login in node js and express js", "code": "passport.use('twitter', new TwitterStrategy({\n\u00a0\u00a0\u00a0\u00a0consumerKey\u00a0\u00a0\u00a0\u00a0 : twitterConfig.apikey,\n\u00a0\u00a0\u00a0\u00a0consumerSecret\u00a0 : twitterConfig.apisecret,\n\u00a0\u00a0\u00a0\u00a0callbackURL\u00a0\u00a0\u00a0\u00a0 : twitterConfig.callbackURL\n\u00a0\u00a0},\n\u00a0\u00a0function(token, tokenSecret, profile, done) {\n\u00a0\u00a0\u00a0\u00a0// make the code asynchronous\n\u00a0\u00a0\u00a0\u00a0// User.findOne won't fire until we have all our data back from Twitter\n\u00a0\u00a0\u00a0\u00a0process.nextTick(function() { \n\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0User.findOne({ 'twitter.id' : profile.id }, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0function(err, user) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// if there is an error, stop everything and return that\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// ie an error connecting to the database\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (err)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return done(err);\n\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// if the user is found then log them in\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (user) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return done(null, user); // user found, return that user\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} else {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// if there is no user, create them\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var newUser\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = new User();\n\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// set all of the user data that we need\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0newUser.twitter.id\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = profile.id;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0newUser.twitter.token\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = token;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0newUser.twitter.username = profile.username;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0newUser.twitter.displayName = profile.displayName;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0newUser.twitter.lastStatus = profile._json.status.text;\n\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// save our user into the database\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0newUser.save(function(err) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (err)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw err;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return done(null, newUser);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0})\n);\n", "date": "May 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Faithful Fish", "source_name": "code.tutsplus.com", "source_url": "https://code.tutsplus.com/articles/social-authentication-for-nodejs-apps-with-passport--cms-21618"},
{"title": "set cookie in node", "code": "res.setHeader('Set-Cookie','visited=true; Max-Age=3000; HttpOnly, Secure');", "date": "Apr 16 2020", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "Scary Snail", "source_name": null, "source_url": null},
{"title": "set 404 handling via express in node", "code": "app.use(function(req, res, next){\n  res.status(404);\n\n  // respond with html page\n  if (req.accepts('html')) {\n    res.render('404', { url: req.url });\n    return;\n  }\n\n  // respond with json\n  if (req.accepts('json')) {\n    res.send({ error: 'Not found' });\n    return;\n  }\n\n  // default to plain-text. send()\n  res.type('txt').send('Not found');\n});", "date": "May 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Pleasant Pelican", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/a/9802006"},
{"title": "socket io script", "code": "<script src=\"/socket.io/socket.io.js\"></script>\n<script>\n  const socket = io();\n</script>", "date": "Aug 29 2020", "vote": 2, "tags": ["javascript", "nodejs", "html"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "socket.io client send data node js server", "code": "var socket = io.connect('http://localhost');\nsocket.emit('my other event', { my: 'data' });\n//server side\nio.sockets.on('connection', function (socket) {\n  socket.on('my other event', function (data) {\n    console.log(data);\n  });\n});\n//sending data from the user via a socket.io\nsocket.on(\"test\", function (data) {\n    data.forEach(obj => {\n        console.log(\"Yer : \" + obj.yer + \", Lat : \" + obj.lat + \", Long : \" + obj.lng);\n    })\n});", "date": "Nov 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Xenophobic Xenomorph", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/7733848/how-do-i-pass-data-from-the-client-side-to-my-nodejs-server-using-socketio"},
{"title": "socket.io doc", "code": "const socket = new WebSocket('ws://localhost:3000');socket.onopen(() => {  socket.send('Hello!');});socket.onmessage(data => {  console.log(data);});", "date": "Aug 26 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Hilarious Hoopoe", "source_name": "socket.io", "source_url": "https://socket.io/docs/"},
{"title": "serving html and css with node js", "code": "// HTTP Module for Creating Server and Serving Static Files Using Node.js\n// Static Files: HTML, CSS, JS, Images\n// Get Complete Source Code from Pabbly.com\n\nvar http = require('http');\nvar fs = require('fs');\nvar path = require('path');\n\nhttp.createServer(function(req, res){\n\n    if(req.url === \"/\"){\n        fs.readFile(\"./public/index.html\", \"UTF-8\", function(err, html){\n            res.writeHead(200, {\"Content-Type\": \"text/html\"});\n            res.end(html);\n        });\n    }else if(req.url.match(\"\\.css$\")){\n        var cssPath = path.join(__dirname, 'public', req.url);\n        var fileStream = fs.createReadStream(cssPath, \"UTF-8\");\n        res.writeHead(200, {\"Content-Type\": \"text/css\"});\n        fileStream.pipe(res);\n\n    }else if(req.url.match(\"\\.png$\")){\n        var imagePath = path.join(__dirname, 'public', req.url);\n        var fileStream = fs.createReadStream(imagePath);\n        res.writeHead(200, {\"Content-Type\": \"image/png\"});\n        fileStream.pipe(res);\n    }else{\n        res.writeHead(404, {\"Content-Type\": \"text/html\"});\n        res.end(\"No Page Found\");\n    }\n\n}).listen(3000);Copy", "date": "Mar 14 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Worried Wasp", "source_name": "www.pabbly.com", "source_url": "https://www.pabbly.com/tutorials/node-js-http-module-serving-static-files-html-css-images/"},
{"title": "servers for node js", "code": "const num = 256\n\nconsole.log(num)\n", "date": "Apr 15 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Weary Wryneck", "source_name": null, "source_url": null},
{"title": "install socket.io", "code": "npm i socket.io", "date": "Oct 03 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "amazingcoder444Rblx", "source_name": null, "source_url": null},
{"title": "socket io script", "code": "<script src=\"/socket.io/socket.io.js\"></script>\n<script>\n  const socket = io();\n</script>", "date": "Aug 29 2020", "vote": 2, "tags": ["javascript", "nodejs", "html"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "create a web server node js w socket.io", "code": "var app = require('express')();\nvar http = require('http').createServer(app);\nvar io = require('socket.io')(http);\n\napp.get('/', (req, res) => {\n  // Ran when a GET request to path '/'\n  res.sendFile(__dirname + '/index.html');\n});\n\nio.on('connection', (socket) => {\n  // Ran when a socket connected\n});\n\nhttp.listen(3000, () => {\n  // Ran when server is ready to take requestes\n});", "date": "Dec 31 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Clean Chinchilla", "source_name": "socket.io", "source_url": "https://socket.io/get-started/chat/"},
{"title": "how to run socket.io server", "code": "const express = require(\"express\");\nconst http = require(\"http\");\nconst socketIo = require(\"socket.io\");\nconst port = process.env.PORT || 8001;\nconst index = require(\"./routes/index\");\nconst app = express();\napp.use(index);\nconst server = http.createServer(app);\nconst io = socketIo(server); // < Interesting!\nconst getApiAndEmit = \"TODO\";", "date": "Nov 21 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Pink Person", "source_name": null, "source_url": null},
{"title": "js socket.emit", "code": "const socket = io('ws://localhost:3000');\nsocket.on('connect', () => {  \n  // either with send()  \n  socket.send('Hello!');\n  // or with emit() and custom event names  \n  socket.emit('salutations', 'Hello!', { 'mr': 'john' }, Uint8Array.from([1, 2, 3, 4]));});\n// handle the event sent with socket.send()\nsocket.on('message', data => {\n  console.log(data);\n});\n// handle the event sent with socket.emit()\nsocket.on('greetings', (elem1, elem2, elem3) => {\n  console.log(elem1, elem2, elem3);\n});", "date": "Sep 21 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Hilarious Hoopoe", "source_name": "socket.io", "source_url": "https://socket.io/docs/"},
{"title": "socket io node js", "code": "npm install socket.io", "date": "Apr 20 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Frail Ferret", "source_name": "socket.io", "source_url": "https://socket.io/get-started/chat"},
{"title": "server sent events node js + github", "code": "$ npm install sse-nodejs\n", "date": "Apr 20 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Pleasant Pigeon", "source_name": "github.com", "source_url": "https://github.com/trquoccuong/Server-Sent-Events-Nodejs"},
{"title": "sequelize node js postgres association", "code": "sequelize node js postgres association", "date": "Sep 20 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Worrisome Wildebeest", "source_name": null, "source_url": null},
{"title": "simple nodejs dockerfile", "code": "FROM node:12-alpine\nWORKDIR /app\nCOPY package.json yarn.lock ./\nRUN yarn install --production\nCOPY . .\nCMD [\"node\", \"/app/src/index.js\"]", "date": "May 28 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "lieven121", "source_name": "github.com", "source_url": "https://github.com/docker/getting-started"},
{"title": "docker run npm install express syntax", "code": "FROM node:12\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\nRUN npm install\n# If you are building your code for production\n# RUN npm ci --only=production\n\n# Bundle app source\nCOPY . .\n\nEXPOSE 8080\nCMD [ \"node\", \"server.js\" ]", "date": "Sep 29 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Repulsive Raccoon", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/nodejs-docker-webapp/"},
{"title": "simple nodejs dockerfile", "code": "{\n  \"name\": \"docker_web_app\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Node.js on Docker\",\n  \"author\": \"First Last <first.last@example.com>\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.16.1\"\n  }\n}", "date": "Jan 25 2021", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Annoying Alpaca", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/nodejs-docker-webapp/"},
{"title": "sendgrid nodejs send email template", "code": "const sgMail = require('@sendgrid/mail');\nsgMail.setApiKey(process.env.SENDGRID_API_KEY);\nconst msg = {\n  to: 'recipient@example.org',\n  from: 'sender@example.org',\n  templateId: 'd-f43daeeaef504760851f727007e0b5d0',\n  dynamic_template_data: {\n    subject: 'Testing Templates',\n    name: 'Some One',\n    city: 'Denver',\n  },\n};\nsgMail.send(msg);", "date": "Apr 20 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Unsightly Unicorn", "source_name": "github.com", "source_url": "https://github.com/sendgrid/sendgrid-nodejs/blob/master/docs/use-cases/transactional-templates.md"},
{"title": "send variable data from node js to front end javascript", "code": "<script>\n   window.app = <%- JSON.stringify(data) %>\n</script>", "date": "Aug 09 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Wide-eyed Wren", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/23733748/how-to-pass-variable-from-back-end-to-front-end-in-node-js-ejs-template"},
{"title": "send multipart form data axios with node js", "code": "const axios = require('axios');\nconst FormData = require('form-data');\n\nconst form = new FormData();\n// Second argument  can take Buffer or Stream (lazily read during the request) too.\n// Third argument is filename if you want to simulate a file upload. Otherwise omit.\nform.append('field', 'a,b,c', 'blah.csv');\naxios.post('http://example.org/endpoint', form, {\n  headers: form.getHeaders(),\n}).then(result => {\n  // Handle result\u2026\n  console.log(result.data);\n});", "date": "Apr 29 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": "github.com", "source_url": "https://github.com/axios/axios/issues/1006#issuecomment-320165427"},
{"title": "axios multipart/form-data", "code": "import React from 'react'\nimport axios, { post } from 'axios';\n\nclass SimpleReactFileUpload extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state ={\n      file:null\n    }\n    this.onFormSubmit = this.onFormSubmit.bind(this)\n    this.onChange = this.onChange.bind(this)\n    this.fileUpload = this.fileUpload.bind(this)\n  }\n\n  onFormSubmit(e){\n    e.preventDefault() // Stop form submit\n    this.fileUpload(this.state.file).then((response)=>{\n      console.log(response.data);\n    })\n  }\n\n  onChange(e) {\n    this.setState({file:e.target.files[0]})\n  }\n\n  fileUpload(file){\n    const url = 'http://example.com/file-upload';\n    const formData = new FormData();\n    formData.append('file',file)\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    }\n    return  post(url, formData,config)\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onFormSubmit}>\n        <h1>File Upload</h1>\n        <input type=\"file\" onChange={this.onChange} />\n        <button type=\"submit\">Upload</button>\n      </form>\n   )\n  }\n}\n\n\n\nexport default SimpleReactFileUpload\n", "date": "Apr 21 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "msultont", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/41878838/how-do-i-set-multipart-in-axios-with-react"},
{"title": "send user actions to admin by socket io in nodejs", "code": "socket.emit('message', \"this is a test\"); //sending to sender-client only\nsocket.broadcast.emit('message', \"this is a test\"); //sending to all clients except sender\nsocket.broadcast.to('game').emit('message', 'nice game'); //sending to all clients in 'game' room(channel) except sender\nsocket.to('game').emit('message', 'enjoy the game'); //sending to sender client, only if they are in 'game' room(channel)\nsocket.broadcast.to(socketid).emit('message', 'for your eyes only'); //sending to individual socketid\nio.emit('message', \"this is a test\"); //sending to all clients, include sender\nio.in('game').emit('message', 'cool game'); //sending to all clients in 'game' room(channel), include sender\nio.of('myNamespace').emit('message', 'gg'); //sending to all clients in namespace 'myNamespace', include sender\nsocket.emit(); //send to all connected clients\nsocket.broadcast.emit(); //send to all connected clients except the one that sent the message\nsocket.on(); //event listener, can be called on client to execute on server\nio.sockets.socket(); //for emiting to specific clients\nio.sockets.emit(); //send to all connected clients (same as socket.emit)\nio.sockets.on() ; //initial connection from a client.\n", "date": "Aug 01 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Beautiful Booby", "source_name": "dev.to", "source_url": "https://dev.to/moz5691/socketio-for-simple-chatting---1k8n"},
{"title": "send email nodejs", "code": "var nodemailer = require('nodemailer');\n\nvar transporter = nodemailer.createTransport({\n  service: 'gmail',\n  auth: {\n    user: 'youremail@gmail.com',\n    pass: 'yourpassword'\n  }\n});\n\nvar mailOptions = {\n  from: 'youremail@gmail.com',\n  to: 'myfriend@yahoo.com',\n  subject: 'Sending Email using Node.js',\n  text: 'That was easy!'\n};\n\ntransporter.sendMail(mailOptions, function(error, info){\n  if (error) {\n    console.log(error);\n  } else {\n    console.log('Email sent: ' + info.response);\n  }\n});", "date": "Jul 21 2020", "vote": 29, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "send audio with socket io node js", "code": "var constraints = { audio: true };\nnavigator.mediaDevices.getUserMedia(constraints).then(function(mediaStream) {\n    var mediaRecorder = new MediaRecorder(mediaStream);\n    mediaRecorder.onstart = function(e) {\n        this.chunks = [];\n    };\n    mediaRecorder.ondataavailable = function(e) {\n        this.chunks.push(e.data);\n    };\n    mediaRecorder.onstop = function(e) {\n        var blob = new Blob(this.chunks, { 'type' : 'audio/ogg; codecs=opus' });\n        socket.emit('radio', blob);\n    };\n\n    // Start recording\n    mediaRecorder.start();\n\n    // Stop recording after 5 seconds and broadcast it to server\n    setTimeout(function() {\n        mediaRecorder.stop()\n    }, 5000);\n});\n\n// When the client receives a voice message it will play the sound\nsocket.on('voice', function(arrayBuffer) {\n    var blob = new Blob([arrayBuffer], { 'type' : 'audio/ogg; codecs=opus' });\n    var audio = document.createElement('audio');\n    audio.src = window.URL.createObjectURL(blob);\n    audio.play();\n});", "date": "Aug 19 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bewildered Batfish", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/30520661/broadcasting-live-audio-through-webrtc-using-socket-io-in-node-js"},
{"title": "secure random nodejs", "code": "// Synchronous\nconst buf = crypto.randomBytes(256);\nconsole.log(\n  `${buf.length} bytes of random data: ${buf.toString('hex')}`);\n", "date": "May 18 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Jittery Jackal", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/crypto.html#crypto_crypto_randombytes_size_callback"},
{"title": "search with multiple field in node js mongodb", "code": "db.test.find({\n$or:[\n    {\n        $and: [\n                {'stocknumber':12346},\n                {'model':'bmx'},\n                {'make':2002},\n                {'rego':'KA01HG6268'},\n                {'adate':'2017-10-01T05:07:10.969Z'},\n                {'cdate':'2017-10-01T05:07:10.969Z'}\n            ]\n    },\n    {\n        $and: [\n                {'stocknumber':12347},\n                {'model':'bmy'},\n                {'make':2003}\n            ]\n\n    }\n]\n}).pretty()", "date": "Jul 29 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Naughty Nightingale", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/46938663/searching-multiple-fields-in-mongodb"},
{"title": "search with multiple field in node js mongodb", "code": "> db.test.find({$or: [{Description: {$regex: '^225/65R16'}, Brand: {$regex: '^Hankook'}}]})\n{ \"Description\" : \"225/65R16 71T K715\", \"Brand\" : \"Hankook\", \"Ref\" : 123455 }\n{\"Description\" : \"225/65R16 94T\", \"Brand\" : \"Hankook\", \"Ref\" : 123455 }\n\n> db.test.find({$or: [{Description: {$regex: '^225'}, Brand: {$regex: '^Han'}}]})\n{ \"Description\" : \"225/65R16 71T K715\", \"Brand\" : \"Hankook\", \"Ref\" : 123455 }\n{ \"Description\" : \"225/65R16 94T\", \"Brand\" : \"Hankook\", \"Ref\" : 123455 }", "date": "Jul 29 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Naughty Nightingale", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/40668286/mongodb-search-multiple-fields-matching-parts-of-a-string"},
{"title": "screen.render is not a function in node", "code": "screen.render is not a function\n", "date": "Jan 09 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Homeless Hamerkop", "source_name": null, "source_url": null},
{"title": "scraping google nodejs", "code": "$\u00a0npm\u00a0install\u00a0google-search-scraper", "date": "Nov 21 2020", "vote": -2, "tags": ["javascript", "nodejs"], "posted_by": "Relieved Ray", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/google-search-scraper"},
{"title": "send email nodejs", "code": "var nodemailer = require('nodemailer');\n\nvar transporter = nodemailer.createTransport({\n  service: 'gmail',\n  auth: {\n    user: 'youremail@gmail.com',\n    pass: 'yourpassword'\n  }\n});\n\nvar mailOptions = {\n  from: 'youremail@gmail.com',\n  to: 'myfriend@yahoo.com',\n  subject: 'Sending Email using Node.js',\n  text: 'That was easy!'\n};\n\ntransporter.sendMail(mailOptions, function(error, info){\n  if (error) {\n    console.log(error);\n  } else {\n    console.log('Email sent: ' + info.response);\n  }\n});", "date": "Jul 21 2020", "vote": 29, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "sanitizer content nodejs", "code": "//first install package: npm install sanitize-html --save\nvar sanitizeHtml = require('sanitize-html');\n \nvar dirty = 'This is test <a style=\"opacity: 0.1\" href=\"javascript:void(0)\">Link</a>';\nvar clean = sanitizeHtml(dirty);\nconsole.log(clean);\n//result: This is test <a>Link</a>\n", "date": "May 18 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Amin :)", "source_name": null, "source_url": null},
{"title": "samesite cookie nodejs", "code": "response.setHeader('set-cookie', [\n  'cookie1=value1; SameSite=Lax',\n  'cookie2=value2; SameSite=None; Secure',\n]);", "date": "Nov 03 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Faithful Finch", "source_name": "github.com", "source_url": "https://github.com/GoogleChromeLabs/samesite-examples/blob/master/javascript-nodejs.md"},
{"title": "samesite cookie nodejs", "code": "// Set a same-site cookie for first-party contexts\nresponse.cookie('cookie1', 'value1', { sameSite: 'lax' });\n// Set a cross-site cookie for third-party contexts\nresponse.cookie('cookie2', 'value2', { sameSite: 'none', secure: true });", "date": "Nov 03 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Faithful Finch", "source_name": "github.com", "source_url": "https://github.com/GoogleChromeLabs/samesite-examples/blob/master/javascript-nodejs.md"},
{"title": "s3 list objects in folder node js", "code": "var AWS = require('aws-sdk');\nAWS.config.update({accessKeyId: 'mykey', secretAccessKey: 'mysecret', region: 'myregion'});\nvar s3 = new AWS.S3();\n\nvar params = { \n Bucket: 'mystore.in',\n Delimiter: '/',\n Prefix: 's/5469b2f5b4292d22522e84e0/ms.files/'\n}\n\ns3.listObjects(params, function (err, data) {\n if(err)throw err;\n console.log(data);\n});", "date": "Sep 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Frail Falcon", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/30726079/aws-s3-object-listing"},
{"title": "route parameter in node", "code": "var express = require('express');\nvar fs  = require('fs');\nvar app= express();\n app.get('/index/profile/:id',function(req,res){\n    //  res.send('profile with id' + req.params.id)\n\n    \n    \n });\napp.listen(3000,'127.0.0.1');\nconsole.log('lsitng');", "date": "May 26 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Beautiful Badger", "source_name": null, "source_url": null},
{"title": "retrieve domain from email address node js", "code": "var email = \"john.doe@email.com\";\nvar name   = email.substring(0, email.lastIndexOf(\"@\"));\nvar domain = email.substring(email.lastIndexOf(\"@\") +1);\n\nconsole.log( name );   // john.doe\nconsole.log( domain ); // email.com", "date": "Aug 27 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Nice Newt", "source_name": null, "source_url": null},
{"title": "res object anatomy nodejs", "code": "res = {\n    app            :    function(req, res) {},\n    chunkedEncoding:    Boolean,\n    connection     :     Socket,\n    finished       :    Boolean,\n    output         :    [],\n    outputEncodings:    [],\n    req            :    IncomingMessage,\n    sendDate       :    Boolean,\n    shouldkeepAlive    : Boolean,\n    socket         :     Socket,\n    useChunkedEncdoingByDefault    :    Boolean,\n    viewCallbacks  :    [],\n    writable       :     Boolean\n}\n", "date": "Jun 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Zealous Zebra", "source_name": "www.murvinlai.com", "source_url": "http://www.murvinlai.com/req-and-res-in-nodejs.html"},
{"title": "connect mongo to express api", "code": "//using mongoose\nnpm i mongoose\n\nconst mongoose = require(\"mongoose\");\n\nmongoose\n  .connect(\n    \"your mongodb URI\",\n    {\n      useNewUrlParser: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      useUnifiedTopology: true,\n    }\n  )\n  .then(() => console.log(\"mongodb connected\"))\n  .catch((err) => {\n    console.err(err.message);\n    process.exit(1);\n  });", "date": "Jul 21 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Philan ISithembiso", "source_name": null, "source_url": null},
{"title": "nodejs hello world", "code": "const http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('Hello World');\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});", "date": "Aug 22 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "IrwinRdz", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/getting-started-guide/"},
{"title": "rest api node js with mysql", "code": "const express = require('express'),\n  app = express(),\n  bodyParser = require('body-parser');\n  port = process.env.PORT || 3000;\n\n\nconst mysql = require('mysql');\n// connection configurations\nconst mc = mysql.createConnection({\n    host: 'localhost',\n    user: 'root',\n    password: '',\n    database: 'mydb'\n});\n \n// connect to database\nmc.connect();\n\napp.listen(port);\n\nconsole.log('API server started on: ' + port);\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\n\nvar routes = require('./app/routes/approutes'); //importing route\nroutes(app); //register the route\n", "date": "Jul 10 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Lonely Llama", "source_name": "www.codementor.io", "source_url": "https://www.codementor.io/@julieisip/learn-rest-api-using-express-js-and-mysql-db-ldflyx8g2"},
{"title": "routes in node js", "code": "var express = require('express')\nvar router = express.Router()\n\n// middleware that is specific to this router\nrouter.use(function timeLog (req, res, next) {\n  console.log('Time: ', Date.now())\n  next()\n})\n// define the home page route\nrouter.get('/', function (req, res) {\n  res.send('Birds home page')\n})\n// define the about route\nrouter.get('/about', function (req, res) {\n  res.send('About birds')\n})\n\nmodule.exports = router\n", "date": "Dec 07 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Arrogant Ape", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/guide/routing.html"},
{"title": "rest api with mongodb and nodejs", "code": "npm install express --save", "date": "Oct 09 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Impossible Ibis", "source_name": "medium.com", "source_url": "https://medium.com/@dinyangetoh/how-to-build-simple-restful-api-with-nodejs-expressjs-and-mongodb-99348012925d"},
{"title": "node js server", "code": "const express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))", "date": "Apr 01 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Encouraging Elk", "source_name": null, "source_url": null},
{"title": "node run command", "code": "// Run a command asynchronously\nconst { spawn } = require('child_process');\nconst dir = spawn('cmd', ['/c', 'dir']);\n\ndir.stdout.on('data', data => console.log(`Stdout: ${data}`));\ndir.stderr.on('data', data => console.log(`Stderr: ${data}`));\ndir.on('close', code => console.log(`Exit code: ${code}`));\n\n// Run a command synchronously\nconst { spawnSync } = require( 'child_process' );\nconst dir = spawnSync('cmd', ['/c', 'dir']);\n\nconsole.log(`Stdout: ${dir.stdout.toString()}`);\nconsole.log(`Stderr: ${dir.stderr.toString()}`);", "date": "Aug 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "run node js", "code": "node name_app.js", "date": "Mar 09 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "spaghettiCthulhu", "source_name": "nodejs.dev", "source_url": "https://nodejs.dev/learn/run-nodejs-scripts-from-the-command-line"},
{"title": "create node project", "code": "#1. server.js\nvar express = require('express');\nvar app = express();\n\napp.get('/', function (req, res) {\n  res.status(200).send('Hello World!');\n});\n\nvar port = process.env.PORT || 3000;\n\nvar server = app.listen(port, function() {\n  console.log('Express server listening on port ' + port);\n});\n\nopen cmd run server.js\n\"node server.js\"\nlog:Express server listening on port 3000\n\n& then\n\nopen link \"http://localhost:3000/\" in your browser and show result.", "date": "Apr 29 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Ankur", "source_name": "www.programmingquest.com", "source_url": "https://www.programmingquest.com/2018/10/node-js-express-server-hello-world.html"},
{"title": "how to run a js file in node", "code": "Save your .js file in the same folder as node.js,\nFor windows , Usually location is- \"C:\\Program Files\\nodejs\"\nOpen 'Command prompt and locate node.js folder' OR directly open 'Node.js command prompt' and type \n>> node (file_name).js", "date": "Dec 07 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cruel Crab", "source_name": null, "source_url": null},
{"title": "express router file", "code": "var express = require('express');\nvar router = express.Router();\n\n// middleware that is specific to this router\nrouter.use(function timeLog (req, res, next) {\n  console.log('Time: ', Date.now());\n  next();\n});\n// define the home page route\nrouter.get('/', function (req, res) {\n  res.send('Birds home page');\n});\n// define the about route\nrouter.get('/about', function (req, res) {\n  res.send('About birds');\n});\n\nmodule.exports = router;", "date": "May 03 2020", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Lively Loris", "source_name": null, "source_url": null},
{"title": "routes in node js", "code": "var birds = require('./birds')\n\n// ...\n\napp.use('/birds', birds)\n", "date": "Dec 07 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Arrogant Ape", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/guide/routing.html"},
{"title": "express route parameters", "code": "app.get('/users/:userId/books/:bookId', function (req, res) {\n  res.send(req.params)\n})\n", "date": "Jul 05 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Motionless Mouse", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/guide/routing.html"},
{"title": "express() vs express.router()", "code": "var express = require('express'),\n    dogs    = require('./routes/dogs'),\n    cats    = require('./routes/cats'),\n    birds   = require('./routes/birds');\n\nvar app = express();\n\napp.use('/dogs',  dogs);\napp.use('/cats',  cats);\napp.use('/birds', birds);\n\napp.listen(3000);", "date": "Jun 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Clean Crane", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/28305120/differences-between-express-router-and-app-get"},
{"title": "express route parameters", "code": "Route path: /flights/:from-:to\nRequest URL: http://localhost:3000/flights/LAX-SFO\nreq.params: { \"from\": \"LAX\", \"to\": \"SFO\" }\n", "date": "Jul 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Motionless Mouse", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/guide/routing.html"},
{"title": "res : [ Circular ] nodejs", "code": "http.get(url, function(err, response) {\n  if (err) console.log(err)\n\n  var data = ''\n  response.setEncoding('utf8')\n  response.on('data', function(d) {\n    data += d\n  })\n  response.on('end', function(d) {\n    res.send(data)\n  })\n})", "date": "May 18 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cute Corncrake", "source_name": null, "source_url": null},
{"title": "request.end request.write node js", "code": "const http = require(\"http\")\n\nlet body = JSON.stringify({\n  title: \"Make a request with Node's http module\"\n})\n\nlet options = {\n  hostname: \"postman-echo.com\",\n  path: \"/post\",\n  method: \"POST\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"Content-Length\": Buffer.byteLength(body)\n  }\n}\n\nhttp\n  .request(options, res => {\n    let data = \"\"\n    res.on(\"data\", d => {\n      data += d\n    })\n    res.on(\"end\", () => {\n      console.log(data)\n    })\n  })\n  .on(\"error\", console.error)\n  .end(body)\n", "date": "Mar 09 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Impossible Iguana", "source_name": "blog.bearer.sh", "source_url": "https://blog.bearer.sh/node-http-request/"},
{"title": "show html file on nodejs code", "code": "let http = require('http');\nlet fs = require('fs');\n\u00a0\nlet handleRequest = (request, response) => {\n\u00a0\u00a0\u00a0\u00a0response.writeHead(200, {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'Content-Type': 'text/html'\n\u00a0\u00a0\u00a0\u00a0});\n\u00a0\u00a0\u00a0\u00a0fs.readFile('./index.html', null, function (error, data) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (error) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0response.writeHead(404);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0respone.write('Whoops! File not found!');\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} else {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0response.write(data);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0response.end();\n\u00a0\u00a0\u00a0\u00a0});\n};\n\u00a0\nhttp.createServer(handleRequest).listen(8000);\n", "date": "Sep 02 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "The-Glit_ch", "source_name": "vegibit.com", "source_url": "https://vegibit.com/render-html-in-node-js/"},
{"title": "render html in node js", "code": "render html in node js\n-----------------------------\n//server.js & index.html keep in same dir\napp.use(express.static('./'));\n\napp.get('/', function(req, res) { \n    res.render('index.html');\n});", "date": "Oct 18 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "ashabb", "source_name": "ashabbsoftmart.firebaseapp.com", "source_url": "https://ashabbsoftmart.firebaseapp.com/"},
{"title": "refresh after delete in node", "code": "  // Reloading the page\n    location.reload();", "date": "Jan 20 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Repulsive Ray", "source_name": null, "source_url": null},
{"title": "regex to get part of word nodejs", "code": "/\\(\\{#(.*?)#\\})\\)/g.exec(\"({#test#})\")[1] === \"test\"", "date": "Apr 06 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Suspect Camel", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/54273914/regex-to-get-string-word-from-word-in-nodejs"},
{"title": "redis set expire time node js", "code": "client.set(key, value, 'EX', 60 * 60 * 24, callback);\n", "date": "Dec 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Proud Platypus", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/30565571/redis-how-to-expire-key-daily/42505246"},
{"title": "redis pub or sub nodejs", "code": "more example redis pub/sub -> https://github.com/restuwahyu13/express-todo-redis", "date": "Feb 24 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "redis pub or sub nodejs", "code": "// subscriber\n\nconst IORedis = require('ioredis')\nconst chalk = require('chalk')\nconst { Publisher } = require('./util.publisher')\n\nclass Subscriber {\n\tconstructor(configs = { key: '' }) {\n\t\tthis._key = configs.key\n\t\tthis._keyFrom = Publisher.get()\n\t}\n\n\t_redisConnect() {\n\t\tconst ioRedis = new IORedis({\n\t\t\thost: '127.0.0.1',\n\t\t\tport: 6379,\n\t\t\tmaxRetriesPerRequest: 50,\n\t\t\tconnectTimeout: 5000,\n\t\t\tenableReadyCheck: true,\n\t\t\tenableAutoPipelining: true\n\t\t})\n\n\t\treturn ioRedis\n\t}\n\n\tasync getString(keyName) {\n\t\tif (this._key == this._keyFrom) {\n\t\t\tconst ioRedis = this._redisConnect()\n\t\t\tconst response = await ioRedis.get(keyName)\n\t\t\tawait ioRedis.expire(keyName, 60)\n\t\t\tif (response) {\n\t\t\t\treturn Promise.resolve(response)\n\t\t\t}\n\t\t\treturn {}\n\t\t} else {\n\t\t\treturn Promise.reject(chalk.red(new Error(`invalid key Subscriber: ${this._key} and Publisher: ${this._keyFrom}`)))\n\t\t}\n\t}\n\n\tasync getMap(keyName) {\n\t\tif (this._key == this._keyFrom) {\n\t\t\tconst ioRedis = this._redisConnect()\n\t\t\tconst response = await ioRedis.hgetall(keyName)\n\t\t\tawait ioRedis.expire(keyName, 60)\n\t\t\tif (response) {\n\t\t\t\treturn Promise.resolve(response)\n\t\t\t}\n\t\t\treturn {}\n\t\t} else {\n\t\t\treturn Promise.reject(chalk.red(new Error(`invalid key Subscriber: ${this._key} and Publisher: ${this._keyFrom}`)))\n\t\t}\n\t}\n\n\tasync getArray(keyName) {\n\t\tif (this._key == this._keyFrom) {\n\t\t\tconst ioRedis = this._redisConnect()\n\t\t\tconst response = await ioRedis.hgetall(keyName)\n\t\t\tawait ioRedis.expire(keyName, 60)\n\t\t\tif (response) {\n\t\t\t\treturn Promise.resolve(JSON.parser(response).data)\n\t\t\t}\n\t\t\treturn {}\n\t\t} else {\n\t\t\treturn Promise.reject(chalk.red(new Error(`invalid key Subscriber: ${this._key} and Publisher: ${this._keyFrom}`)))\n\t\t}\n\t}\n\n\tasync getResponse() {\n\t\tif (this._key == this._keyFrom) {\n\t\t\tconst ioRedis = this._redisConnect()\n\t\t\tconst response = await ioRedis.hgetall('message:speaker')\n\t\t\tawait ioRedis.expire('message:speaker', 30)\n\t\t\tif (response) {\n\t\t\t\treturn Promise.resolve(response)\n\t\t\t}\n\t\t\treturn {}\n\t\t} else {\n\t\t\treturn Promise.reject(chalk.red(new Error(`invalid key Subscriber: ${this._key} and Publisher: ${this._keyFrom}`)))\n\t\t}\n\t}\n}\n\nmodule.exports = { Subscriber }", "date": "Feb 24 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "redis pub or sub nodejs", "code": "// publisher\n\nconst IORedis = require('ioredis')\n\nclass Publisher {\n\tconstructor(configs = { key: '' }) {\n\t\tthis.key = configs.key\n\t\tPublisher.set(configs.key)\n\t}\n\n\tstatic get() {\n\t\treturn this.key\n\t}\n\n\tstatic set(key = '') {\n\t\tthis.key = key\n\t}\n\n\t_redisConnect() {\n\t\tconst ioRedis = new IORedis({\n\t\t\thost: '127.0.0.1',\n\t\t\tport: 6379,\n\t\t\tmaxRetriesPerRequest: 50,\n\t\t\tconnectTimeout: 5000,\n\t\t\tenableReadyCheck: true,\n\t\t\tenableAutoPipelining: true\n\t\t})\n\n\t\treturn ioRedis\n\t}\n\n\tasync setString(keyName = '', data) {\n\t\tconst ioRedis = _redisConnect()\n\t\tawait ioRedis.set(keyName, data)\n\t}\n\n\tasync setMap(keyName = '', data = {}) {\n\t\tconst ioRedis = this._redisConnect()\n\t\tawait ioRedis.hmset(keyName, { ...data })\n\t}\n\n\tasync setArray(keyName = '', data = []) {\n\t\tconst ioRedis = _redisConnect()\n\t\tawait ioRedis.hmset(keyName, JSON.stringify({ data: data }))\n\t}\n\n\tasync setResponse(data = {}) {\n\t\tconst ioRedis = this._redisConnect()\n\t\tawait ioRedis.hmset('message:speaker', { ...data })\n\t}\n}\n\nmodule.exports = { Publisher }", "date": "Feb 24 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "how to implement redis pub sub model using nodejs", "code": "var redis = require(\u201credis\u201d);var subscriber = redis.createClient();subscriber.on(\u201cmessage\u201d, function (channel, message) { console.log(\u201cMessage: \u201c + message + \u201c on channel: \u201c + channel + \u201c is arrive!\u201d);});subscriber.subscribe(\u201cnotification\u201d);", "date": "Feb 04 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Shy Spider", "source_name": "medium.com", "source_url": "https://medium.com/@ridwanfajar/using-redis-pub-sub-with-node-js-its-quite-easy-c9c8b4dae79f"},
{"title": "how to implement redis pub sub model using nodejs", "code": "var redis = require(\u201credis\u201d);var publisher = redis.createClient();publisher.publish(\u201cnotification\u201d, \u201c{\\\u201dmessage\\\u201d:\\\u201dHello world from Asgardian!\\\u201d}\u201d, function(){ process.exit(0);});", "date": "Feb 04 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Shy Spider", "source_name": "medium.com", "source_url": "https://medium.com/@ridwanfajar/using-redis-pub-sub-with-node-js-its-quite-easy-c9c8b4dae79f"},
{"title": "redis nodejs", "code": "/* npm install redis */\n\nconst redis = require(\"redis\");\nconst client = redis.createClient();\n\nclient.on(\"error\", function(error) {\n  console.error(error);\n});\n\nclient.set(\"key\", \"value\", redis.print);\nclient.get(\"key\", redis.print);", "date": "Jun 17 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "joakimjohansson.se", "source_name": "github.com", "source_url": "https://github.com/NodeRedis/node-redis"},
{"title": "connect-redis github", "code": "yarn add redis connect-redis express-session", "date": "Dec 28 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Amused Ant", "source_name": "github.com", "source_url": "https://github.com/tj/connect-redis"},
{"title": "node-redis", "code": "// node-redis to promise, because node-redis not support promise\n\nimport bluebird from 'bluebird'\nimport { Commands, createClient } from 'redis'\n\nconst client = createClient({\n\thost: process.env.REDIS_HOST,\n\tport: parseInt(process.env.REDIS_PORT),\n\tpassword: process.env.REDIS_PASSWORD\n})\n\nlet redisCon: Commands<any>\n;(async (redis) => {\n\tconst redisPromise = await bluebird.resolve<Commands<any>>(redis)\n\tredisCon = redisPromise\n})(client)\n\nexport { redisCon }", "date": "Apr 21 2021", "vote": 0, "tags": ["javascript", "nodejs", "typescript"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "nodejs redis setex", "code": "async function upsert(table, data) {\n  let key = table;\n  if (data && data.id) {\n    key = key + '_' + data.id;\n  }\n\n  client.setex(key, 10, JSON.stringify(data));\n  return true;\n}\n", "date": "Nov 12 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Jeff Le", "source_name": "www.codota.com", "source_url": "https://www.codota.com/code/javascript/functions/redis/RedisClient/setex"},
{"title": "receiving big response node js", "code": "const https = require(\"https\");const url = \"https://my-json-server.typicode.com/edurekaDemo/noderequest/db\";https.get(url, res => {res.setEncoding(\"utf8\");let body = \"\";res.on(\"data\", data => {body += data;});res.on(\"end\", () => {body = JSON.parse(body);console.log(body);});});", "date": "Jul 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Sparkling Skunk", "source_name": "medium.com", "source_url": "https://medium.com/edureka/node-js-requests-6b94862307a2"},
{"title": "read qr code from image nodejs", "code": "//Importing jimp module\nvar Jimp = require(\"jimp\");\n// Importing filesystem module\nvar fs = require('fs')\n// Importing qrcode-reader module\nvar qrCode = require('qrcode-reader');\n\n// Read the image and create a buffer \n// (Here image.png is our QR code)\nvar buffer = fs.readFileSync(__dirname + '/image.png');\n\n// Parse the image using Jimp.read() method\nJimp.read(buffer, function(err, image) {\n\tif (err) {\n\t\tconsole.error(err);\n\t}\n\t// Creating an instance of qrcode-reader module\n\tlet qrcode = new qrCode();\n\tqrcode.callback = function(err, value) {\n\t\tif (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t\t// Printing the decrypted value\n\t\tconsole.log(value.result);\n\t};\n\t// Decoding the QR code\n\tqrcode.decode(image.bitmap);\n});\n", "date": "Feb 18 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Wandering Wombat", "source_name": null, "source_url": null},
{"title": "node load string from file", "code": "var fs = require('fs');\n\nfs.readFile('my-file.txt', 'utf8', function(err, data) {\n    if (err) throw err;\n    console.log(data);\n});\n", "date": "Mar 19 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Eager Echidna", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/read-files-with-node-js/"},
{"title": "read txt file in node js", "code": "var fs = require('fs');\n\nfs.readFile('my-file.txt', 'utf8', function(err, data) {\n    if (err) throw err;\n    console.log(data);\n});", "date": "Mar 27 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Thoughtless Tuatara", "source_name": null, "source_url": null},
{"title": "readfilesync", "code": "const fs = require('fs')\n\ntry {\n  const data = fs.readFileSync('/Users/joe/test.txt', 'utf8')\n  console.log(data)\n} catch (err) {\n  console.error(err)\n}", "date": "Aug 30 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Light Locust", "source_name": null, "source_url": null},
{"title": "node readFileSync json", "code": "const fs = require('fs');\n\nlet rawdata = fs.readFileSync('student.json');\nlet student = JSON.parse(rawdata);\nconsole.log(student);\n", "date": "Feb 25 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Ham-Solo", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-json-files-with-node-js/"},
{"title": "fs.readfile", "code": "fs.readFile('filename', function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    var content = data;\n  \n    console.log(content);  \n   \n});", "date": "Apr 21 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "If-dev", "source_name": null, "source_url": null},
{"title": "node read file sync", "code": "// macOS, Linux, and Windows\nfs.readFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nfs.readFileSync('<directory>'); // => <data>", "date": "Jun 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Grotesque Gharial", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/fs.html#fs_fs_readfilesync_path_options"},
{"title": "readfile async nodejs", "code": "const fs = require('fs');\nconst util = require('util');\n\n// Convert fs.readFile into Promise version of same    \nconst readFile = util.promisify(fs.readFile);\n\nfunction getStuff() {\n  return readFile('test');\n}\n\n// Can't use `await` outside of an async function so you need to chain\n// with then()\ngetStuff().then(data => {\n  console.log(data);\n})\n", "date": "Dec 04 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Salo Hopeless", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/46867517/how-to-read-file-with-async-await-properly/46867579"},
{"title": "readfilesync", "code": "const fs = require('fs')\n\ntry {\n  const data = fs.readFileSync('/Users/joe/test.txt', 'utf8')\n  console.log(data)\n} catch (err) {\n  console.error(err)\n}", "date": "Aug 30 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Light Locust", "source_name": null, "source_url": null},
{"title": "referenceerror document is not defined node js", "code": "GLOBAL.document = new JSDOM(html).window.document;", "date": "Apr 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Horrible Horse", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/32126003/node-js-document-is-not-defined"},
{"title": "referenceerror document is not defined node js", "code": "var jsdom = require(\"jsdom\");\nvar JSDOM = jsdom.JSDOM;", "date": "Apr 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Horrible Horse", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/32126003/node-js-document-is-not-defined"},
{"title": "ReferenceError: fs is not defined node js", "code": "// Define the `fs` at the beginning of the script\nconst fs = require('fs');", "date": "May 30 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Condemned Cockroach", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/a/43171719/3408342"},
{"title": "referenceerror document is not defined node js", "code": "var jsdom = require(\"jsdom\");\nvar JSDOM = jsdom.JSDOM;", "date": "Apr 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Horrible Horse", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/32126003/node-js-document-is-not-defined"},
{"title": "read html file node js", "code": "const http = require(\"http\");\n//use fs module at first to read file \nconst fs = require(\"fs\");\n\nconst hostname = \"127.0.0.1\";\nconst port = 3000;\n// simple code to read file using fs module\nconst files = fs.readFileSync(\"new.html\");\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  // give correct input for html\n  res.setHeader(\"Content-Type\", \"text/html\");\n  res.end(files);\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n  console.log(\"Done\")\n});\n//simple code to make server and read file", "date": "Dec 12 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Victorious Vole", "source_name": null, "source_url": null},
{"title": "javascript write to file", "code": "<script> \n// Requiring fs module in which \n// writeFile function is defined. \nconst fs = require('fs') \n  \n// Data which will write in a file. \nlet data = \"Learning how to write in a file.\"\n  \n// Write data in 'Output.txt' . \nfs.writeFile('Output.txt', data, (err) => { \n      \n    // In case of a error throw err. \n    if (err) throw err; \n}) \n</script> ", "date": "Sep 09 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Silly Squirrel", "source_name": null, "source_url": null},
{"title": "node open file", "code": "const fs = require(\"fs\");\n\n// __dirname means relative to script. Use \"./data.txt\" if you want it relative to execution path.\nfs.readFile(__dirname + \"/data.txt\", (error, data) => {\n    if(error) {\n        throw error;\n    }\n    console.log(data.toString());\n});", "date": "May 25 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Nathan uses Linux", "source_name": null, "source_url": null},
{"title": "nodejs readfile", "code": "const fs = require('fs');\n\nfs.readFile('/Users/joe/test.txt', 'utf8' , (err, data) => {\n  if (err) {\n    console.error(err);\n    return\n  }\n  console.log(data);\n});", "date": "Aug 30 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Light Locust", "source_name": null, "source_url": null},
{"title": "read file in nodejs using fs", "code": "let myFile = \"./myText.txt\";\nconst fs = require(\"fs\");\n\t\t\napp.all('/test', async (req, res) => {\n\ttry {\n\t\tconst readData = fs.readFileSync(myFile, 'utf8');\n\t\tif (readData) {\n\t\t\tres.send(readData)\n\t\t}\n\t} catch (error) {\n\t\tres.send(\"something is wrong\", error)\n\t}\n})", "date": "Jan 07 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "abhi", "source_name": null, "source_url": null},
{"title": "read json file nodejs", "code": "const fs = require('fs');\nconst path = require('path');\n\nlet rawdata = fs.readFileSync(path.resolve(__dirname, 'student.json'));\nlet student = JSON.parse(rawdata);\nconsole.log(student);", "date": "Apr 13 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Victor Grk", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-json-files-with-node-js/"},
{"title": "write json file nodejs", "code": "const fs = require('fs');\nconst path = require('path');\n\nlet student = { \n    name: 'Mike',\n    age: 23, \n    gender: 'Male',\n    department: 'English',\n    car: 'Honda' \n};\n \nfs.writeFileSync(path.resolve(__dirname, 'student.json'), JSON.stringify(student));\n", "date": "Apr 13 2020", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "Victor Grk", "source_name": null, "source_url": null},
{"title": "how to use json file in nodejs", "code": "D:\\NodeJs>node readsync.js\n *START*\nOutput Content:\n /* content here */\n*EXIT*\n// Define JSON File\n var fs = require(\"fs\");\n console.log(\"\\n *STARTING* \\n\");\n// Get content from file\n var contents = fs.readFileSync(\"jsoncontent.json\");\n// Define to JSON type\n var jsonContent = JSON.parse(contents);\n// Get Value from JSON\n console.log(\"User Name:\", jsonContent.username);\n console.log(\"Email:\", jsonContent.email);\n console.log(\"Password:\", jsonContent.password);\nlog(\"\\n *EXIT* \\n\");\n", "date": "Dec 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Annoying Aardvark", "source_name": "www.codementor.io", "source_url": "https://www.codementor.io/@codementorteam/how-to-use-json-files-in-node-js-85hndqt32"},
{"title": "nodejs include json file", "code": "config = require(\"./yourfile.json\"); // Note, \"config\" can be changed to your liking. ", "date": "Jan 15 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "HeyItsDeveloperRhys", "source_name": null, "source_url": null},
{"title": "how to use json file in nodejs", "code": "// Read Synchrously\nvar fs = require(\"fs\");\nconsole.log(\"\\n *START* \\n\");\nvar content = fs.readFileSync(\"content.txt\");\nconsole.log(\"Output Content : \\n\"+ content);\nconsole.log(\"\\n *EXIT* \\n\");\n", "date": "Dec 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Annoying Aardvark", "source_name": "www.codementor.io", "source_url": "https://www.codementor.io/@codementorteam/how-to-use-json-files-in-node-js-85hndqt32"},
{"title": "difference between req.query and req.params", "code": "req.params contains route parameters\n(in the path portion of the URL),\nand req.query contains the URL query parameters\n(after the ? in the URL).\n\nYou can also use req.param(name) to look up a parameter in both places\n(as well as req.body),\nbut this method is now deprecated.", "date": "Dec 31 2019", "vote": 3, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Southern Lapwing", "source_name": null, "source_url": null},
{"title": "req.params.id in nodejs", "code": "req.params.id // It's been like requesting the value 'id' using parameter(params)", "date": "Dec 01 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Different Dingo", "source_name": null, "source_url": null},
{"title": "read data from url node js", "code": "var http = require('http');\n\nvar options = {\n    host: 'google.com',\n    path: '/'\n}\nvar request = http.request(options, function (res) {\n    var data = '';\n    res.on('data', function (chunk) {\n        data += chunk;\n    });\n    res.on('end', function () {\n        console.log(data);\n\n    });\n});\nrequest.on('error', function (e) {\n    console.log(e.message);\n});\nrequest.end();", "date": "Jun 20 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Cooperative Caterpillar", "source_name": null, "source_url": null},
{"title": "read body of post request nodejs", "code": "app.use(express.urlencoded({ extended: true }));\nconsole.log(req.body);", "date": "Apr 20 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Confused Chamois", "source_name": null, "source_url": null},
{"title": "react and node js sample project github", "code": "    \"webpack-build-logger\": \"^0.0.5\",\n    \"webpack-logging-plugin\": \"^0.1.2\"", "date": "Mar 03 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fierce Fox", "source_name": "github.com", "source_url": "https://github.com/martinjackson/react-node-example"},
{"title": "Razorpay generate Signature in the node js", "code": "const crypto = require(\"crypto\");\nconst hmac = crypto.createHmac('sha256', RAZORPAY_KEY_SECRET);\n\nhmac.update(razorpayOrderId + \"|\" + razorpayPaymentId);\nlet generatedSignature = hmac.digest('hex');\n\nlet isSignatureValid = generatedSignature == payload.razorpay_signature;\n", "date": "Apr 20 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "amit.bhagat", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/56573028/razorpay-signature-verification-not-happening-as-sha256-digest-is-wrong-nodejs"},
{"title": "javascript generate random string", "code": "// Generate a random alphanumerical string of length 11 ( change substring parameter for other length)\nMath.random().toString(36).substring(2);", "date": "Jul 16 2020", "vote": 29, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "js random string", "code": "function randomString(length) {\n\t\tvar result           = '';\n\t\tvar characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~!@#$%^&*()_+=-';\n\t\tvar charactersLength = characters.length;\n\t\tfor ( var i = 0; i < length; i++ ) {\n\t\t   result += characters.charAt(Math.floor(Math.random() * charactersLength));\n\t\t}\n\t\treturn result;\n\t }\nrandomString(4);", "date": "Oct 27 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Dizzy Dove", "source_name": null, "source_url": null},
{"title": "javascript get random string", "code": "function getRandomString(length) {\r\n    var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var result = '';\r\n    for ( var i = 0; i < length; i++ ) {\r\n        result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\r\n    }\r\n    return result;\r\n}\r\n\r\n//usage: getRandomString(20); // pass desired length of random string", "date": "Jul 23 2019", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "random string js", "code": "const string_length = 10\n[...Array(string_length)].map(i=>(~~(Math.random()*36)).toString(36)).join('')", "date": "Sep 04 2020", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Yoyo Bu", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript"},
{"title": "how to generate random string in node js", "code": "var crypto = require(\"crypto\");\nvar id = crypto.randomBytes(20).toString('hex');\n\n// \"bb5dc8842ca31d4603d6aa11448d1654\"", "date": "Jul 23 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Fine Fly", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript"},
{"title": "random string generator node js", "code": "function makeid(length) {\n    var result           = [];\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n      result.push(characters.charAt(Math.floor(Math.random() * \n charactersLength)));\n   }\n   return result.join('');\n}\n\nconsole.log(makeid(5));", "date": "Apr 19 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Calm Crocodile", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript"},
{"title": "random id number nodejs", "code": "const crypto = require(\"crypto\");\n\nconst id = crypto.randomBytes(16).toString(\"hex\");\n\nconsole.log(id); // => f9b327e70bbcf42494ccb28b2d98e00e", "date": "May 16 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Amin :)", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/23327010/how-to-generate-unique-id-with-node-js"},
{"title": "how to get file name in directory node js", "code": "const fs = require('fs')\n\nconst dir = '/Users/flavio/folder'\nconst files = fs.readdirSync(dir)\n\nfor (const file of files) {\n  console.log(file)\n}\n", "date": "Oct 16 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Quaint Quail", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/how-to-get-files-names/"},
{"title": "read file node", "code": "// load fs\nconst fs = require(\"fs\");\n// read the file\nconst content = fs.readFileSync(\"./my_file.txt\");\n// print it\nconsole.log(content.toString());", "date": "Oct 11 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "ali ahmed", "source_name": null, "source_url": null},
{"title": "node list files in directory", "code": "\n//requiring path and fs modules\nconst path = require('path');\nconst fs = require('fs');\n//joining path of directory \nconst directoryPath = path.join(__dirname, 'Documents');\n//passsing directoryPath and callback function\nfs.readdir(directoryPath, function (err, files) {\n    //handling error\n    if (err) {\n        return console.log('Unable to scan directory: ' + err);\n    } \n    //listing all files using forEach\n    files.forEach(function (file) {\n        // Do whatever you want to do with the file\n        console.log(file); \n    });\n});", "date": "Jun 26 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Clever Crane", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/2727167/how-do-you-get-a-list-of-the-names-of-all-files-present-in-a-directory-in-node-j"},
{"title": "how to get file name in directory node js", "code": "const path = require('path')\n\n//...\n\n//inside the `for` loop\nconst stat = fs.lstatSync(path.join(dir, file))\n", "date": "Oct 16 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Quaint Quail", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/how-to-get-files-names/"},
{"title": "read directory in node js", "code": "const testFolder = './tests/';\nconst fs = require('fs');\n\nfs.readdir(testFolder, (err, files) => {\n  files.forEach(file => {\n    console.log(file);\n  });\n});\n", "date": "Apr 09 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fragile Ferret", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/2727167/how-do-you-get-a-list-of-the-names-of-all-files-present-in-a-directory-in-node-j"},
{"title": "node open file", "code": "const fs = require(\"fs\");\n\n// __dirname means relative to script. Use \"./data.txt\" if you want it relative to execution path.\nfs.readFile(__dirname + \"/data.txt\", (error, data) => {\n    if(error) {\n        throw error;\n    }\n    console.log(data.toString());\n});", "date": "May 25 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Nathan uses Linux", "source_name": null, "source_url": null},
{"title": "read a file nodejs", "code": "const fs = require('fs');\n\nfs.readFile('my-file.txt', 'utf8', function(err, data) {\n    if (err) throw err;\n    console.log(data);\n});", "date": "Apr 17 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Yucky Yacare", "source_name": null, "source_url": null},
{"title": "read file in nodejs using fs", "code": "let myFile = \"./myText.txt\";\nconst fs = require(\"fs\");\n\t\t\napp.all('/test', async (req, res) => {\n\ttry {\n\t\tconst readData = fs.readFileSync(myFile, 'utf8');\n\t\tif (readData) {\n\t\t\tres.send(readData)\n\t\t}\n\t} catch (error) {\n\t\tres.send(\"something is wrong\", error)\n\t}\n})", "date": "Jan 07 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "abhi", "source_name": null, "source_url": null},
{"title": "nodejs open file", "code": "fs = require('fs')\nfs.readFile('/etc/hosts', 'utf8', function (err,data) {\n  if (err) {\n    return console.log(err);\n  }\n  console.log(data);\n});", "date": "Dec 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Gorgeous Goshawk", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/file-system/how-to-read-files-in-nodejs/"},
{"title": "puppeteer example nodejs", "code": "require('dotenv/config')\nconst puppeteer = require('puppeteer')\n\n(async () => {\n\ttry {\n\t\tconst browser = await puppeteer.launch({\n\t\t\theadless: false,\n\t\t\targs: [\n\t\t\t\t'--allow-external-pages',\n\t\t\t\t'--allow-third-party-modules',\n\t\t\t\t'--data-reduction-proxy-http-proxies',\n\t\t\t\t'--no-sandbox'\n\t\t\t]\n\t\t})\n\t\tconst context = await browser.createIncognitoBrowserContext()\n\t\tconst page = await context.newPage()\n\t\tawait page.goto('https://medium.com', { waitUntil: 'networkidle2' })\n\t\tawait page.setUserAgent(process.env.USER_AGENT)\n\t\t// await page.setViewport({ width: 1920, height: 1080 })\n\t\tawait page.evaluate(() => window.scrollBy(0, 1000))\n\t\tawait page.waitForTimeout()\n\t\tawait page.click('.qw a')\n\t\tawait page.waitForNavigation({ waitUntil: 'networkidle2', delay: 1000 })\n\t\tawait page.click('a[aria-label=\"Search\"]')\n\t\tawait page.waitForNavigation({ waitUntil: 'networkidle2', delay: 1000 })\n\t\tawait page.focus('.js-searchInput')\n\t\tawait page.type('.js-searchInput', 'react', { delay: 100 })\n\t\tawait page.waitForSelector('.js-searchInput', { timeout: 1000 })\n\t\tawait page.keyboard.press(String.fromCharCode(13))\n\t\tawait page.waitForSelector('.js-postListHandle', { timeout: 1000 })\n\t\tawait page.screenshot({ path: 'screnshoot.jpg', quality: 80 })\n\n\t\tawait browser.close()\n\t} catch (err) {\n\t\tconsole.log(`'Puppeteer Error Detencted -> ${err}'`)\n\t}\n})()\n", "date": "Dec 28 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "pug node js express", "code": "app.set('view engine', 'pug')", "date": "May 01 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Alive Aardvark", "source_name": null, "source_url": null},
{"title": "pug node js express", "code": "npm install pug\n\n", "date": "May 01 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Alive Aardvark", "source_name": null, "source_url": null},
{"title": "express view engine', 'ejs", "code": "app.set(\"view engine\", \"ejs\");\napp.set(\"views\", path.join(__dirname, \"views\"));", "date": "Jan 22 2021", "vote": 15, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": null, "source_url": null},
{"title": "promp node js", "code": "const readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question(\"What is your name ? \", function saveInput(name) {\n  console.log(`His name is ${name}`);\n  rl.close();\n});\n\nrl.on(\"close\", function saveInput() {\n    console.log(\"\\nBYE BYE !!!\");\n    process.exit(0);\n});", "date": "May 16 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "JoseHdez", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/command-line/how-to-prompt-for-command-line-input/"},
{"title": "process.argv[2] node js", "code": ">>node myprogram.js firstarg secondarg\n\nprocess.argv[0] == \"node\"\n\nprocess.argv[1] == \"myprogram.js\"\n\nprocess.argv[2] == \"firstarg\"\n\nprocess.argv[3] == \"secondarg\"\n\n//process.argv[0] same as process.argv.slice(0)\n\n", "date": "Feb 27 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Ian Selley", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/22213980/could-someone-explain-what-process-argv-means-in-node-js-please"},
{"title": "nodejs print", "code": "print(\"hello world\");", "date": "Jan 15 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "HeyItsDeveloperRhys", "source_name": null, "source_url": null},
{"title": "print in node js", "code": "console.log('hello world');\n// Prints: hello world, to stdout\nconsole.log('hello %s', 'world');\n// Prints: hello world, to stdout\nconsole.error(new Error('Whoops, something bad happened'));\n// Prints: [Error: Whoops, something bad happened], to stderr\n\nconst name = 'Will Robinson';\nconsole.warn(`Danger ${name}! Danger!`);\n// Prints: Danger Will Robinson! Danger!, to stderr", "date": "Aug 10 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bored Boar", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/console.html"},
{"title": "postmark with nodejs", "code": "// Install and Require postmark library => npm install postmark:\nvar postmark = require(\"postmark\");\n\n// Send an email:\nvar client = new postmark.Client(\"POSTMARK-SERVER-API-TOKEN-HERE\");\n\nclient.sendEmail({\n  \"From\": \"sender@example.com\",\n  \"To\": \"recipient@example.com\",\n  \"Subject\": \"Test\",\n  \"TextBody\": \"Hello from Postmark!\"\n});", "date": "Jun 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "ZionLloyd", "source_name": "postmarkapp.com", "source_url": "https://postmarkapp.com/send-email/node"},
{"title": "post xml with axios nodejs", "code": "var xmlBodyStr = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n       <req:KnownTrackingRequest xmlns:req=\"http://www.example.com\" \n                xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n                xsi:schemaLocation=\"http://www.example.com\n                TrackingRequestKnown.xsd\">\n         <Request>\n           <ServiceHeader>\n              <MessageTime>2002-06-25T11:28:56-08:00</MessageTime>\n              <MessageReference>1234567890123456789012345678</MessageReference>\n              <SiteID>SiteID</SiteID>\n              <Password>Password</Password>\n           </ServiceHeader>\n         </Request>\n         <LanguageCode>en</LanguageCode>\n         <AWBNumber>01234567890</AWBNumber>\n         <LevelOfDetails>LAST_CHECK_POINT_ONLY</LevelOfDetails>`;\n\nvar config = {\n     headers: {'Content-Type': 'text/xml'}\n};\n\naxios.post('https://POST_URL', xmlBodyStr, config); \n", "date": "Mar 08 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Ugliest Unicorn", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/53058805/how-to-send-xml-data-using-axios-library"},
{"title": "post express node js input", "code": "<form method=\"POST\" action=\"/submit-form\">\n  <input type=\"text\" name=\"username\" />\n  <input type=\"submit\" />\n</form>", "date": "Dec 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Poor Porcupine", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/express-forms/"},
{"title": "post express node js input", "code": "const express = require('express')\nconst app = express()\n\napp.use(express.urlencoded({\n  extended: true\n}))\n", "date": "Dec 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Poor Porcupine", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/express-forms/"},
{"title": "post express node js input", "code": "app.post('/submit-form', (req, res) => {\n  const username = req.body.username\n  //...\n  res.end()\n})\n", "date": "Dec 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Poor Porcupine", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/express-forms/"},
{"title": "promp node js", "code": "const readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question(\"What is your name ? \", function saveInput(name) {\n  console.log(`His name is ${name}`);\n  rl.close();\n});\n\nrl.on(\"close\", function saveInput() {\n    console.log(\"\\nBYE BYE !!!\");\n    process.exit(0);\n});", "date": "May 16 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "JoseHdez", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/command-line/how-to-prompt-for-command-line-input/"},
{"title": "javascript promise", "code": "var promise = new Promise(function(resolve, reject) {\n  // do some long running async thing\u00e2\u20ac\u00a6\n  \n  if (/* everything turned out fine */) {\n    resolve(\"Stuff worked!\");\n  }\n  else {\n    reject(Error(\"It broke\"));\n  }\n});\n\n//usage\npromise.then(\n  function(result) { /* handle a successful result */ },\n  function(error) { /* handle an error */ }\n);", "date": "Jul 01 2019", "vote": 48, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "promise js", "code": "We use promise to make a  AsyncFunction, cose simetime we have to wait that function give \nus some result.\nExample, if we use ajax we have await ajax data or statament.\n_____________________________________\nMake a simple example.\n_____________________________________\nvar asyncronus_function= (number)=>\n\t\t{\n\t\t\treturn new Promise( (accept, reject)=>\n\t\t\t{\n\t\t\t})\n\t\t}                 \n_____________________________________\nthis function return a promise Object, thet required a function executor\nthis functions (accept, reject) are defined in the executor \nfunction, that was needed in promise constructor.\nSyntax: new Promise (executor)\nexecutor= (accept, reject) =>{}\n\nif function end well we return a accept(), otherwise reject()\n_____________________________________\nLet complete asyncronus_function\n_____________________________________\nvar asyncronus_function= (number)=>\n\t\t{\n\t\t\treturn new Promise( (accept, reject)=>\n\t\t\t{\n\t\t\t\tif(number>10)\n\t\t\t\treturn accept(\"my first async\");\n\t\t\t\treturn reject(\"my first async error\")\n\t\t\t})\n\n\t\t}\nif it dont return any of this 2 function, Promise state is [PENDING] ,\nif return accept is [RESOLVED]  end if return reject is [REJECTED]\n_____________________________________\nhow we can retrieve accept or reject?\n_____________________________________\nthere is two methods really important, that we have to consider afther we call this function\n1) .then(function(error){}) is call when promise state is [RESOLVED]\n2) .error(function(error){}) is call when promise state is [REJECTED]\n3) do nothing if [PENDING]\n_____________________________________\nlet call asyncronus_function()!!! \n_____________________________________\n\tasyncronus_function(MY_NUMBER).then(function(data)\n        {\n\t\t\tconsole.log(data)\n    \t}).catch(error => \n        {\n      \t\t\tconsole.log(error)\n    \t});\n\t\t\nif  MY_NUMBER> 10 ,asyncronus_function print data : OUTPUT my first async\nif MY_NUMBER<10 , asyncronus_function print error : OUTPUT my first async error\nHOPE it halp and have a nice day! \n\n\n", "date": "Oct 06 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Ax_Misaki_Mei", "source_name": null, "source_url": null},
{"title": "promise nodejs", "code": "async function myFunction(){\n    return new Promise((resolve,reject)=>{\n        try {\n            // your code\n            resolve(/* your data */);\n        } catch (error) {\n            reject(error);\n        }\n    });\n}", "date": "Jan 28 2021", "vote": -2, "tags": ["javascript", "nodejs"], "posted_by": "Dizzy Dog", "source_name": null, "source_url": null},
{"title": ".promise()", "code": "var promise = new Promise(function(resolve, reject) {\n  // do some long running async thing\u00e2\u20ac\u00a6\n  \n  if (/* everything turned out fine */) {\n    resolve(\"Stuff worked!\");\n  }\n  else {\n    reject(Error(\"It broke\"));\n  }\n});", "date": "Jun 04 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Sore Salamander", "source_name": null, "source_url": null},
{"title": "promise js", "code": "//example\nfunction tetheredGetNumber(resolve, reject) {\n  try {\n    setTimeout( \n      function() {\n        const randomInt = Date.now();\n        const value = randomInt % 10;\n        try { \n          if(value >= THRESHOLD_A) {\n            throw new Error(`Too large: ${value}`);\n          } \n        } catch(msg) {\n            reject(`Error in callback ${msg}`); \n        }\n      resolve(value);\n      return;\n    }, 500);\n  } catch(err) {\n    reject(`Error during setup: ${err}`);\n  }\n  return;\n}", "date": "Oct 02 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Super Starling", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"},
{"title": "print to console without newline nodejs", "code": "process.stdout.write(\"hello: \");", "date": "Jan 26 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "QuietHumility", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/6157497/node-js-printing-to-console-without-a-trailing-newline"},
{"title": "path.dirname nodejs", "code": "/* The path.dirname() method returns the directory name of a path,\nsimilar to the Unix dirname command. Trailing directory separators\nare ignored, see path.sep. */\n\npath.dirname('/foo/bar/baz/asdf/quux');\n// Returns: '/foo/bar/baz/asdf'", "date": "May 03 2021", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": "nodejs.org", "source_url": "https://nodejs.org/dist/latest-v14.x/docs/api/path.html#path_path_dirname_path"},
{"title": "path.join nodejs", "code": "/* The path.join() method joins all given path segments together using\nthe platform-specific separator as a delimiter, then normalizes the\nresulting path. */\n\npath.join('/foo', 'bar', 'baz/asdf', 'quux', '..');\n// Returns: '/foo/bar/baz/asdf'\n\npath.join('foo', {}, 'bar');\n// Throws 'TypeError: Path must be a string. Received {}'", "date": "May 03 2021", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": "nodejs.org", "source_url": "https://nodejs.org/dist/latest-v14.x/docs/api/path.html#path_path_join_paths"},
{"title": "node.js name of file", "code": "var path = require('path');\nvar scriptName = path.basename(__filename);", "date": "Nov 10 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Lockeness", "source_name": null, "source_url": null},
{"title": "join method in express", "code": "app.use('/static', express.static(path.join(__dirname, 'public')))\n", "date": "Nov 27 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Hilarious Hippopotamus", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/static-files.html"},
{"title": "path.basename nodejs", "code": "/* The path.basename() method returns the last portion of a path,\nsimilar to the Unix basename command. Trailing directory separators\nare ignored, see path.sep. */\n\npath.basename('/foo/bar/baz/asdf/quux.html');\n// Returns: 'quux.html'\n\npath.basename('/foo/bar/baz/asdf/quux.html', '.html');\n// Returns: 'quux'", "date": "May 03 2021", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": "nodejs.org", "source_url": "https://nodejs.org/dist/latest-v14.x/docs/api/path.html#path_path_basename_path_ext"},
{"title": "passing variable in table row delete button node js express", "code": "<button class=\"delete-button\" onclick=\"deleting(<%= item._id %>)\">X</button>\nfunction deleting(value){\nfetch('/delete', { method: 'POST', data: {buttonId: value} })\n  .then(function (response) {\n    if (response.ok) {\n      console.log('Delete was recorded')\n      return\n    }\n    throw new Error('Request failed.')\n  })\n  .catch(function (error) {\n    console.log(error)\n  })\n", "date": "Dec 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tender Thrush", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/58401828/how-to-pass-name-or-id-of-a-button-to-node-using-fetch"},
{"title": "pass data ino pug nodejs", "code": "1) Use this first\n\napp.set('views', __dirname + '/public/views');\napp.set('view engine', 'pug');\n\n2) Then pass this to first visit\n\napp.get('/', function (req, res) {\n    res.render('index', { title: 'Hey', message: 'Hello there!'});\n});\n\n3) Then echo in template file \"index.pug\" in \"/public/views\"\n\nhtml\n   head\n   title= title\nbody\n   h1= message", "date": "May 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Muddy Magpie", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/38044237/node-js-pass-a-variable-to-jade-pug"},
{"title": "orm for postgres node js", "code": "$ npm install sequelize\n$ npm install mysql\n", "date": "Jul 20 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Inquisitive Impala", "source_name": "sequelize.readthedocs.io", "source_url": "https://sequelize.readthedocs.io/en/1.7.0/"},
{"title": "open folder node js", "code": "require('child_process').exec('start \"\" \"c:\\\\test\"');", "date": "Mar 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Innocent Iguana", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/35072428/open-a-directory-in-file-explorer"},
{"title": "onclick node js", "code": "object.onclick = function() { \nconsole.log(\"Clicked!\");\n};", "date": "May 16 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Aqua", "source_name": null, "source_url": null},
{"title": "openseamap nodejs github", "code": "\n\nvar OpenSeaMap = L.tileLayer('https://tiles.openseamap.org/seamark/{z}/{x}/{y}.png', {\n\tattribution: 'Map data: \u00a9 <a href=\"http://www.openseamap.org\">OpenSeaMap</a> contributors'\n});\n", "date": "Jan 21 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Frightened Frog", "source_name": "leaflet-extras.github.io", "source_url": "https://leaflet-extras.github.io/leaflet-providers/preview/"},
{"title": "postgres node", "code": "//connect to postgres database in node\n\nconst Pool = require('pg').Pool;\n\nconst pool = new Pool({\n    user: '',\n    host: 'localhost',\n    database:  '',\n    password: '',\n    port:5432,\n  })\n\n//query example\n\napp.get('/users',async(req,res)=>{\n  \n  try{\n     let resp=await pool.query('SELECT * FROM users');\n  }catch(err){\n     res.status(200).send(resp.rows);\n  }\n})\n\n  ", "date": "Apr 11 2020", "vote": 3, "tags": ["javascript", "nodejs", "sql"], "posted_by": "Arqa", "source_name": null, "source_url": null},
{"title": "postgresql nodejs", "code": "//connect to postgres database in node\n\nconst Pool = require('pg').Pool;\n\nconst pool = new Pool({\n    user: '',\n    host: 'localhost',\n    database:  '',\n    password: '',\n    port:5432,\n  })\n\n//query example\n\napp.get('/users',async(req,res)=>{\n  \n  try{\n     let resp=await pool.query('SELECT * FROM users');\n  }catch(err){\n     res.status(200).send(resp.rows);\n  }\n})\n", "date": "Apr 20 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Average Addax", "source_name": null, "source_url": null},
{"title": "postgresql nodejs", "code": "const { Client } = require('pg')const client = new Client();(async () => {  await client.connect()  const res = await client.query('SELECT $1::text as message', ['Hello world!'])  console.log(res.rows[0].message) // Hello world!  await client.end()})()", "date": "Sep 08 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Shy Seal", "source_name": "node-postgres.com", "source_url": "https://node-postgres.com/"},
{"title": "node js postgresql query", "code": "// callback\nclient.query('SELECT NOW() as now', (err, res) => {\n  if (err) {\n    console.log(err.stack)\n  } else {\n    console.log(res.rows[0])\n  }\n})\n// promise\nclient\n  .query('SELECT NOW() as now')\n  .then(res => console.log(res.rows[0]))\n  .catch(e => console.error(e.stack))", "date": "May 05 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Zealous Zebra", "source_name": "node-postgres.com", "source_url": "https://node-postgres.com/features/queries"},
{"title": "nohup run nodejs", "code": "nohup node server.js &", "date": "Feb 14 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Alive Angelfish", "source_name": null, "source_url": null},
{"title": "objectid is not defined node js mongodb", "code": "var ObjectId = require('mongodb').ObjectID;\n", "date": "Nov 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Disgusted Dragonfly", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/17545311/correct-way-to-search-for-mongodb-entries-by-id-in-node"},
{"title": "nodejs zlib", "code": "const zlib = require('zlib')\n\n/**\n * @description custom compression content encoding\n */\n\nmodule.exports = () => {\n  return (req, res, next) => {\n    const compressType = req.headers['accept-encoding'].replace(/[,]/g, '').split(' ')\n\n    if (compressType[0] !== undefined && compressType[0] !== null) {\n      zlib.createGzip({\n        level: zlib.constants.Z_BEST_COMPRESSION,\n        strategy: zlib.constants.Z_RLE,\n        flush: zlib.constants.Z_FULL_FLUSH\n      })\n      return next()\n    }\n\n    if (compressType[1] !== undefined && compressType[1] !== null) {\n      zlib.createDeflate({\n        level: zlib.constants.Z_BEST_COMPRESSION,\n        strategy: zlib.constants.Z_RLE,\n        flush: zlib.constants.Z_FULL_FLUSH\n      })\n      return next()\n    }\n\n    if (compressType[2] !== undefined && compressType[2] !== null) {\n      zlib.createBrotliCompress({\n        flush: zlib.constants.BROTLI_OPERATION_FLUSH\n      })\n      return next()\n    }\n  }\n}", "date": "Sep 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "nodejs write to log file", "code": "var access = fs.createWriteStream(dir + '/node.access.log', { flags: 'a' })\n      , error = fs.createWriteStream(dir + '/node.error.log', { flags: 'a' });\n\n// redirect stdout / stderr\nproc.stdout.pipe(access);\nproc.stderr.pipe(error);", "date": "May 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Juligum", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/8393636/node-log-in-a-file-instead-of-the-console"},
{"title": "nodejs websocket tutorial", "code": "/*\nAuthor: Logan Smith - Perkins\n*/\n\n// Importing the http library, used to start servers\nconst http = require('http');\n// Importing the websocket library which is used to interface between webpage and nodejs\nconst WebSocketServer = require('websocket').server;\n// This server is created using the http createServer function, which enables the user to create a http connection with a webpage\nconst server =- http.createServer();\n// The server then listens on the port specified\nserver.listen(7000);\n\n// We then create a new variable which will store the actual server I'll be running\nconst wsServer = new WebSocketServer({\n\t// Then we set the parameter of httpServer to the server variable that we said that would be listening on the port specified\n\thttpServer : server\n});\n\n// Next we check if someome is trying to connect to the server, i.e. the name request, it's requesting access to the server\nwsServer.on('request', function(request){\n\t// We store the actual connection as a variable and we accept that client to connect to this server\n\tconst connection = request.accept(null, request.origin);\n\t// This function is run when this client sends a message to the server.\n\tconnection.on('message', function(message){\n\t\t// We print out to the console the recieved message decoded to utf8\n\t\tconsole.log(\"Recieved Message: \" + message.utf8Data);\n\t\t// Then we send specifically to this connection back a message\n\t\tconnection.sendUTF(\"Hello this is the websocket server.\");\n\t});\n\t// This code is run when the user disconnects from the server.\n\tconnection.on('close', function(reasonCode, description){\n\t\t// We just print to the console that a client has disconnected from the server.\n\t\tconsole.log(\"A client has disconnected.\");\n\t});\n});", "date": "Feb 16 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Silly Salamander", "source_name": null, "source_url": null},
{"title": "nodejs watermark image", "code": "//Install\nnpm install imaginary --save\n\n//Import \nvar fs = require('fs')\nvar imaginary = require('imaginary')\nvar serverUrl = 'localhost:8080'\n\nimaginary('myImage.jpg')\n  .server(serverUrl)\n  .watermark({ text: 'copyright' })\n  .on('error', function (err) {\n    console.error('Cannot resize the image:', err)\n  })\n  .pipe(fs.createWriteStream('markedImage.jpg'))\n", "date": "Apr 08 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/42158636/how-to-add-watermark-to-an-image-nodejs"},
{"title": "nodejs version api", "code": "import * as express from 'express';\n\n// v1/get-ride.js\nconst router = express.Router();\nrouter.post('/rides/:id', dep.verifyToken(), (req, res) => {\n    // Your code\n});\napp.use('/v1', router);\n\n\n// v2/get-ride.js\nconst router = express.Router();\nrouter.post('/rides/:id', dep.verifyToken(), (req, res) => {\n    // Your code\n});\napp.use('/v2', router);\n", "date": "May 10 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Vast Vendace", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/51513715/node-js-rest-api-versioning-the-right-way"},
{"title": "nodejs validate bnb wallet address", "code": "npm install @swyftx/api-crypto-address-validator", "date": "Apr 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Brainy Buzzard", "source_name": "github.com", "source_url": "https://github.com/Swyftx/crypto-address-validator"},
{"title": "how to close port 3000 running", "code": "### For Linux/Mac OS search (sudo) run this in the terminal:\n$ lsof -i tcp:3000\n$ kill -9 PID\n\n### On Windows:\nnetstat -ano | findstr :3000\ntskill typeyourPIDhere \n\n### change tskill for taskkill in git bash", "date": "Jan 18 2021", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "EeroV\u00e4kiparta", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/39322089/node-js-port-3000-already-in-use-but-it-actually-isnt"},
{"title": "npm port already in use", "code": "$ lsof -i tcp:3000\n$ kill -9 PID", "date": "Sep 23 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Zany Zebra", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/39322089/node-js-port-3000-already-in-use-but-it-actually-isnt"},
{"title": "port already in use node js", "code": "sudo kill -9 $(sudo lsof -t -i:3000)", "date": "Feb 11 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "abhi", "source_name": null, "source_url": null},
{"title": "nodejs ubuntu install 13.0.0", "code": "curl -sL https://deb.nodesource.com/setup_13.x | sudo bash -", "date": "May 13 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Jobayerdev", "source_name": "computingforgeeks.com", "source_url": "https://computingforgeeks.com/how-to-install-latest-nodejs-on-ubuntu-debian-linux/"},
{"title": "nodejs to exe", "code": "npm install -g pkg\npkg exampleApp.js", "date": "Mar 15 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "feddynventor", "source_name": null, "source_url": null},
{"title": "nodejs string to base64", "code": "> console.log(Buffer.from(\"Hello World\").toString('base64'));\nSGVsbG8gV29ybGQ=\n> console.log(Buffer.from(\"SGVsbG8gV29ybGQ=\", 'base64').toString('ascii'))\nHello World", "date": "Feb 18 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Condemned Centipede", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/6182315/how-to-do-base64-encoding-in-node-js"},
{"title": "Encoding and Decoding Base64 Strings in Node.js", "code": "'use strict';\n\nlet data = 'stackabuse.com';\nlet buff = new Buffer(data);\nlet base64data = buff.toString('base64');\n\nconsole.log('\"' + data + '\" converted to Base64 is \"' + base64data + '\"');\n", "date": "Mar 01 2020", "vote": -2, "tags": ["javascript", "nodejs"], "posted_by": "Shiny Shark", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/encoding-and-decoding-base64-strings-in-node-js/"},
{"title": "nodejs store selected dropdown in variable", "code": "var selectedValue = user.schoolType;\n\n<select class=\"form-control\" id=\"schoolType\" name=\"schoolType\" value=\"\n{{user.schoolType}}\">\n\n  <option value=\"none\" selected=\"{{user.schoolType === \nthis.value}}\">None</option>\n<option value=\"public\" selected=\"{{user.schoolType === \nthis.value}}\">Public</option>\n<option value=\"private\" selected=\"{{user.schoolType === \nthis.value}}\">Private</option>\n<option value=\"homeSchool\" selected=\"{{user.schoolType === \nthis.value}}\">Home School</option>\n </select>\n", "date": "Oct 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Lazy Lapwing", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/48265908/node-js-get-select-variable-based-on-database-value"},
{"title": "nodejs store json from web api", "code": "// NodeJS\nconst http = require(\"http\");\nvar url = 'https://example.com/file.json'; // Request URL\n\nhttp.get(url, function(res){\n    var body = '';\n\n    res.on('data', function(chunk){\n        body += chunk;\n    });\n\n    res.on('end', function(){\n        var data = JSON.parse(body); \n        console.log(\"Got a response: \", data.value);\n    });\n}).on('error', function(e){\n      console.log(\"Got an error: \", e);\n});", "date": "Oct 17 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Blue-eyed Bat", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/11826384/calling-a-json-api-with-node-js"},
{"title": "nodejs static website", "code": "This is the Best Static Website Framework !!\nTry this !!\n\nhttps://github.com/DFCommunity/Hexo-Web-Nary/", "date": "Jul 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Courageous Caiman", "source_name": null, "source_url": null},
{"title": "nodejs shebang", "code": "#!/usr/bin/env node", "date": "Aug 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "samflav", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/20638520/appropriate-hashbang-for-node-js-scripts/28646724"},
{"title": "nodejs sharp change image to multiple sizes", "code": "// Sharp and FS module needed.\n;(async function(){\n\tlet imgBuffer = await sharp(\"./myimage.jpg\").toBuffer()\n    let thumbnail = await sharp(imgBuffer).resize(100, 100).toBuffer()\n    let image = await sharp(imgBuffer).resize(1600, 900).toBuffer()\n    fs.writeFile(\"./thumbnail.jpg\", thumbnail, err => {\n    \tif(err) console.log(err)\n    })\n    fs.writeFile(\"./image.jpg\", thumbnail, err => {\n      if(err) console.log(err)\n    })\n})", "date": "Oct 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "NotDamian", "source_name": null, "source_url": null},
{"title": "nodejs share session", "code": "jx mt-keep:5 index", "date": "Oct 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Busy Bee", "source_name": "medium.com", "source_url": "https://medium.com/@karaxuna/how-to-share-session-across-mutiple-nodejs-http-server-instances-7d466389d123"},
{"title": "nodejs share session", "code": "var app = require('express')(),    server = require('http').createServer(app),    Session = require('express-session');// set session middlewareapp.use(new Session({    store: new JXSessionStore(), // use custom store    resave: true,    saveUninitialized: false,    secret: 'TEST_SECRET',    cookie: {        maxAge: 900000 // keep cookie    }}));// get session dataapp.get('/', function (req, res) {    res.send({        foo: req.session.foo || 'Not set. Go to \\'/set\\' to set value.',        thread: process.threadId    });});// set session dataapp.get('/set', function (req, res) {    req.session.foo = 'bar';    res.send({        thread: process.threadId,        message: 'foo value set to \\'bar\\' in session.'    });});// start servervar port = 80;server.listen(port, function () {    console.log(\"server (thread %s) listening on port %s\", process.threadId, port);});", "date": "Oct 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Busy Bee", "source_name": "medium.com", "source_url": "https://medium.com/@karaxuna/how-to-share-session-across-mutiple-nodejs-http-server-instances-7d466389d123"},
{"title": "nodejs share session", "code": "JXSessionStore.prototype.get = function (sessionId, callback) {    var session = jxcore.store.shared.read(sessionId);    var sessionParsed = session ? JSON.parse(session) : null;    callback(null, sessionParsed);}JXSessionStore.prototype.set = function (sessionId, session, callback) {    jxcore.store.shared.set(sessionId, JSON.stringify(session));    callback(null, session);}JXSessionStore.prototype.touch = function (sessionId, session, callback) {    jxcore.store.shared.set(sessionId, session);    callback(null);}JXSessionStore.prototype.destroy = function (sessionId, callback) {    jxcore.store.shared.remove(sessionId);    callback(null);}", "date": "Oct 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Busy Bee", "source_name": "medium.com", "source_url": "https://medium.com/@karaxuna/how-to-share-session-across-mutiple-nodejs-http-server-instances-7d466389d123"},
{"title": "nodejs share session", "code": "var Store = require('express-session').Store;function JXSessionStore() {    Store.call(this);}JXSessionStore.prototype.__proto__ = Store.prototype;", "date": "Oct 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Busy Bee", "source_name": "medium.com", "source_url": "https://medium.com/@karaxuna/how-to-share-session-across-mutiple-nodejs-http-server-instances-7d466389d123"},
{"title": "nodejs share session", "code": "jx install express@4.13.3 --savejx install express-session@1.11.3 --save", "date": "Oct 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Busy Bee", "source_name": "medium.com", "source_url": "https://medium.com/@karaxuna/how-to-share-session-across-mutiple-nodejs-http-server-instances-7d466389d123"},
{"title": "nodejs set dns for request", "code": "const { Resolver } = require('dns').promises;\nconst resolver = new Resolver();\nresolver.setServers(['4.4.4.4']);\n\n// This request will use the server at 4.4.4.4, independent of global settings.\nresolver.resolve4('example.org').then((addresses) => {\n  // ...\n});\n\n// Alternatively, the same code can be written using async-await style.\n(async function() {\n  const addresses = await resolver.resolve4('example.org');\n})();", "date": "Mar 04 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "JulesG10", "source_name": null, "source_url": null},
{"title": "nodejs serverless project typescript", "code": "$ sls create --template aws-nodejs-typescript --path <PROJECT-NAME>", "date": "May 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Frantic Frog", "source_name": "levelup.gitconnected.com", "source_url": "https://levelup.gitconnected.com/creating-a-simple-serverless-application-using-typescript-and-aws-part-1-be2188f5ff93"},
{"title": "nodejs server fetch is not defined", "code": "npm i node-fetch --save\n", "date": "May 03 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Drab Dingo", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/48433783/referenceerror-fetch-is-not-defined"},
{"title": "node js server", "code": "const express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))", "date": "Apr 01 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Encouraging Elk", "source_name": null, "source_url": null},
{"title": "SERVER PORT NODE.JS", "code": "const http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('Hello World');\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});", "date": "Jul 08 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Alive Antelope", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/getting-started-guide/"},
{"title": "create node js server", "code": "import express from 'express';\nconst server = express();\n\nconst port = 8080;\n\nserver.get('/', (req, res) => {\n  return res.send('Hello, Express.js!');\n})\n\nserver.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});", "date": "Mar 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mysterious Monkey", "source_name": "learn.coderslang.com", "source_url": "https://learn.coderslang.com/0047-node.js-create-your-first-express-server/"},
{"title": "nodejs start server", "code": "const http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('Hello World');\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});\n", "date": "Feb 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Enchanting Eagle", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/getting-started-guide/"},
{"title": "srart server js", "code": "require('dotenv').config();\n\nconst express = require('express');\nconst server = express();\nconst cors = require('cors');\nconst ejs = require('ejs');\nconst methodOverride = require('method-override');\nconst pg = require('pg');\nconst agent = require('superagent');\n\nconst client = new pg.Client(process.env.DATABASE_URL);\n\nserver.use(methodOverride('_method'));\nserver.use(express.static('./public'));\nserver.use(cors());\nserver.use(express.urlencoded({extended :true}));\nserver.set('view engine','ejs');", "date": "Jul 28 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Panicky Partridge", "source_name": null, "source_url": null},
{"title": "run node app locally", "code": "// Run this command in your terminal to start your node application.\n// Replace the tag with your applications main file name (ex index.js, main.js etc). \n// Add alternative a relative or absolute path before the name.\n\nnode <filename>.js", "date": "Oct 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Helpful Fox", "source_name": null, "source_url": null},
{"title": "nodejs server code", "code": "const http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('Hello World');\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});", "date": "May 20 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Technical Gamer", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/about/"},
{"title": "node js server", "code": "/* ====== create node.js server with core 'http' module ====== */\n// dependencies\nconst http = require(\"http\");\n\n// PORT\nconst PORT = 3000;\n\n// server create\nconst server = http.createServer((req, res) => {\n   if (req.url === \"/\") {\n      res.write(\"This is home page.\");\n      res.end();\n   } else if (req.url === \"/about\" && req.method === \"GET\") {\n      res.write(\"This is about page.\");\n      res.end();\n   } else {\n      res.write(\"Not Found!\");\n      res.end();\n   }\n});\n\n// server listen port\nserver.listen(PORT);\n\nconsole.log(`Server is running on PORT: ${PORT}`);\n\n/* ========== *** ========== */\n\n/* ====== create node.js server with express.js framework ====== */\n// dependencies\nconst express = require(\"express\");\n\nconst app = express();\n\napp.get(\"/\", (req, res) => {\n   res.send(\"This is home page.\");\n});\n\napp.post(\"/\", (req, res) => {\n   res.send(\"This is home page with post request.\");\n});\n\n// PORT\nconst PORT = 3000;\n\napp.listen(PORT, () => {\n   console.log(`Server is running on PORT: ${PORT}`);\n});\n\n\n// ======== Instructions ========\n// save this as index.js\n// you have to download and install node.js on your machine\n// open terminal or command prompt\n// type node index.js\n// find your server at http://localhost:3000", "date": "Feb 19 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": null, "source_url": null},
{"title": "node js server", "code": "const express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))", "date": "Apr 01 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Encouraging Elk", "source_name": null, "source_url": null},
{"title": "nodejs self quit program", "code": "process.exit()\n", "date": "Nov 15 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Yucky Yacare", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/node-terminate-program/"},
{"title": "nodejs save blob file", "code": "var imageBuffer = request.file.buffer;\nvar imageName = 'public/images/map.png';\n\nfs.createWriteStream(imageName).write(imageBuffer);\n", "date": "Oct 08 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Jealous Jackal", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/51709358/create-image-file-in-nodejs-from-blob"},
{"title": "nodejs save blob file", "code": "var base64Data = req.body.image.replace(/^data:image\\/png;base64,/, \"\");\n\nrequire(\"fs\").writeFile(\"out.png\", base64Data, 'base64', function(err) {\n  console.log(err);\n});\n", "date": "Oct 08 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Jealous Jackal", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/51709358/create-image-file-in-nodejs-from-blob"},
{"title": "nodejs restart process", "code": "Generally process managers are used to (automatically) restart processes, such as monit, PM2, nodemon, forever, etc.\n\nHowever, you could restart from the process itself by simply spawning a detached child process that waits some period of time and then executes the same script. You could do this as a combination of two commands, one to sleep and the other the current command line, or you could simply incorporate the sleep into your script. An example of the latter:\n\nvar spawn = require('child_process').spawn;\n\n(function main() {\n\n  if (process.env.process_restarting) {\n    delete process.env.process_restarting;\n    // Give old process one second to shut down before continuing ...\n    setTimeout(main, 1000);\n    return;\n  }\n\n  // ...\n\n  // Restart process ...\n  spawn(process.argv[0], process.argv.slice(1), {\n    env: { process_restarting: 1 },\n    stdio: 'ignore'\n  }).unref();\n})();\nOn Windows, you may need to add detached: true to your spawn() configuration object though. For *nix, this usually shouldn't be necessary.\n\nOne thing to keep in mind though is that any restarted process won't have access to the terminal anymore, if the original process was started in the foreground.\n\nAlso, you could eliminate the delay and process.env checking if your script does not use any resources that can only be used by at most one process at any given time.\n\nOne final note: if your process crashes abnormally, due to memory exhaustion, triggering a C++ assertion, a V8 bug, etc., your process won't restart obviously (even if you have an 'unhandledException' event handler set for process). To account for these situations you pretty much need some sort of external mechanism to restart the process.", "date": "Mar 05 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Santino", "source_name": null, "source_url": null},
{"title": "nodejs response is html not json data", "code": "// use this after route not before route\nif (process.env.NODE_ENV === 'production') {\n  app.use(express.static(resolve(process.cwd(), 'client/build')))\n  app.get('*', (req, res) => {\n    res.sendFile(resolve(process.cwd(), 'client/build/index.html'))\n  })\n}", "date": "Sep 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "nodejs remove unsafe string", "code": "const str = \"abc's test#s\";\nconsole.log(str.replace(/[^a-zA-Z ]/g, \"\"));", "date": "Apr 13 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "florinrelea", "source_name": null, "source_url": null},
{"title": "nodejs remove null from object", "code": "for(var key in req.body){\n            if(req.body.hasOwnProperty(key)){\n                if(req.body[key] == null) delete req.body[key];\n            }\n        }", "date": "Mar 22 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "SeriousMonk", "source_name": null, "source_url": null},
{"title": "javascript reverse a string", "code": "function reverseString(s){\r\n    return s.split(\"\").reverse().join(\"\");\r\n}\r\nreverseString(\"Hello\");//\"olleH\"", "date": "Aug 05 2019", "vote": 34, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "javascript string reverse", "code": "\"this is a test string\".split(\"\").reverse().join(\"\");\n//\"gnirts tset a si siht\"\n\n// Or\nconst reverse = str => [...str].reverse().join('');\n\n// Or\nconst reverse = str => str.split('').reduce((rev, char)=> `${char}${rev}`, '');\n\n// Or\nconst reverse = str => (str === '') ? '' : `${reverse(str.substr(1))}${str.charAt(0)}`;\n\n// Example\nreverse('hello world');     // 'dlrow olleh'", "date": "Jul 02 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "reverse a string program in javascript", "code": "function reverseString(str) {\n  if (str === \"\") // This is the terminal case that will end the recursion\n    return \"\";\n  \n  else\n    return reverseString(str.substr(1)) + str.charAt(0);\n/* \nFirst Part of the recursion method\nYou need to remember that you won\u2019t have just one call, you\u2019ll have several nested calls\n\nEach call: str === \"?\"        \t                  reverseString(str.subst(1))     + str.charAt(0)\n1st call \u2013 reverseString(\"Hello\")   will return   reverseString(\"ello\")           + \"h\"\n2nd call \u2013 reverseString(\"ello\")    will return   reverseString(\"llo\")            + \"e\"\n3rd call \u2013 reverseString(\"llo\")     will return   reverseString(\"lo\")             + \"l\"\n4th call \u2013 reverseString(\"lo\")      will return   reverseString(\"o\")              + \"l\"\n5th call \u2013 reverseString(\"o\")       will return   reverseString(\"\")               + \"o\"\n\nSecond part of the recursion method\nThe method hits the if condition and the most highly nested call returns immediately\n\n5th call will return reverseString(\"\") + \"o\" = \"o\"\n4th call will return reverseString(\"o\") + \"l\" = \"o\" + \"l\"\n3rd call will return reverseString(\"lo\") + \"l\" = \"o\" + \"l\" + \"l\"\n2nd call will return reverserString(\"llo\") + \"e\" = \"o\" + \"l\" + \"l\" + \"e\"\n1st call will return reverserString(\"ello\") + \"h\" = \"o\" + \"l\" + \"l\" + \"e\" + \"h\" \n*/\n}\nreverseString(\"hello\");", "date": "Jan 21 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Open Owl", "source_name": "www.freecodecamp.org", "source_url": "https://www.freecodecamp.org/news/how-to-reverse-a-string-in-javascript-in-3-different-ways-75e4763c68cb/"},
{"title": "nodejs reverse string", "code": "function reverseString(str) {\n    return str.split(\"\").reverse().join(\"\");\n}\nreverseString(\"hello\");", "date": "Dec 20 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "PerryGamerPT", "source_name": "www.freecodecamp.org", "source_url": "https://www.freecodecamp.org/news/how-to-reverse-a-string-in-javascript-in-3-different-ways-75e4763c68cb/"},
{"title": "nodejs redis setex", "code": "async function upsert(table, data) {\n  let key = table;\n  if (data && data.id) {\n    key = key + '_' + data.id;\n  }\n\n  client.setex(key, 10, JSON.stringify(data));\n  return true;\n}\n", "date": "Nov 12 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Jeff Le", "source_name": "www.codota.com", "source_url": "https://www.codota.com/code/javascript/functions/redis/RedisClient/setex"},
{"title": "Node require module", "code": "// Use require.main.require to get a module from the root folder.\nconst Globals = require.main.require(\"./globals.js\");\nconst YourCustomModule = require(\"./yourmodule.js\");\n\nconsole.log(YourCustomModule.message);\n\n// --- yourmodule.js ---\nmodule.exports = {\n\tmessage: \"Hello World!\",\n\totherData: \"Hello Grepper!\"\n};", "date": "May 25 2020", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Nathan uses Linux", "source_name": null, "source_url": null},
{"title": "javascript require", "code": "// The require() method is used to load and cache JavaScript modules.\n// So, if you want to load a local, relative JavaScript module into a Node.js application,\n// you can simply use the require() method.\n\n// Example:\nvar yourModule = require( \"your_module_name\" ); //.js file extension is optional", "date": "Jun 09 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Powerful Penguin", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/9901082/what-is-this-javascript-require"},
{"title": "nodejs require", "code": "//What is require in Nodejs?\n//Node.js follows the CommonJS module system, and the builtin require \n//function is the easiest way to include modules that exist in separate \n//files. The basic functionality of require is that it reads a JavaScript \n//file, executes the file, and then proceeds to return the exports object.\n", "date": "May 11 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Grieving Gentoo", "source_name": null, "source_url": null},
{"title": "nodejs recursively read directory", "code": "var fs = require('fs');\nvar path = require('path');\nvar walk = function(dir, done) {\n  var results = [];\n  fs.readdir(dir, function(err, list) {\n    if (err) return done(err);\n    var i = 0;\n    (function next() {\n      var file = list[i++];\n      if (!file) return done(null, results);\n      file = path.resolve(dir, file);\n      fs.stat(file, function(err, stat) {\n        if (stat && stat.isDirectory()) {\n          walk(file, function(err, res) {\n            results = results.concat(res);\n            next();\n          });\n        } else {\n          results.push(file);\n          next();\n        }\n      });\n    })();\n  });\n};\n\n\nAnd to test it out on your home directory (WARNING: the results list will be huge if you have a lot of stuff in your home directory):\n\nwalk(process.env.HOME, function(err, results) {\n  if (err) throw err;\n  console.log(results);\n});", "date": "Jul 22 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Old Knight", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/5827612/node-js-fs-readdir-recursive-directory-search"},
{"title": "nodejs readdir", "code": "const fs = require(\"fs\")\nfs.readdir(\"./myfolder\", (err, data) => {\n\tif(err) throw err\n  \tconsole.log(data)\n})", "date": "Nov 28 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "NotDamian", "source_name": null, "source_url": null},
{"title": "remove a particular element from array", "code": "var colors = [\"red\",\"blue\",\"car\",\"green\"];\r\nvar carIndex = colors.indexOf(\"car\");//get  \"car\" index\r\n//remove car from the colors array\r\ncolors.splice(carIndex, 1); // colors = [\"red\",\"blue\",\"green\"]", "date": "Jul 19 2019", "vote": 186, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "remove item from array javascript", "code": "let someArray = [\n               {name:\"Kristian\", lines:\"2,5,10\"},\n               {name:\"John\", lines:\"1,19,26,96\"},\n               {name:\"Kristian\", lines:\"2,58,160\"},\n               {name:\"Felix\", lines:\"1,19,26,96\"}\n            ];\n\nsomeArray = someArray.filter(person => person.name != 'John');\nIt will remove John!", "date": "Aug 18 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Drab Dotterel", "source_name": null, "source_url": null},
{"title": "remove from array javascript", "code": "let numbers = [1,2,3,4]\n\n// to remove last element\nlet last_num = numbers.pop();\n// numbers will now be [1,2,3]\n\n// to remove first element\nlet first_num = numbers.shift();\n//numbers will now be [2,3]\n\n// to remove at an index\nlet number_index = 1\nlet index_num = numbers.splice(number_index,1); //removes 1 element at index 1\n//numbers will now be [2]\n\n//these methods will modify the numbers array and return the removed element", "date": "Dec 25 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Caffeinated Developer", "source_name": null, "source_url": null},
{"title": "how to remove an item from an array in javascript", "code": "pop - Removes from the End of an Array.\nshift - Removes from the beginning of an Array.\nsplice - removes from a specific Array index.\nfilter - allows you to programatically remove elements from an Array.", "date": "Oct 20 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Glorious Gnu", "source_name": "love2dev.com", "source_url": "https://love2dev.com/blog/javascript-remove-from-array/"},
{"title": "javascript how to remove item from array", "code": "const array = [2, 5, 9];\n\nconsole.log(array);\n\nconst index = array.indexOf(5);\nif (index > -1) {\n  array.splice(index, 1);\n}\n\n// array = [2, 9]\nconsole.log(array); ", "date": "Dec 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Filthy Fox", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/5767325/how-can-i-remove-a-specific-item-from-an-array"},
{"title": "nodejs remove element from array", "code": "\n    \n    function arrayRemove(arr, value) { \n    \n        return arr.filter(function(ele){ \n            return ele != value; \n        });\n    }\n    \n    var result = arrayRemove(array, 6);\n    // result = [1, 2, 3, 4, 5, 7, 8, 9, 0]\n\n", "date": "Mar 25 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "SeriousMonk", "source_name": "love2dev.com", "source_url": "https://love2dev.com/blog/javascript-remove-from-array/"},
{"title": "nodejs read image as base64", "code": "const fs = require('fs');\nconst contents = fs.readFileSync('/path/to/file.jpg', {encoding: 'base64'});\n", "date": "May 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Clumsy Cicada", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/28834835/readfile-in-base64-nodejs"},
{"title": "nodejs read image as base64", "code": "const fs = require('fs').promises;\nconst contents = await fs.readFile('/path/to/file.jpg', {encoding: 'base64'});\n", "date": "May 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Clumsy Cicada", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/28834835/readfile-in-base64-nodejs"},
{"title": "readfilesync", "code": "const fs = require('fs')\n\ntry {\n  const data = fs.readFileSync('/Users/joe/test.txt', 'utf8')\n  console.log(data)\n} catch (err) {\n  console.error(err)\n}", "date": "Aug 30 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Light Locust", "source_name": null, "source_url": null},
{"title": "nodejs readfile", "code": "const fs = require('fs');\n\nfs.readFile('/Users/joe/test.txt', 'utf8' , (err, data) => {\n  if (err) {\n    console.error(err);\n    return\n  }\n  console.log(data);\n});", "date": "Aug 30 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Light Locust", "source_name": null, "source_url": null},
{"title": "fs.writefile", "code": "const fs = require('fs');\n\nfs.writeFile(\"/tmp/test\", \"Hey there!\", function(err) {\n    if(err) {\n        return console.log(err);\n    }\n    console.log(\"The file was saved!\");\n}); \n\n// Or\nfs.writeFileSync('/tmp/test-sync', 'Hey there!');", "date": "Aug 08 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Jeff Spicoli", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/2496710/writing-files-in-node-js"},
{"title": "fs writefile node", "code": "const fs = require('fs')\n\nconst content = 'Some content!'\n\nfs.writeFile('/Users/joe/test.txt', content, err => {\n  if (err) {\n    console.error(err)\n    return\n  }\n  //file written successfully\n})", "date": "Mar 15 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "nodejs.dev", "source_url": "https://nodejs.dev/writing-files-with-nodejs"},
{"title": "fs.readfile", "code": "fs.readFile('filename', function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    var content = data;\n  \n    console.log(content);  \n   \n});", "date": "Apr 21 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "If-dev", "source_name": null, "source_url": null},
{"title": "node read file sync", "code": "// macOS, Linux, and Windows\nfs.readFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nfs.readFileSync('<directory>'); // => <data>", "date": "Jun 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Grotesque Gharial", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/fs.html#fs_fs_readfilesync_path_options"},
{"title": "nodejs promise sleep", "code": "await new Promise(r => setTimeout(r, 2000));", "date": "May 10 2020", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Tame Tortoise", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/951021/what-is-the-javascript-version-of-sleep"},
{"title": "javascript version of sleep", "code": "//Javascipt is asyncronous so you can't pause/block code execution\r\n//You can delay doing something with setTimeout\r\nsetTimeout(function(){\r\n \talert(\"Sup!\"); \r\n}, 2000);//wait 2 seconds", "date": "Jul 23 2019", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "nodejs promise then example", "code": "p.then(onFulfilled, onRejected);\n\np.then(function(value) {\n   //  run\n  }, function(reason) {\n  // fail\n});", "date": "Mar 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Arrogant Alpaca", "source_name": null, "source_url": null},
{"title": "js how to print", "code": "console.log(text);\n", "date": "Dec 06 2020", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "Curious Caracal", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/34733505/how-to-print-to-console-using-javascript"},
{"title": "Node.js: printing to console without a trailing newline", "code": "process.stdout.write(\"hello: \");", "date": "Jul 03 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "nodejs print", "code": "print(\"hello world\");", "date": "Jan 15 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "HeyItsDeveloperRhys", "source_name": null, "source_url": null},
{"title": "print in node js", "code": "console.log('hello world');\n// Prints: hello world, to stdout\nconsole.log('hello %s', 'world');\n// Prints: hello world, to stdout\nconsole.error(new Error('Whoops, something bad happened'));\n// Prints: [Error: Whoops, something bad happened], to stderr\n\nconst name = 'Will Robinson';\nconsole.warn(`Danger ${name}! Danger!`);\n// Prints: Danger Will Robinson! Danger!, to stderr", "date": "Aug 10 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bored Boar", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/console.html"},
{"title": "node js printing", "code": "console.log([data][, ...])", "date": "Jan 26 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Minecraftian14", "source_name": null, "source_url": null},
{"title": "nodejs promise async", "code": "// server.js\n\u00a0\nfunction square(x) {\n\u00a0 return new Promise(resolve => {\n\u00a0 \u00a0 setTimeout(() => {\n\u00a0 \u00a0 \u00a0 resolve(Math.pow(x, 2));\n\u00a0 \u00a0 }, 2000);\n\u00a0 });\n}\n\u00a0\nasync function layer(x)\n{\n\u00a0 const value = await square(x);\n\u00a0 console.log(value);\n}\n\u00a0\nlayer(10);\n", "date": "Jun 19 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Fancy Doll", "source_name": "frugalisminds.com", "source_url": "https://frugalisminds.com/nodejs/simplify-callback-promise-node-js-application-async-await/"},
{"title": "nodejs promise async", "code": "// Normal Function\nfunction add(a,b){\n\u00a0 return a + b;\n}\n// Async Function\nasync function add(a,b){\n\u00a0 return a + b;\n}\n", "date": "Jun 19 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Fancy Doll", "source_name": "frugalisminds.com", "source_url": "https://frugalisminds.com/nodejs/simplify-callback-promise-node-js-application-async-await/"},
{"title": "javascript get random number in range", "code": "function getRandomNumberBetween(min,max){\r\n    return Math.floor(Math.random()*(max-min+1)+min);\r\n}\r\n\r\n//usage example: getRandomNumberBetween(20,400); \r\n", "date": "Jul 23 2019", "vote": 29, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "Math.random javascript double", "code": "function getRandomNumberBetween(min,max){\n    return Math.floor(Math.random()*(max-min+1)+min);\n}", "date": "Dec 31 2019", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Old-fashioned Oryx", "source_name": null, "source_url": null},
{"title": "math random js", "code": "function getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min; // max & min both included \n}", "date": "May 10 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "STIFLER", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/it/docs/Web/JavaScript/Reference/Global_Objects/Math/random"},
{"title": "nodejs read file to array", "code": "const fs = require('fs');\nconst data = fs.readFileSync('file.txt', 'utf8').split('\\n'); //use .split() to chose a character to define where a new piece of data starts", "date": "Jan 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Innovixx", "source_name": null, "source_url": null},
{"title": "nodejs postgresql scalar query", "code": "db.scalar('SELECT 1')", "date": "Oct 21 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fine Fish", "source_name": null, "source_url": null},
{"title": "nodejs optimizing compuler try catch", "code": "\"Programmers waste enormous amounts of time thinking about,\nor worrying about, the speed of noncritical parts of their\nprograms, and these attempts at efficiency actually have a\nstrong negative impact when debugging and maintenance are\nconsidered. We should forget about small efficiencies,\nsay about 97% of the time: premature optimization is the root\nof all evil. Yet we should not pass up our opportunities in that\ncritical 3%\"- Donald Knuth", "date": "Oct 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "florinrelea", "source_name": null, "source_url": null},
{"title": "import path nodejs", "code": "const path = require('path')", "date": "Jul 12 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Deltanboi", "source_name": null, "source_url": null},
{"title": "nodejs path", "code": "The path module provides utilities for working with file and directory paths. It can be accessed using:\n\nconst path = require('path');", "date": "Mar 10 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Naughty Nightingale", "source_name": null, "source_url": null},
{"title": "node.js name of file", "code": "var path = require('path');\nvar scriptName = path.basename(__filename);", "date": "Nov 10 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Lockeness", "source_name": null, "source_url": null},
{"title": "read file node", "code": "// load fs\nconst fs = require(\"fs\");\n// read the file\nconst content = fs.readFileSync(\"./my_file.txt\");\n// print it\nconsole.log(content.toString());", "date": "Oct 11 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "ali ahmed", "source_name": null, "source_url": null},
{"title": "node open file", "code": "const fs = require(\"fs\");\n\n// __dirname means relative to script. Use \"./data.txt\" if you want it relative to execution path.\nfs.readFile(__dirname + \"/data.txt\", (error, data) => {\n    if(error) {\n        throw error;\n    }\n    console.log(data.toString());\n});", "date": "May 25 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Nathan uses Linux", "source_name": null, "source_url": null},
{"title": "read file in nodejs using fs", "code": "let myFile = \"./myText.txt\";\nconst fs = require(\"fs\");\n\t\t\napp.all('/test', async (req, res) => {\n\ttry {\n\t\tconst readData = fs.readFileSync(myFile, 'utf8');\n\t\tif (readData) {\n\t\t\tres.send(readData)\n\t\t}\n\t} catch (error) {\n\t\tres.send(\"something is wrong\", error)\n\t}\n})", "date": "Jan 07 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "abhi", "source_name": null, "source_url": null},
{"title": "fs.readfile", "code": "fs.readFile('filename', function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    var content = data;\n  \n    console.log(content);  \n   \n});", "date": "Apr 21 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "If-dev", "source_name": null, "source_url": null},
{"title": "nodejs open file", "code": "fs = require('fs')\nfs.readFile('/etc/hosts', 'utf8', function (err,data) {\n  if (err) {\n    return console.log(err);\n  }\n  console.log(data);\n});", "date": "Dec 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Gorgeous Goshawk", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/file-system/how-to-read-files-in-nodejs/"},
{"title": "nodejs open default browser on specific web page", "code": "$ npm install opn\n\n//////////////////////////////////////////\n\nvar opn = require('opn');\n\n// opens the url in the default browser \nopn('http://sindresorhus.com');\n\n// specify the app to open in \nopn('http://sindresorhus.com', {app: 'firefox'});", "date": "May 25 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "tvanderb", "source_name": null, "source_url": null},
{"title": "nodejs object object template string", "code": "logString = `Description: ${ description }. Properties: ${ JSON.stringify( properties ) }.`\n", "date": "Apr 21 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Donate ", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/46146860/javascript-template-strings-dont-pretty-print-objects"},
{"title": "nodejs oauth2 request", "code": "// this saved my ass\nvar request = require('request');\n \nrequest({\n  url: 'https://api.someapi.com/oauth/token',\n  method: 'POST',\n  auth: {\n    user: 'xxx',\n    pass: 'yyy'\n  },\n  form: {\n    'grant_type': 'client_credentials'\n  }\n}, function(err, res) {\n  var json = JSON.parse(res.body);\n  console.log(\"Access Token:\", json.access_token);\n});", "date": "Feb 17 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "GutoTrosla", "source_name": "stormpath.com", "source_url": "https://stormpath.com/blog/talking-to-oauth2-services-with-nodejs"},
{"title": "nodejs multipart/x-mixed-replace; boundary=BoundaryString", "code": "const webStream = {\n    get: function (url, callback) {\n        let webClient;\n\n        if (url.startsWith(\"http://\")) {\n            webClient = require(\"http\");\n        } else if (url.startsWith(\"https://\")) {\n            webClient = require(\"https\");\n        } else {\n            throw \"Unsupported protocol.\";\n        }\n\n        let clientRequest = webClient.get(url, function (response) {\n            let context = {\n                url: url,\n                boundary: \"\",\n                contentType: \"\",\n                contentLength: 0\n            };\n\n            let headersCompleted = false;\n            let bodyCompleted = false;\n            let buffer = null;\n            let receivedBodyChunk = 0;\n\n            response.on(\"data\", function (chunk) {\n                if (!headersCompleted) {\n                    let headers = chunk.toString().split(/\\r?\\n/);\n\n                    context.boundary = headers[0].substring(2);\n                    context.contentType = headers[1].split(\":\")[1].trim();\n                    context.contentLength = parseInt(headers[2].split(\":\")[1]);\n\n                    buffer = Buffer.alloc(context.contentLength);\n\n                    headersCompleted = true;\n                } else {\n                    if (!bodyCompleted) {\n                        if (receivedBodyChunk < context.contentLength) {\n                            chunk.copy(buffer, receivedBodyChunk, 0, chunk.byteLength);\n\n                            receivedBodyChunk += chunk.byteLength;\n\n                            if (receivedBodyChunk === context.contentLength) {\n                                bodyCompleted = true;\n                            }\n                        }\n                    }\n\n                    if (bodyCompleted) {\n                        callback(buffer, context);\n\n                        headersCompleted = false;\n                        bodyCompleted = false;\n                        buffer = null;\n                        receivedBodyChunk = 0;\n                    }\n                }\n            });\n        });\n\n        return {\n            url: url,\n            handler: clientRequest,\n            on: function (type, listener) {\n                clientRequest.on(type, listener);\n            },\n            abort: function () {\n                clientRequest.abort();\n            }\n        };\n    }\n};\n\nlet stream = webStream.get(\"http://127.0.0.1:8090/\", function (data, context) {\n    // data: Received content (Buffer)\n    // context: { url, boundary, contentType, contentLength }\n\n    // TODO: Do something here...\n});\n\n// stream.abort();\n\n// stream.on(\"error\", function(e) {\n//     console.log(\"Error: \" + e.message);\n// });\n", "date": "Dec 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Wandering Wasp", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/47331111/making-http-request-and-receiving-multipart-x-mixed-replace-response-in-node-js"},
{"title": "nodejs mysql error handling with user example", "code": "catch (err) {\n  if (err instanceof Errors.BadRequest)\n    return res.status(HttpStatus.BAD_REQUEST).send({ message: err.message }); // 400\n  if (err instanceof Errors.Forbidden)\n    return res.status(HttpStatus.FORBIDDEN).send({ message: err.message }); // 403\n  if (err instanceof Errors.NotFound)\n    return res.status(HttpStatus.NOT_FOUND).send({ message: err.message }); // 404\n  if (err instanceof Errors.UnprocessableEntity)\n    return res.status(HttpStatus.UNPROCESSABLE_ENTITY).send({ message: err.message }); // 422\n  console.log(err);\n  return res.status(HttpStatus.INTERNAL_SERVER_ERROR).send({ error: err, message: err.message });\n}", "date": "Sep 08 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Spotless Stag", "source_name": "www.thetopsites.net", "source_url": "https://www.thetopsites.net/article/52549557.shtml"},
{"title": "nodejs mocha mock", "code": "const chai = require(\"chai\");\nconst expect = chai.expect;\nconst sinon = require(\"sinon\");\nconst indexPage = require(\"../../controllers/app.controller.js\");\n\ndescribe(\"AppController\", function()  {\n  describe(\"getIndexPage\", function() {\n    it(\"should send hey when user is logged in\", function() {\n      // instantiate a user object with an empty isLoggedIn function\n      let user = {\n        isLoggedIn: function(){}\n      }\n\n      // Stub isLoggedIn function and make it return true always\n      const isLoggedInStub = sinon.stub(user, \"isLoggedIn\").returns(true);\n\n      // pass user into the req object\n      let req = {\n        user: user\n      }\n\n      // Have `res` have a send key with a function value coz we use `res.send()` in our func\n      let res = {\n        send: function(){}\n      }\n\n      // mock res\n      const mock = sinon.mock(res);\n      // build how we expect it t work\n      mock.expects(\"send\").once().withExactArgs(\"Hey\");\n\n      indexPage.getIndexPage(req, res);\n      expect(isLoggedInStub.calledOnce).to.be.true;\n\n      // verify that mock works as expected\n      mock.verify();\n    });\n  });\n});", "date": "Jun 20 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Xelsaid", "source_name": "scotch.io", "source_url": "https://scotch.io/tutorials/how-to-test-nodejs-apps-using-mocha-chai-and-sinonjs"},
{"title": "node js create folder", "code": "var fs = require('fs');\n\nconst dir = './database/temp';\nif (!fs.existsSync(dir)) {\n\tfs.mkdirSync(dir, {\n\t\trecursive: true\n\t});\n}", "date": "Jun 23 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "nodejs make directory", "code": "var fs = require('fs');\nvar dir = './tmp';\nif (!fs.existsSync(dir)){\n    fs.mkdirSync(dir);\n}\n\n// or if complains about existence and nesting doesn't matter:\n\nvar shell = require('shelljs');\nshell.mkdir('-p', 'root/parent/tmp');", "date": "Mar 30 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Hobbes", "source_name": null, "source_url": null},
{"title": "nodejs log all objects", "code": "const util = require('util')\n\nconsole.log(util.inspect(myObject, {showHidden: false, depth: null}))\n\n// alternative shortcut\nconsole.log(util.inspect(myObject, false, null, true /* enable colors */))", "date": "Mar 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cloudy Caracal", "source_name": null, "source_url": null},
{"title": "nodejs kill hidden process", "code": "taskkill /f /im node.exe", "date": "Mar 18 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "florinrelea", "source_name": null, "source_url": null},
{"title": "javascript map array", "code": "const myArray = ['Sam', 'Alice', 'Nick', 'Matt'];\n\n// Appends text to each element of the array\nconst newArray = myArray.map(name => {\n\treturn 'My name is ' + name; \n});\nconsole.log(newArray); // ['My name is Sam', 'My Name is Alice', ...]\n\n// Appends the index of each element with it's value\nconst anotherArray = myArray.map((value, index) => index + \": \" + value);\nconsole.log(anotherArray); // ['0: Sam', '1: Alice', '2: Nick', ...]\n\n// Starting array is unchanged\nconsole.log(myArray); // ['Sam', 'Alice', 'Nick', 'Matt']", "date": "Aug 26 2020", "vote": 32, "tags": ["javascript", "nodejs"], "posted_by": "Allen", "source_name": null, "source_url": null},
{"title": "array map javascript", "code": "const array1 = [1, 4, 9, 16];\n\n// pass a function to map\nconst map1 = array1.map(x => x * 2);\n\nconsole.log(map1);\n// expected output: Array [2, 8, 18, 32]", "date": "Nov 25 2019", "vote": 23, "tags": ["javascript", "nodejs"], "posted_by": "Calm Cockroach", "source_name": null, "source_url": null},
{"title": "javascript map", "code": "array.map((item) => {\n  return item * 2\n} // an example that will map through a a list of items and return a new array with the item multiplied by 2", "date": "Dec 22 2019", "vote": 23, "tags": ["javascript", "nodejs"], "posted_by": "Zealous Zebra", "source_name": null, "source_url": null},
{"title": "array map", "code": "const array1 = [1, 4, 9, 16];\n\n// pass a function to map\nconst map1 = array1.map(x => x * 2);\n\nconsole.log(map1);\n// expected output: Array [2, 8, 18, 32]\n", "date": "Dec 22 2019", "vote": 12, "tags": ["javascript", "nodejs"], "posted_by": "Zealous Zebra", "source_name": null, "source_url": null},
{"title": "javascript map", "code": "function listFruits() {\n  let fruits = [\"apple\", \"cherry\", \"pear\"]\n  \n  fruits.map((fruit, index) => {\n    console.log(index, fruit)\n  })\n}\n\nlistFruits()\n\n// https://jsfiddle.net/tmoreland/16qfpkgb/3/", "date": "Jun 07 2020", "vote": 11, "tags": ["javascript", "nodejs"], "posted_by": "Graypes O'Wrathe", "source_name": null, "source_url": null},
{"title": "nodejs map", "code": "let wrongMap = new Map()\nwrongMap['bla'] = 'blaa'\nwrongMap['bla2'] = 'blaaa2'\n\nconsole.log(wrongMap)  // Map { bla: 'blaa', bla2: 'blaaa2' }\n", "date": "Nov 13 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Frail Flatworm", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"},
{"title": "nodejs json data serving", "code": "// UPDATE\napp.put('/users/:id', (req, res) => {\n  readFile(data => {\n    // add the new user\n    const userId = req.params['id'];\n    data[userId] = req.body;\n\n    writeFile(JSON.stringify(data, null, 2), () => {\n      res.status(200).send(`users id:${userId} updated`);\n    });\n  }, true);\n});\n", "date": "Oct 08 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Zaw Xtut", "source_name": "robkendal.co.uk", "source_url": "https://robkendal.co.uk/blog/how-to-build-a-restful-node-js-api-server-using-json-files"},
{"title": "nodejs json data serving", "code": "const userRoutes = (app, fs) => {\n  //...unchanged ^^^\n\n  // refactored helper methods\n  const readFile = (\n    callback,\n    returnJson = false,\n    filePath = dataPath,\n    encoding = 'utf8'\n  ) => {\n    fs.readFile(filePath, encoding, (err, data) => {\n      if (err) {\n        throw err;\n      }\n\n      callback(returnJson ? JSON.parse(data) : data);\n    });\n  };\n\n  const writeFile = (\n    fileData,\n    callback,\n    filePath = dataPath,\n    encoding = 'utf8'\n  ) => {\n    fs.writeFile(filePath, fileData, encoding, err => {\n      if (err) {\n        throw err;\n      }\n\n      callback();\n    });\n  };\n\n  // READ\n  // Notice how we can make this 'read' operation much more simple now.\n  app.get('/users', (req, res) => {\n    readFile(data => {\n      res.send(data);\n    }, true);\n  });\n};\n\nmodule.exports = userRoutes;\n", "date": "Oct 08 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Zaw Xtut", "source_name": "robkendal.co.uk", "source_url": "https://robkendal.co.uk/blog/how-to-build-a-restful-node-js-api-server-using-json-files"},
{"title": "nodejs json data serving", "code": "// load up our shiny new route for users\nconst userRoutes = require('./users');\n\nconst appRouter = (app, fs) => {\n  // we've added in a default route here that handles empty routes\n  // at the base API url\n  app.get('/', (req, res) => {\n    res.send('welcome to the development api-server');\n  });\n\n  // run our user route module here to complete the wire up\n  userRoutes(app, fs);\n};\n\n// this line is unchanged\nmodule.exports = appRouter;\n", "date": "Oct 08 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Zaw Xtut", "source_name": "robkendal.co.uk", "source_url": "https://robkendal.co.uk/blog/how-to-build-a-restful-node-js-api-server-using-json-files"},
{"title": "nodejs json data serving", "code": "{\n  \"1\": {\n    \"name\": \"king arthur\",\n    \"password\": \"password1\",\n    \"profession\": \"king\",\n    \"id\": 1\n  },\n  \"2\": {\n    \"name\": \"rob kendal\",\n    \"password\": \"password3\",\n    \"profession\": \"code fiddler\",\n    \"id\": 2\n  },\n  \"3\": {\n    \"name\": \"teresa may\",\n    \"password\": \"password2\",\n    \"profession\": \"brexit destroyer\",\n    \"id\": 6\n  }\n}\n", "date": "Oct 08 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Zaw Xtut", "source_name": "robkendal.co.uk", "source_url": "https://robkendal.co.uk/blog/how-to-build-a-restful-node-js-api-server-using-json-files"},
{"title": "nodejs json data serving", "code": "const userRoutes = (app, fs) => {\n  // variables\n  const dataPath = './data/users.json';\n\n  // READ\n  app.get('/users', (req, res) => {\n    fs.readFile(dataPath, 'utf8', (err, data) => {\n      if (err) {\n        throw err;\n      }\n\n      res.send(JSON.parse(data));\n    });\n  });\n};\n\nmodule.exports = userRoutes;\n", "date": "Oct 08 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Zaw Xtut", "source_name": "robkendal.co.uk", "source_url": "https://robkendal.co.uk/blog/how-to-build-a-restful-node-js-api-server-using-json-files"},
{"title": "nodejs json data serving", "code": "// load up the express framework and body-parser helper\nconst express = require('express');\nconst bodyParser = require('body-parser');\n\n// create an instance of express to serve our end points\nconst app = express();\n\n// we'll load up node's built in file system helper library here\n// (we'll be using this later to serve our JSON files\nconst fs = require('fs');\n\n// configure our express instance with some body-parser settings\n// including handling JSON data\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\n// this is where we'll handle our various routes from\nconst routes = require('./routes/routes.js')(app, fs);\n\n// finally, launch our server on port 3001.\nconst server = app.listen(3001, () => {\n  console.log('listening on port %s...', server.address().port);\n});\n", "date": "Oct 08 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Zaw Xtut", "source_name": "robkendal.co.uk", "source_url": "https://robkendal.co.uk/blog/how-to-build-a-restful-node-js-api-server-using-json-files"},
{"title": "node parameter add memory", "code": "node --max-old-space-size=8192 server.js  \n", "date": "Mar 24 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Eager Echidna", "source_name": "futurestud.io", "source_url": "https://futurestud.io/tutorials/node-js-increase-the-memory-limit-for-your-process"},
{"title": "nodejs interface", "code": "// MenuInterface.jsclass MenuInterface {  constructor() {    if(!this.getItems) {      throw new Error(\"Menu's must have items!\");    }  }}// ---// file index.jsimport MenuInterface from './MenuInterface';class Menu extends MenuInterface {  // no items}export default new Menu() // Error \"Menu's must have items!\"// ---// file  baseMenu.jsclass BaseMenu extends MenuInterface {  constructor() {    super();    this.items = [];  }  get getItems() {    return items;  }}export default new BaseMenu();  // No Error, has the method!", "date": "Apr 30 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Thoughtful Thrush", "source_name": "geedew.com", "source_url": "https://geedew.com/basic-interfaces-in-nodejs/"},
{"title": "increase-memory-limit not working node", "code": "NODE_OPTIONS=--max_old_space_size=4096", "date": "Jun 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Xerothermic Xenomorph", "source_name": "support.circleci.com", "source_url": "https://support.circleci.com/hc/en-us/articles/360009208393-How-can-I-increase-the-max-memory-for-Node-"},
{"title": "nodejs increase heap size", "code": "NODE_OPTIONS=--max-old-space-size=8192 npm start", "date": "May 02 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "saggiyogesh", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/34356012/how-to-increase-nodejs-default-memory"},
{"title": "read json file nodejs", "code": "const fs = require('fs');\nconst path = require('path');\n\nlet rawdata = fs.readFileSync(path.resolve(__dirname, 'student.json'));\nlet student = JSON.parse(rawdata);\nconsole.log(student);", "date": "Apr 13 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Victor Grk", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-json-files-with-node-js/"},
{"title": "how to use json file in nodejs", "code": "D:\\NodeJs>node readsync.js\n *START*\nOutput Content:\n /* content here */\n*EXIT*\n// Define JSON File\n var fs = require(\"fs\");\n console.log(\"\\n *STARTING* \\n\");\n// Get content from file\n var contents = fs.readFileSync(\"jsoncontent.json\");\n// Define to JSON type\n var jsonContent = JSON.parse(contents);\n// Get Value from JSON\n console.log(\"User Name:\", jsonContent.username);\n console.log(\"Email:\", jsonContent.email);\n console.log(\"Password:\", jsonContent.password);\nlog(\"\\n *EXIT* \\n\");\n", "date": "Dec 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Annoying Aardvark", "source_name": "www.codementor.io", "source_url": "https://www.codementor.io/@codementorteam/how-to-use-json-files-in-node-js-85hndqt32"},
{"title": "nodejs include json file", "code": "config = require(\"./yourfile.json\"); // Note, \"config\" can be changed to your liking. ", "date": "Jan 15 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "HeyItsDeveloperRhys", "source_name": null, "source_url": null},
{"title": "nodejs if contains", "code": "if (your_string.indexOf('hello') > -1)\n{\n  alert(\"hello found inside your_string\");\n}\n", "date": "May 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Clean Constrictor", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/4444477/how-to-tell-if-a-string-contains-a-certain-character-in-javascript"},
{"title": "nodejs how to use dynamic variable after dot", "code": "model.car // static way\n\nconst myDynamicVariable = 'car'\nmodel[myDynamicVariable] // works like model.car - here you can dynamicly use a variable after dot", "date": "Oct 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Scatterbrained Pennyduck", "source_name": null, "source_url": null},
{"title": "nodejs heap usage", "code": "process.memoryUsage()", "date": "Mar 20 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "The little dog", "source_name": null, "source_url": null},
{"title": "nodejs hello world", "code": "const http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('Hello World');\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});", "date": "Aug 22 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "IrwinRdz", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/getting-started-guide/"},
{"title": "javascript hello world", "code": "alert(\"Hello world\");", "date": "Oct 18 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Coding Random Things", "source_name": null, "source_url": null},
{"title": "node js server", "code": "const express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))", "date": "Apr 01 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Encouraging Elk", "source_name": null, "source_url": null},
{"title": "how to create a javascript hello world program with node.js", "code": "console.log('Hello, world');// You can use apostrophes, quotation marks or tildees which are `s", "date": "Aug 18 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Dizzy Dormouse", "source_name": null, "source_url": null},
{"title": "nodejs have db connection pool import module", "code": "var pool  = mysql.createPool({\n      connectionLimit : 10,\n      host            : 'example.org',\n      user            : 'bobby',\n      password        : 'pass'\n    });\n    \npool.getConnection(function(err, connection){\n    if(err){\n        return cb(err);\n    }\n    connection.changeUser({database : \"firm1\"});\n    connection.query(\"SELECT * from history\", function(err, data){\n        connection.release();\n        cb(err, data);\n    });\n});\n", "date": "Jan 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Lucky Lion", "source_name": "riptutorial.com", "source_url": "https://riptutorial.com/node-js/example/4587/using-a-connection-pool"},
{"title": "Node.JS gitignore", "code": "# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# Snowpack dependency directory (https://snowpack.dev/)\nweb_modules/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Microbundle cache\n.rpt2_cache/\n.rts2_cache_cjs/\n.rts2_cache_es/\n.rts2_cache_umd/\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n.env.test\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n.parcel-cache\n\n# Next.js build output\n.next\nout\n\n# Nuxt.js build / generate output\n.nuxt\ndist\n\n# Gatsby files\n.cache/\n# Comment in the public line in if your project uses Gatsby and not Next.js\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public\n\n# vuepress build output\n.vuepress/dist\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n# TernJS port file\n.tern-port\n\n# Stores VSCode versions used for testing VSCode extensions\n.vscode-test\n\n# yarn v2\n.yarn/cache\n.yarn/unplugged\n.yarn/build-state.yml\n.yarn/install-state.gz\n.pnp.*\n", "date": "Aug 01 2020", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "macedonga", "source_name": "raw.githubusercontent.com", "source_url": "https://raw.githubusercontent.com/github/gitignore/master/Node.gitignore"},
{"title": "nodejs gitignore", "code": "# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# Snowpack dependency directory (https://snowpack.dev/)\nweb_modules/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Microbundle cache\n.rpt2_cache/\n.rts2_cache_cjs/\n.rts2_cache_es/\n.rts2_cache_umd/\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n.env.test\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n.parcel-cache\n\n# Next.js build output\n.next\nout\n\n# Nuxt.js build / generate output\n.nuxt\ndist\n\n# Gatsby files\n.cache/\n# Comment in the public line in if your project uses Gatsby and not Next.js\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public\n\n# vuepress build output\n.vuepress/dist\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n# TernJS port file\n.tern-port\n\n# Stores VSCode versions used for testing VSCode extensions\n.vscode-test\n\n# yarn v2\n.yarn/cache\n.yarn/unplugged\n.yarn/build-state.yml\n.yarn/install-state.gz\n.pnp.*", "date": "Oct 01 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Usama.dev", "source_name": "github.com", "source_url": "https://github.com/github/gitignore/blob/master/Node.gitignore"},
{"title": "nodejs http get request to external server", "code": "const request = require(\"request\");\nconst url = \"<a href=\"https://my-json-server.typicode.com/edurekaDemo/noderequest/db\">https://my-json-server.typicode.com/edurekaDemo/noderequest/db</a>\";\nrequest.get(url, (error, response, body) => {\nlet json = JSON.parse(body);\nconsole.log(body);\n});\n", "date": "Aug 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Amused Ant", "source_name": "www.edureka.co", "source_url": "https://www.edureka.co/blog/node-js-requests/"},
{"title": "node js do request", "code": "let request = require('request')\n\nconst formData = {\n  // Pass a simple key-value pair\n  my_field: 'my_value',\n  // Pass data via Buffers\n  my_buffer: Buffer.from([1, 2, 3]),\n  // Pass data via Streams\n  my_file: fs.createReadStream(__dirname + '/unicycle.jpg'),\n  // Pass multiple values /w an Array\n  attachments: [\n    fs.createReadStream(__dirname + '/attachment1.jpg'),\n    fs.createReadStream(__dirname + '/attachment2.jpg')\n  ],\n  // Pass optional meta-data with an 'options' object with style: {value: DATA, options: OPTIONS}\n  // Use case: for some types of streams, you'll need to provide \"file\"-related information manually.\n  // See the `form-data` README for more information about options: https://github.com/form-data/form-data\n  custom_file: {\n    value:  fs.createReadStream('/dev/urandom'),\n    options: {\n      filename: 'topsecret.jpg',\n      contentType: 'image/jpeg'\n    }\n  }\n};\nrequest.post({url:'http://service.com/upload', formData: formData}, function optionalCallback(err, httpResponse, body) {\n  if (err) {\n    return console.error('upload failed:', err);\n  }\n  console.log('Upload successful!  Server responded with:', body);\n});", "date": "Jun 22 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Jules", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/request"},
{"title": "crypto node", "code": "const crypto = require('crypto');\n\nconst secret = 'abcdefg';\nconst hash = crypto.createHmac('sha256', secret)\n                   .update('I love cupcakes')\n                   .digest('hex');\nconsole.log(hash);\n// Prints:\n//   c0fa1bc00531bd78ef38c628449c5102aeabd49b5dc3a2a516ea6ea959d6658e\n", "date": "May 04 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Exuberant Echidna", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/crypto.html#crypto_determining_if_crypto_support_is_unavailable"},
{"title": "nodejs hashing", "code": "const crypto = require('crypto');\n\nconst secret = 'abcdefg';\nconst hash = crypto.createHmac('sha256', secret)\n                   .update('I love cupcakes')\n                   .digest('hex');\nconsole.log(hash);\n// Prints:\n//   c0fa1bc00531bd78ef38c628449c5102aeabd49b5dc3a2a516ea6ea959d6658e", "date": "Dec 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Clean Cowfish", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/crypto.html"},
{"title": "nodejs get response time", "code": "request.get({\n  url : 'http://example.com',\n  time : true\n},function(err, response){\n  console.log('Request time in ms', response.elapsedTime);\n});", "date": "Jun 19 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Jules", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/18106825/nodejs-request-library-get-the-response-time"},
{"title": "nodejs get file size", "code": "var fs = require(\"fs\"); //Load the filesystem module\nvar stats = fs.statSync(\"myfile.txt\")\nvar fileSizeInBytes = stats[\"size\"]\n//Convert the file size to megabytes (optional)\nvar fileSizeInMegabytes = fileSizeInBytes / 1000000.0", "date": "Aug 06 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Old Knight", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/42363140/how-to-find-the-size-of-the-file-in-node-js"},
{"title": "nodejs get current time", "code": "let date_ob = new Date();\n\n// current date\n// adjust 0 before single digit date\nlet date = (\"0\" + date_ob.getDate()).slice(-2);\n\n// current month\nlet month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\n\n// current year\nlet year = date_ob.getFullYear();\n\n// current hours\nlet hours = date_ob.getHours();\n\n// current minutes\nlet minutes = date_ob.getMinutes();\n\n// current seconds\nlet seconds = date_ob.getSeconds();\n\n// prints date in YYYY-MM-DD format\nconsole.log(year + \"-\" + month + \"-\" + date);\n\n// prints date & time in YYYY-MM-DD HH:MM:SS format\nconsole.log(year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds);\n\n// prints time in HH:MM format\nconsole.log(hours + \":\" + minutes);\n", "date": "May 04 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Upset Unicorn", "source_name": "usefulangle.com", "source_url": "https://usefulangle.com/post/187/nodejs-get-date-time"},
{"title": "how to get datetime in nodejs", "code": "// new Date object\nlet date_ob = new Date();\n", "date": "Aug 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Graceful Gibbon", "source_name": "usefulangle.com", "source_url": "https://usefulangle.com/post/187/nodejs-get-date-time"},
{"title": "how to get cwd nodejs", "code": "process.cwd()", "date": "Apr 21 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "The little dog", "source_name": null, "source_url": null},
{"title": "nodejs get current directory", "code": "__dirname", "date": "Jun 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "krylic", "source_name": null, "source_url": null},
{"title": "nodejs generate ethereum address", "code": "import { ethers } from 'ethers';\nconst randomMnemonic = ethers.Wallet.createRandom().mnemonic;\nconst wallet = ethers.Wallet.fromMnemonic(randomMnemonic.phrase);\n", "date": "Aug 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Disgusted Dugong", "source_name": null, "source_url": null},
{"title": "update npm for laptop", "code": "npm install -g npm@latest", "date": "Aug 14 2020", "vote": 2, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Code_Breaker", "source_name": null, "source_url": null},
{"title": "install nodejs on ubuntu", "code": "sudo apt-get install curl\ncurl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -\nsudo apt-get install nodejs\n\nnode -v    #to check if its installed", "date": "Jul 25 2020", "vote": 9, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "node install ubuntu", "code": "# Through nodesource\ncurl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -\nsudo apt install nodejs", "date": "May 14 2020", "vote": 8, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Awful Antelope", "source_name": null, "source_url": null},
{"title": "intall npm", "code": "npm install -g npm", "date": "Dec 06 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Filthy Flatworm", "source_name": "docs.npmjs.com", "source_url": "https://docs.npmjs.com/downloading-and-installing-node-js-and-npm"},
{"title": "node js download ubuntu", "code": "sudo apt install nodejs", "date": "Nov 23 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Uptight Unicorn", "source_name": null, "source_url": null},
{"title": "nodejs install", "code": "var http = require('http');\n\nhttp.createServer(function (req, res) {\n    res.writeHead(200, {'Content-Type': 'text/html'});\n    res.end('Hello World!');\n}).listen(8080);\n", "date": "May 10 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Impossible Iguana", "source_name": "www.guru99.com", "source_url": "https://www.guru99.com/download-install-node-js.html#1"},
{"title": "creating function in node js", "code": "function functionName(arg1, arg2...) {\n   // function body\n   // optional return; \n} ", "date": "Jan 26 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Minecraftian14", "source_name": null, "source_url": null},
{"title": "nodejs fs writefile base64url", "code": "const fileContents = new Buffer(attachmentResponse.data.data, 'base64')\nfs.writeFile(part.filename, fileContents, (err) => {\n  if (err) return console.error(err)\n  console.log('file saved to ', part.filename)\n})\n", "date": "May 26 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Relieved Rook", "source_name": null, "source_url": null},
{"title": "nodejs fs root folder path", "code": "global.__basedir = __dirname;", "date": "Dec 07 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Filthy Frog", "source_name": "www.abeautifulsite.net", "source_url": "https://www.abeautifulsite.net/determining-your-apps-base-directory-in-nodejs"},
{"title": "nodejs fs directory exists", "code": "const fs = require(\"fs\")\n\nfs.access(\"./directory-name\", function(error) {\n  if (error) {\n    console.log(\"Directory does not exist.\")\n  } else {\n    console.log(\"Directory exists.\")\n  }\n})", "date": "Feb 19 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Bloody Batfish", "source_name": "coderrocketfuel.com", "source_url": "https://coderrocketfuel.com/article/check-if-a-directory-exists-in-node-js"},
{"title": "delete dir nodejs", "code": "fs.rmdirSync(dir, { recursive: true });", "date": "Aug 06 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bloody Boar", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/18052762/remove-directory-which-is-not-empty"},
{"title": "nodejs fs delete non empty directory", "code": "var rimraf = require(\"rimraf\");\nrimraf(\"/some/directory\", function () { console.log(\"done\"); });\n", "date": "Nov 24 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Repulsive Rattlesnake", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/18052762/remove-directory-which-is-not-empty"},
{"title": "nodejs fs delete non empty directory", "code": "rimraf.sync(\"/some/directory\");\n", "date": "Nov 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Repulsive Rattlesnake", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/18052762/remove-directory-which-is-not-empty"},
{"title": "http client java", "code": "HttpClient client = HttpClient.newHttpClient();\nHttpRequest request = HttpRequest.newBuilder()\n      .uri(URI.create(\"http://openjdk.java.net/\"))\n      .build();\nclient.sendAsync(request, BodyHandlers.ofString())\n      .thenApply(HttpResponse::body)\n      .thenAccept(System.out::println)\n      .join();", "date": "May 08 2020", "vote": 3, "tags": ["javascript", "nodejs", "java"], "posted_by": "Helpful Horse", "source_name": "openjdk.java.net", "source_url": "https://openjdk.java.net/groups/net/httpclient/intro.html"},
{"title": "nodejs http server", "code": "/* ====== create node.js server with core 'http' module ====== */\n// dependencies\nconst http = require(\"http\");\n\n// PORT\nconst PORT = 3000;\n\n// server create\nconst server = http.createServer((req, res) => {\n   if (req.url === \"/\") {\n      res.write(\"This is home page.\");\n      res.end();\n   } else if (req.url === \"/about\" && req.method === \"GET\") {\n      res.write(\"This is about page.\");\n      res.end();\n   } else {\n      res.write(\"Not Found!\");\n      res.end();\n   }\n});\n\n// server listen port\nserver.listen(PORT);\n\nconsole.log(`Server is running on PORT: ${PORT}`);\n\n// ======== Instructions ========\n// save this as index.js\n// you have to download and install node.js on your machine\n// open terminal or command prompt\n// type node index.js\n// find your server at http://localhost:3000", "date": "Jan 09 2021", "vote": 45, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": null, "source_url": null},
{"title": "how to create a server in node js", "code": "// code by VARSHITH REDDY SATTI\n// to create a server in node.js you should.\nvar http = require('http');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(\"write html code to display you test\")\n  res.end();\n}).listen(8080);\n// save this as httpServer.js\n// run this by typing node httpServer.js in the command line\n// to acess your server got to http://localhost:8080", "date": "Dec 28 2019", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Crown Of Thorns Starfish", "source_name": null, "source_url": null},
{"title": "what does http.createserver do", "code": "var http = require('http'); // Import Node.js core module\n\nvar server = http.createServer(function (req, res) {   //create web server\n    if (req.url == '/') { //check the URL of the current request\n        \n        // set response header\n        res.writeHead(200, { 'Content-Type': 'text/html' }); \n        \n        // set response content    \n        res.write('<html><body><p>This is home Page.</p></body></html>');\n        res.end();\n    \n    }\n    else if (req.url == \"/student\") {\n        \n        res.writeHead(200, { 'Content-Type': 'text/html' });\n        res.write('<html><body><p>This is student Page.</p></body></html>');\n        res.end();\n    \n    }\n    else if (req.url == \"/admin\") {\n        \n        res.writeHead(200, { 'Content-Type': 'text/html' });\n        res.write('<html><body><p>This is admin Page.</p></body></html>');\n        res.end();\n    \n    }\n    else\n        res.end('Invalid Request!');\n\n});\n\nserver.listen(5000); //6 - listen for any incoming requests\n\nconsole.log('Node.js web server at port 5000 is running..')\n", "date": "Dec 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Jolly Jellyfish", "source_name": "www.tutorialsteacher.com", "source_url": "https://www.tutorialsteacher.com/nodejs/create-nodejs-web-server"},
{"title": "server npm", "code": "npm install --global http-server\n", "date": "Jan 19 2021", "vote": 0, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Homeless Hornet", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/http-server"},
{"title": "vanilla js http server", "code": "var http = require('http');\nvar fs = require('fs');\nvar path = require('path');\n\nhttp.createServer(function (request, response) {\n    console.log('request ', request.url);\n\n    var filePath = '.' + request.url;\n    if (filePath == './') {\n        filePath = './index.html';\n    }\n\n    var extname = String(path.extname(filePath)).toLowerCase();\n    var mimeTypes = {\n\u00a0       '.html': 'text/html',\n        '.js': 'text/javascript',\n        '.css': 'text/css',\n        '.json': 'application/json',\n        '.png': 'image/png',\n        '.jpg': 'image/jpg',\n        '.gif': 'image/gif',\n        '.svg': 'image/svg+xml',\n        '.wav': 'audio/wav',\n        '.mp4': 'video/mp4',\n        '.woff': 'application/font-woff',\n        '.ttf': 'application/font-ttf',\n        '.eot': 'application/vnd.ms-fontobject',\n        '.otf': 'application/font-otf',\n        '.wasm': 'application/wasm'\n    };\n\n    var contentType = mimeTypes[extname] || 'application/octet-stream';\n\n    fs.readFile(filePath, function(error, content) {\n        if (error) {\n            if(error.code == 'ENOENT') {\n                fs.readFile('./404.html', function(error, content) {\n                    response.writeHead(404, { 'Content-Type': 'text/html' });\n                    response.end(content, 'utf-8');\n                });\n            }\n            else {\n                response.writeHead(500);\n                response.end('Sorry, check with the site admin for error: '+error.code+' ..\\n');\n            }\n        }\n        else {\n            response.writeHead(200, { 'Content-Type': contentType });\n            response.end(content, 'utf-8');\n        }\n    });\n\n}).listen(8125);\nconsole.log('Server running at http://127.0.0.1:8125/');", "date": "Dec 11 2019", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Real Reindeer", "source_name": null, "source_url": null},
{"title": "nodejs fs delete file", "code": "const fs = require('fs')\n\nconst path = './file.txt'\n\ntry {\n  fs.unlinkSync(path)\n  //file removed\n} catch(err) {\n  console.error(err)\n}", "date": "Feb 10 2021", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Blue Booby", "source_name": null, "source_url": null},
{"title": "delete with unlinksync node", "code": "const fs = require('fs')\n\nconst path = './file.txt'\n\ntry {\n  fs.unlinkSync(path)\n  //file removed\n} catch(err) {\n  console.error(err)\n}\n", "date": "Jul 02 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Panicky Panda", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/how-to-remove-file-node/"},
{"title": "ts await foreach loop", "code": "async function printFiles () {\n  const files = await getFilePaths();\n\n  await Promise.all(files.map(async (file) => {\n    const contents = await fs.readFile(file, 'utf8')\n    console.log(contents)\n  }));\n}", "date": "Jul 24 2020", "vote": 1, "tags": ["javascript", "nodejs", "typescript"], "posted_by": "Glamorous Gharial", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/37576685/using-async-await-with-a-foreach-loop"},
{"title": "nodejs how to use await in foreach loop", "code": "async function printFiles () {\n  const files = await getFilePaths();\n\n  for (const file of files) {\n    const contents = await fs.readFile(file, 'utf8');\n    console.log(contents);\n  }\n}\n", "date": "Mar 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "SeriousMonk", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/37576685/using-async-await-with-a-foreach-loop"},
{"title": "nodejs fs delete entire folde", "code": "fs.rmdirSync(dir, { recursive: true });", "date": "Mar 03 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "florinrelea", "source_name": null, "source_url": null},
{"title": "nodejs fs create file if not exists", "code": "fs.exists(filename, function(exists) {\n  if(exists) {\n    // Create a file\n  }\n  else {\n    console.log(\"Deny overwrite existing\", filename);\n  }\n});", "date": "Feb 19 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bloody Batfish", "source_name": null, "source_url": null},
{"title": "nodejs freeswitch esl server", "code": "call_handler = require('seem') ->\n  caller = @data['Channel-Caller-ID-Number']\n  callee = @data['Channel-Destination-Number']\n  new_caller = yield db.getAsync \"new_caller_for_#{caller}\"\n  yield @command 'answer'\n  yield @command 'play-file', 'voicemail/vm-hello'\n  yield @command 'set', \"effective_caller_id_number=#{new_caller}\"\n  yield @command 'bridge', \"sofia/egress/#{callee}@example.net\"\n\nrequire('esl').server(call_handler).listen(7000)\n", "date": "Apr 24 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Disturbed Dotterel", "source_name": "shimaore.github.io", "source_url": "http://shimaore.github.io/esl/"},
{"title": "nodejs format text", "code": "var my_name = 'John';\nvar s = `hello ${my_name}, how are you doing`;\nconsole.log(s); // prints hello John, how are you doing\n", "date": "Oct 31 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Foolish Frog", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/7790811/how-do-i-put-variables-inside-javascript-strings"},
{"title": "es6 forEach", "code": "const array1 = ['a', 'b', 'c'];\n\narray1.forEach((element) => {\n  console.log(element)\n});\n\n// expected output: \"a\"\n// expected output: \"b\"\n// expected output: \"c\"", "date": "Aug 25 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Cute Chinchilla", "source_name": null, "source_url": null},
{"title": "foreach javascript", "code": "var items = [\"item1\", \"item2\", \"item3\"]\nvar copie = [];\n\nitems.forEach(function(item){\n  copie.push(item);\n});", "date": "Feb 27 2020", "vote": 14, "tags": ["javascript", "nodejs"], "posted_by": "Docteur SEO", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/forEach"},
{"title": "javascript .foreach", "code": "let colors = ['red', 'blue', 'green'];\n// idx and sourceArr optional; sourceArr == colors\ncolors.forEach(function(color, idx, sourceArr) {\n\tconsole.log(color, idx, sourceArr)\n});\n// Output:\n// red 0 ['red', 'blue', 'green']\n// blue 1 ['red', 'blue', 'green']\n// green 2 ['red', 'blue', 'green']\n", "date": "Apr 07 2020", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "slgotting", "source_name": null, "source_url": null},
{"title": "for each javascript", "code": "const movies = [\n{name: \"A New Hope\", director: \"George Lucas\", release: \"1977-05-25\", episodeID: 4},\n{name: \"Attack of the Clones\", director: \"George Lucas\", release: \"2002-05-16\", episodeID: 2},\n{name: \"Return of the Jedi\", director: \"Richard Marquand\", release: \"1983-05-25\", episodeID: 6},\n{name: \"Revenge of the Sith\", director: \"George Lucas\", release: \"2005-05-19\", episodeID: 3},\n{name: \"The Empire Strikes Back\", director: \"Irvin Kershner\", release: \"1980-05-17\", episodeID: 5},\n{name: \"The Phantom Menace\", director: \"George Lucas\", release: \"1999-05-19\", episodeID: 1}     \n]\nmovies.forEach((movies) => {\n  console.log(movies.name);\n});\n/*A New Hope\nAttack of the Clones\nReturn of the Jedi\nRevenge of the Sith\nThe Empire Strikes Back\nThe Phantom Menace*/", "date": "Nov 07 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Antoniotonio", "source_name": null, "source_url": null},
{"title": "forEach", "code": "const arraySparse = [1,3,,7]\nlet numCallbackRuns = 0\n\narraySparse.forEach((element) => {\n  console.log(element)\n  numCallbackRuns++\n})\n\nconsole.log(\"numCallbackRuns: \", numCallbackRuns)\n\n// 1\n// 3\n// 7\n// numCallbackRuns: 3\n// comment: as you can see the missing value between 3 and 7 didn't invoke callback function.", "date": "Apr 18 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Magnificent Mink", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach"},
{"title": "boucle foreach js", "code": "let listeDePays = ['France', 'Belgique', 'Japon', 'Maroc'];\nlisteDePays.forEach(pays => console.log(pays));", "date": "Mar 13 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Crevure 01", "source_name": null, "source_url": null},
{"title": "nodejs express server img src", "code": "<img src=\"/logo.jpg\" />", "date": "Jun 03 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Australian Spiny Anteater", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/26013675/serving-a-static-html-page-containing-an-image-using-node-js-express"},
{"title": "nodejs express server img src", "code": "app.use(express.static(__dirname + '/images'));", "date": "Jun 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Australian Spiny Anteater", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/26013675/serving-a-static-html-page-containing-an-image-using-node-js-express"},
{"title": "express redirect", "code": "app.get('/', (req, res) => {\n  res.redirect('/foo/bar');\n});", "date": "Jul 18 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "nodejs express routing get", "code": "const express = require('express');\nconst mysql = require('mysql');\n\n// Connecting with database\nconst db = mysql.createConnection({\n  host: 'localhost',\t\t\t\t\t// The host you're using\n  user: 'yourusername',\t\t\t\t\t// The username you use to enter database\n  password: 'yourpassword'\t\t\t\t// Your password to your username\n});\n\ndb.connect((error) => {\n  if(error) {\n    throw error;\n  }\n  console.log('MySQL Connected');\n});\n\nconst app = express();\n\napp.get('yourroute', (request, response) => {\n  let sql = 'SELECT * FROM yourtable';\n  let query = db.query(sql, (error, result) => {\n    if(error) {\n      throw error;\n    }\n    console.log(result)\t\t\t\t\t// Use the result you get back here\n  })\n});\n\napp.listen('3000', () => {\n  console.log('Server is listening on port 3000');\n});\n\n", "date": "Dec 17 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Bored Bee", "source_name": null, "source_url": null},
{"title": "express redirect", "code": "app.get('/', (req, res) => {\n  res.redirect('/foo/bar');\n});", "date": "Jul 18 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "nodejs express routing get", "code": "const express = require('express');\nconst mysql = require('mysql');\n\n// Connecting with database\nconst db = mysql.createConnection({\n  host: 'localhost',\t\t\t\t\t// The host you're using\n  user: 'yourusername',\t\t\t\t\t// The username you use to enter database\n  password: 'yourpassword'\t\t\t\t// Your password to your username\n});\n\ndb.connect((error) => {\n  if(error) {\n    throw error;\n  }\n  console.log('MySQL Connected');\n});\n\nconst app = express();\n\napp.get('yourroute', (request, response) => {\n  let sql = 'SELECT * FROM yourtable';\n  let query = db.query(sql, (error, result) => {\n    if(error) {\n      throw error;\n    }\n    console.log(result)\t\t\t\t\t// Use the result you get back here\n  })\n});\n\napp.listen('3000', () => {\n  console.log('Server is listening on port 3000');\n});\n\n", "date": "Dec 17 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Bored Bee", "source_name": null, "source_url": null},
{"title": "nodejs express routing", "code": "// You need to install the following packages\nnpm install --save mysql express\n// And if you don't want to restart your server after every little change\nnpm install -g nodemon", "date": "Dec 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bored Bee", "source_name": null, "source_url": null},
{"title": "nodejs express return image", "code": "var filepath = '~/path/to/file.png'\n\napp.get('/path/for/site', function (req, res) {\n    res.sendFile(filepath);\n})", "date": "Dec 26 2019", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "SquarePear", "source_name": null, "source_url": null},
{"title": "nodejs error _.isNull is not a function", "code": "you smell of poo", "date": "Nov 21 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Delightful Dingo", "source_name": null, "source_url": null},
{"title": "nodejs extract pdf data", "code": "// Installation\n// npm install pdf-parse\n\n// Basic Usage\nconst\u00a0fs\u00a0=\u00a0require('fs');\nconst\u00a0pdf\u00a0=\u00a0require('pdf-parse');\u00a0\nlet\u00a0dataBuffer\u00a0=\u00a0fs.readFileSync('path\u00a0to\u00a0PDF\u00a0file...');\u00a0\npdf(dataBuffer).then(function(data)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0/* \u00a0number\u00a0of\u00a0pages\u00a0\u00a0\u00a0\u00a0\n\tconsole.log(data.numpages);\u00a0\u00a0\u00a0\u00a0\u00a0\n\tnumber\u00a0of\u00a0rendered\u00a0pages\u00a0\u00a0\u00a0\u00a0\n\tconsole.log(data.numrender);\u00a0\u00a0\u00a0\u00a0\u00a0\n\tPDF\u00a0info\u00a0\u00a0\u00a0\u00a0\n\tconsole.log(data.info);\u00a0\u00a0\u00a0\u00a0\u00a0\n\tPDF\u00a0metadata\u00a0\u00a0\u00a0\u00a0\n\tconsole.log(data.metadata);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\tPDF.js\u00a0version\u00a0\u00a0\u00a0\u00a0\u00a0\n\tcheck\u00a0https://mozilla.github.io/pdf.js/getting_started/\u00a0\u00a0\u00a0\u00a0\n\tconsole.log(data.version);\u00a0\u00a0\u00a0\u00a0\u00a0PDF\u00a0text\u00a0\u00a0\u00a0\u00a0console.log(data.text);\u00a0 */\u00a0\n});", "date": "May 10 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Itchy Iguana", "source_name": "www.codegrepper.com", "source_url": "https://www.codegrepper.com/code-examples/javascript/frameworks/nodejs/extract+data+from+pdf+nodejs"},
{"title": "nodejs express hot reload", "code": "$ npm install nodemon -g\n$ nodemon app.js", "date": "Dec 20 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tony Le Tigre", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/1972242/how-to-auto-reload-files-in-node-js"},
{"title": "download image in nodejs", "code": "const request = require('request');\nconst fs = require('fs');\n\nasync function download(url, dest) {\n\n    /* Create an empty file where we can save data */\n    const file = fs.createWriteStream(dest);\n\n    /* Using Promises so that we can use the ASYNC AWAIT syntax */\n    await new Promise((resolve, reject) => {\n      request({\n        /* Here you should specify the exact link to the file you are trying to download */\n        uri: url,\n        gzip: true,\n      })\n          .pipe(file)\n          .on('finish', async () => {\n            console.log(`The file is finished downloading.`);\n            resolve();\n          })\n          .on('error', (error) => {\n            reject(error);\n          });\n    })\n        .catch((error) => {\n          console.log(`Something happened: ${error}`);\n        });\n}\n\n// example\n\n(async () => {\n  \tconst data = await download('https://random.dog/vh7i79y2qhhy.jpg', './images/image.jpg');\n  \tconsole.log(data); // The file is finished downloading.\n})();", "date": "Jun 01 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Vu Nguyen", "source_name": null, "source_url": null},
{"title": "nodejs download image from url", "code": "var fs = require('fs'),\n    request = require('request');\n\nvar download = function(uri, filename, callback){\n  request.head(uri, function(err, res, body){\n    console.log('content-type:', res.headers['content-type']);\n    console.log('content-length:', res.headers['content-length']);\n\n    request(uri).pipe(fs.createWriteStream(filename)).on('close', callback);\n  });\n};\n\ndownload('https://www.google.com/images/srpr/logo3w.png', 'google.png', function(){\n  console.log('done');\n});", "date": "Jun 22 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "ROCKY6", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/12740659/downloading-images-with-node-js"},
{"title": "node dotenv", "code": "require('dotenv').config();\n\nconsole.log(process.env.MY_ENV_VAR);", "date": "Oct 07 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "nodejs dotenv path how to set", "code": "// when yours .env is in other place then default, you can set path to it\n\nconst path = require('path')\nrequire('dotenv').config({ path: path.resolve(__dirname, '../../.env') }); //use as many '../' as you need", "date": "Oct 14 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Scatterbrained Pennyduck", "source_name": null, "source_url": null},
{"title": "nodejs date add days", "code": "date.setTime( date.getTime() + days * 86400000 );\n", "date": "Nov 08 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Foolish Frog", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/6963311/add-days-to-a-date-object"},
{"title": "nodejs current timestamp unix", "code": "Math.floor(+new Date() / 1000)\n", "date": "Dec 20 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "PerryGamerPT", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/25250551/how-to-generate-timestamp-unix-epoch-format-nodejs"},
{"title": "js timestamp", "code": "var timestamp = new Date().getTime();", "date": "Nov 10 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "GutoTrosla", "source_name": "pt.stackoverflow.com", "source_url": "https://pt.stackoverflow.com/a/545"},
{"title": "how to get timestamp in javascript of a date object", "code": "new Date().getTime()\n\nnew Date().valueOf()", "date": "Apr 13 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Cooperative Corncrake", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/how-to-get-timestamp-javascript/"},
{"title": "javascript get timestamp", "code": "var currentTimeInSeconds=Math.floor(Date.now()/1000); //unix timestamp in seconds\r\nvar currentTimeInMilliseconds=Date.now(); // unix timestamp in milliseconds", "date": "Jul 22 2019", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "node get unix timestamp", "code": "Math.floor(new Date() / 1000) // in seconds", "date": "Mar 30 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "just-saved-you-a-stackoverflow-visit", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/25250551/how-to-generate-timestamp-unix-epoch-format-nodejs"},
{"title": "js get current timestamp", "code": "Date.now();", "date": "Mar 23 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Soulless Creature", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/how-to-get-timestamp-javascript/"},
{"title": "nodejs current timestamp", "code": "Math.floor(new Date() / 1000)", "date": "Jan 25 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "PerryGamerPT", "source_name": null, "source_url": null},
{"title": "nodejs cronjob", "code": "/**\n @description CRONJOB RATE LIMIT REQUEST API MIDDLEWARE\n*/\nconst cron = require('node-schedule')\nconst axios = require('axios')\n\n/**\n @description store ip address  user to array\n*/\nconst IpAddress = []\n\n/**\n @description fetch data from provider isp\n*/\nconst IpGeolocation = async () => {\n  const ip = {}\n  const res = await axios.get('http://ipwhois.app/json/')\n  Object.defineProperty(ip, 'ipv4', { value: res.data.ip, enumerable: true })\n  return ip.ipv4\n}\n\n/**\n @description reset  ip address after 1 minute\n*/\nconst ResetRateLimit = () => {\n  const schedule = new cron.RecurrenceRule()\n  schedule.second = 59\n  schedule.tz = 'asia/jakarta'\n\n  cron.scheduleJob('ResetRateLimit', schedule, () => {\n    IpAddress.splice(0, IpAddress.length)\n  })\n}\n\nmodule.exports = async (req, res, next) => {\n  /**\n @description result current IP Location from provider isp\n*/\n  const myIp = await IpGeolocation()\n\n  /**\n   @description get any request method  from user after sending data or request data\n  */\n  switch (req.method) {\n    case 'GET':\n      if (IpAddress.length < 7) {\n        IpAddress.push(myIp)\n      }\n      break\n    case 'POST':\n      if (IpAddress.length < 7) {\n        IpAddress.push(myIp)\n      }\n      break\n    default:\n      return next()\n  }\n\n  /**\n   @description get total requests from the same ip\n  */\n  const currentIp = IpAddress.filter((v, i) => v === myIp).length\n\n  /**\n   @description if the same ip requests more than 5 throw an error message\n  */\n  if (currentIp > 4) {\n    return res.status(401).json({\n      method: req.method,\n      status: res.statusCode,\n      error: 'Oopss..request method not allowed many to request'\n    })\n  }\n\n  /**\n   @description return to next function if  after reset ip address\n  */\n  ResetRateLimit()\n  return next()\n}", "date": "Jul 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "dockerfile nodejs", "code": "FROM node:10-alpine\n\nRUN mkdir -p /home/node/app/node_modules && chown -R node:node /home/node/app\n\nWORKDIR /home/node/app\n\nCOPY package*.json ./\n\nUSER node\n\nRUN npm install\n\nCOPY --chown=node:node . .\n\nEXPOSE 8080\n\nCMD [ \"node\", \"index.js\" ]", "date": "Nov 30 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Skull Sherbet", "source_name": null, "source_url": null},
{"title": "simple nodejs dockerfile", "code": "FROM node:12-alpine\nWORKDIR /app\nCOPY package.json yarn.lock ./\nRUN yarn install --production\nCOPY . .\nCMD [\"node\", \"/app/src/index.js\"]", "date": "May 28 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "lieven121", "source_name": "github.com", "source_url": "https://github.com/docker/getting-started"},
{"title": "dockerfile for nodejs", "code": "# Choose the Image which has Node installed already\nFROM node:alpine\n\n# COPY all the files from Current Directory into the Container\nCOPY ./ ./\n\n# Install the Project Dependencies like Express Framework\nRUN npm install\n\n# Tell that this image is going to Open a Port \nEXPOSE 8080\n\n# Default Command to launch the Application\nCMD [\"npm\", \"start\"]", "date": "Jun 08 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "iamhanumanth", "source_name": "www.middlewareinventory.com", "source_url": "https://www.middlewareinventory.com/blog/docker-nodejs-example/#Step_5_Publish_your_Docker_NodeJS_image_to_Docker_Hub"},
{"title": "docker run npm install express syntax", "code": "FROM node:12\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\nRUN npm install\n# If you are building your code for production\n# RUN npm ci --only=production\n\n# Bundle app source\nCOPY . .\n\nEXPOSE 8080\nCMD [ \"node\", \"server.js\" ]", "date": "Sep 29 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Repulsive Raccoon", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/nodejs-docker-webapp/"},
{"title": "docker node alpine", "code": "# Copy and paste to pull this image for the latest \ndocker pull node\n\n# more specific use this line\n# docker pull node:<version>-alpine \ndocker pull node:14.4-alpine3.11", "date": "Jun 18 2020", "vote": 2, "tags": ["javascript", "nodejs", "shell"], "posted_by": "tsboh", "source_name": "hub.docker.com", "source_url": "https://hub.docker.com/_/node/"},
{"title": "nodejs docker", "code": "FROM node:boron\n\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\nCOPY package.json /usr/src/app/\nRUN npm install\n\nCOPY . /usr/src/app\n\nEXPOSE 3000\n\nCMD [\"npm\",\"start\"]\n\n", "date": "Dec 18 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Super Skimmer", "source_name": "nextflow.in.th", "source_url": "https://nextflow.in.th/2017/easy-create-docker-image-for-express-and-nodejs/"},
{"title": "javascript delete key from object", "code": "let person = {\n  firstname: 'John',\n  lastname: 'Doe'\n}\n\nconsole.log(person.firstname);\n// expected output: \"John\"\n\ndelete person.firstname;\n\nconsole.log(person.firstname);\n// expected output: undefined", "date": "Mar 02 2020", "vote": 21, "tags": ["javascript", "nodejs"], "posted_by": "Mattalui", "source_name": null, "source_url": null},
{"title": "nodejs delete object key", "code": "delete obj.firstname;", "date": "May 25 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Good Gaur", "source_name": null, "source_url": null},
{"title": "nodejs encrypt text with key", "code": "const crypto = require('crypto');\n\nconst algorithm = 'aes-256-ctr';\nconst secretKey = 'vOVH6sdmpNWjRRIqCc7rdxs01lwHzfr3';\nconst iv = crypto.randomBytes(16);\n\nconst encrypt = (text) => {\n\n    const cipher = crypto.createCipheriv(algorithm, secretKey, iv);\n\n    const encrypted = Buffer.concat([cipher.update(text), cipher.final()]);\n\n    return {\n        iv: iv.toString('hex'),\n        content: encrypted.toString('hex')\n    };\n};\n\nconst decrypt = (hash) => {\n\n    const decipher = crypto.createDecipheriv(algorithm, secretKey, Buffer.from(hash.iv, 'hex'));\n\n    const decrpyted = Buffer.concat([decipher.update(Buffer.from(hash.content, 'hex')), decipher.final()]);\n\n    return decrpyted.toString();\n};\n\nmodule.exports = {\n    encrypt,\n    decrypt\n};", "date": "Mar 10 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "florinrelea", "source_name": null, "source_url": null},
{"title": "nodejs createcipheriv invalid key length", "code": "let key = crypto.createHash('sha256').update(String(secret)).digest('base64').substr(0, 32);\n", "date": "Feb 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Scary Shrew", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/50963160/invalid-key-length-in-crypto-createcipheriv"},
{"title": "stream in node js", "code": "A stream is an abstract interface for working with streaming data in Node.js. The stream module provides an API for implementing the stream interface.\n\nThere are many stream objects provided by Node.js. For instance, a request to an HTTP server and process.stdout are both stream instances.\n\nStreams can be readable, writable, or both. All streams are instances of EventEmitter.\n\nTo access the stream module\n\nconst stream = require('stream');\nor import stream from 'stream';\n\nThere are four fundamental stream types within Node.js:\nWritable: streams to which data can be written (for example, fs.createWriteStream()).\nReadable: streams from which data can be read (for example, fs.createReadStream()).\nDuplex: streams that are both Readable and Writable (for example, net.Socket).\nTransform: Duplex streams that can modify or transform the data as it is written and read (for example, zlib.createDeflate()).", "date": "Sep 28 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "kepl3r", "source_name": null, "source_url": null},
{"title": "nodejs create stream", "code": "const { Readable } = require(\"stream\")\n\nconst readable = Readable.from([\"input string\"])\n\nreadable.on(\"data\", (chunk) => {\n  console.log(chunk) // will be called once with `\"input string\"`\n})", "date": "Jul 21 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "North Bear", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/12755997/how-to-create-streams-from-string-in-node-js"},
{"title": "nodejs copy and rename file", "code": "//copy the $file to $dir2\nvar copyFile = (file, dir2)=>{\n  //include the fs, path modules\n  var fs = require('fs');\n  var path = require('path');\n\n  //gets file name and adds it to dir2\n  var f = path.basename(file);\n  var source = fs.createReadStream(file);\n  var dest = fs.createWriteStream(path.resolve(dir2, f));\n\n  source.pipe(dest);\n  source.on('end', function() { console.log('Succesfully copied'); });\n  source.on('error', function(err) { console.log(err); });\n};\n\n//example, copy file1.htm from 'test/dir_1/' to 'test/'\ncopyFile('./test/dir_1/file1.htm', './test/');\n", "date": "Sep 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Distinct Dog", "source_name": "coursesweb.net", "source_url": "https://coursesweb.net/nodejs/move-copy-file"},
{"title": "nodejs create pdf", "code": "$ npm install pdfkit\n\nconst PDFDocument = require('pdfkit');\nconst fs = require('fs');\n\nvar pdfDoc = new PDFDocument;\npdfDoc.pipe(fs.createWriteStream('SampleDocument.pdf'));\n\npdfDoc.text(\"From Mon-Sat we will have a 10% discount on selected items!\", 150, 150);\npdfDoc\n    .fillColor('red')\n    .fontSize(17)\n    .text(\"20%\", 305, 150);\n\npdfDoc.end();", "date": "Feb 21 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Nimorum", "source_name": null, "source_url": null},
{"title": "node js create pdf from html", "code": "The problem with using PDF converter libraries available on NPM like pdfkit is that, you gonna have to recreate the page structures again in your html templates to get the desired output.\n\nOne of the best approach to rendering html and convert to pdf is by using Puppeteer on NodeJs. Puppeteer is a Node library which provides a high-level API to control Chrome or Chromium over the DevTools Protocol. It can be used to generate screenshots and PDFs of html pages in your case.", "date": "Mar 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Santino", "source_name": null, "source_url": null},
{"title": "nodejs convert buffer to uint8array", "code": "npm install buffer-to-uint8array\n make sure you have it installed as a starter\n ", "date": "Apr 21 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "All Praise ", "source_name": null, "source_url": null},
{"title": "console.log javascript", "code": "console.log(10);\nconsole.log('You can also log numbers')", "date": "May 06 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Elegant Emu", "source_name": null, "source_url": null},
{"title": "javascript console.log", "code": "console.log('I want to log this so I am logging this. Calm down and log.')", "date": "Apr 14 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Kid Who Codes Too Much", "source_name": null, "source_url": null},
{"title": "print in node js", "code": "console.log('hello world');\n// Prints: hello world, to stdout\nconsole.log('hello %s', 'world');\n// Prints: hello world, to stdout\nconsole.error(new Error('Whoops, something bad happened'));\n// Prints: [Error: Whoops, something bad happened], to stderr\n\nconst name = 'Will Robinson';\nconsole.warn(`Danger ${name}! Danger!`);\n// Prints: Danger Will Robinson! Danger!, to stderr", "date": "Aug 10 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bored Boar", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/console.html"},
{"title": "nodejs console.log", "code": "console.log(\"hello world\");", "date": "Jan 15 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "HeyItsDeveloperRhys", "source_name": null, "source_url": null},
{"title": "nodejs connection to localhost refused mysql errno -61", "code": "var db = mysql.createConnection({\n    host: 'localhost',\n    user: 'root',\n    password: '',\n    database: 'user_data',\n    port: 3036\n});\ndb.connect();\n", "date": "Feb 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cruel Coyote", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/42969382/node-js-with-mysql-connection-refused-to-127-0-0-1-3306"},
{"title": "nodejs config file", "code": "{\n    \"app\": {\n        \"port\": 3000\n    },\n    \"db\": {\n        \"host\": \"localhost\",\n        \"port\": 27017,\n        \"name\": \"ydb\"\n    }\n}\n", "date": "Sep 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Frightened Ferret", "source_name": "zetcode.com", "source_url": "http://zetcode.com/javascript/nodeconfig/"},
{"title": "node cluster", "code": "const cluster = require('cluster');\nconst http = require('http');\nconst numCPUs = require('os').cpus().length;\n\nif (cluster.isMaster) {\n  console.log(`Master ${process.pid} is running`);\n\n  // Fork workers.\n  for (let i = 0; i < numCPUs; i++) {\n    cluster.fork();\n  }\n\n  cluster.on('exit', (worker, code, signal) => {\n    console.log(`worker ${worker.process.pid} died`);\n  });\n} else {\n  // Workers can share any TCP connection\n  // In this case it is an HTTP server\n  http.createServer((req, res) => {\n    res.writeHead(200);\n    res.end('hello world\\n');\n  }).listen(8000);\n\n  console.log(`Worker ${process.pid} started`);\n}", "date": "Oct 22 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Frail Ferret", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/cluster.html"},
{"title": "nodejs cluster example", "code": "import http, { Server } from 'http'\nimport cluster, { Worker } from 'cluster'\nimport { cpus, CpuInfo } from 'os'\nimport consola from 'consola'\nimport chalk from 'chalk'\nimport app from './src/app'\n\nconst coreThread: CpuInfo[] = cpus()\n\nif (cluster.isMaster) {\n\tfor (let i = 0; i < coreThread.length; i++) {\n\t\tcluster.fork()\n\t}\n\n\tconst workersTread: any = []\n\tfor (const id in cluster.workers) {\n\t\tworkersTread.push(id)\n\t}\n\n\tworkersTread.forEach(\n\t\tasync (pid: number, _: number): Promise<void> => {\n\t\t\tawait cluster.workers[pid].send({\n\t\t\t\tfrom: 'isMaster',\n\t\t\t\ttype: 'SIGKILL',\n\t\t\t\tmessage: 'cleanup is worker dead and change to new worker'\n\t\t\t})\n\t\t}\n\t)\n\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tcluster.on('online', (worker: Worker): void => {\n\t\t\tif (worker.isConnected()) {\n\t\t\t\tconsole.info(`${chalk.greenBright('worker active pid')}: ${worker.process.pid}`)\n\t\t\t}\n\t\t})\n\n\t\tcluster.on('exit', (worker: Worker, code: number, signal: string): void => {\n\t\t\tif (worker.isDead()) {\n\t\t\t\tconsole.info(`${chalk.redBright('worker dead pid')}: ${worker.process.pid}`)\n\t\t\t}\n\t\t\tcluster.fork()\n\t\t})\n\t}\n} else {\n\tconst server = http.createServer(app) as Server\n\tconst host: any = process.env.HOST\n\tconst port: any = process.env.PORT\n\tserver.listen(port, host, (): void => consola.success(`server is running on ${port}`))\n}", "date": "Aug 29 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "javascript if undefined", "code": "if(typeof comment === 'undefined') {\n\n  alert('Variable \"comment\" is undefined.');\n\n} else if(comment === null){\n\n  alert('Variable \"comment\" is null.');\n\n}", "date": "Mar 25 2020", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Tame Toucan", "source_name": "www.tutorialrepublic.com", "source_url": "https://www.tutorialrepublic.com/faq/how-to-determine-if-variable-is-undefined-or-null-in-javascript.php"},
{"title": "javacript detect undefined", "code": "//detecting undefined object property\r\nif (typeof person.last_name === \"undefined\") {\r\n    console.log(\"person last_name is undefined\");\r\n}\r\n\r\n//detecting undefined variable \r\nif (typeof myVar === \"undefined\") {\r\n    console.log(\"myVar is undefined\");\r\n}", "date": "Jul 22 2019", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "nodejs check if variable is undefined", "code": "if ( typeof query !== 'undefined' && query )\n{\n  //do stuff if query is defined and not null\n}\nelse\n{\n\n}\n", "date": "Dec 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "SeriousMonk", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/13335873/how-can-i-check-whether-a-variable-is-defined-in-node-js"},
{"title": "javascript check number against undefined", "code": "javascript check number against undefined", "date": "Nov 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tense Tern", "source_name": null, "source_url": null},
{"title": "nodejs check if express started", "code": "server.listen(80).on('error', function(err) { });", "date": "Apr 11 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "florinrelea", "source_name": null, "source_url": null},
{"title": "nodejs check if array has at least 1 value", "code": "/**\n * This function checks if the passed param is an array and if it has at least 1 element.\n * \n * @name exists\n * @param {array} input Likely an array but possible for other data types, the data that needs to be checked.\n * @return {boolean} true: input param is an array and has at least 1 element, false: input param is not an array or is an array but with no elements.\n */\n\nArray.exists = input => { return Array.isArray(input) && input.some(e => e) }\n\n// Usage\n\nArray.exists([]) // false\nArray.exists(`Hello World`)// false\nArray.exists([`Hello World`]) // true", "date": "Feb 17 2021", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Kurasad", "source_name": null, "source_url": null},
{"title": "nodejs cache data", "code": "\u00a0\u00a0\u00a0\u00a0npm\u00a0install\u00a0node-cache\u00a0--save", "date": "Oct 09 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Ashamed Antelope", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-cache"},
{"title": "nodejs btoa", "code": "Buffer.from('Hello world!', 'binary').toString('base64')", "date": "Jun 12 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Uptight Unicorn", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/23097928/node-js-throws-btoa-is-not-defined-error"},
{"title": "atob nodejs", "code": "(function () {\n  \"use strict\";\n\n  var atob = require('atob');\n  var b64 = \"SGVsbG8sIFdvcmxkIQ==\";\n  var bin = atob(b64);\n\n  console.log(bin); // \"Hello, World!\"\n}());\n", "date": "Nov 28 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Handsome Hummingbird", "source_name": "npm.runkit.com", "source_url": "https://npm.runkit.com/atob"},
{"title": "rror: btoa is not defined", "code": "console.log(Buffer.from('Hello World!').toString('base64'));\n", "date": "Dec 15 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Cloudy Cow", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/23097928/node-js-throws-btoa-is-not-defined-error"},
{"title": "nodejs bodyparser form data", "code": "var bodyParser = require('body-parser');\nvar multer = require('multer');\nvar forms = multer();\n\n// apply them\n\napp.use(bodyParser.json());\napp.use(forms.array()); \napp.use(bodyParser.urlencoded({ extended: true }));\n\n// how to use\n\nrouter.post('/', function(req, res) {\n    console.log(req.body);\n    console.log('received the widget request');\n});\n", "date": "Jan 12 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Easy Elephant", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/26347394/node-js-with-express-bodyparser-unable-to-obtain-form-data-from-post-reques"},
{"title": "how to get data send from a form express", "code": "const express = require('express')\nconst app = express()\n\napp.use(express.urlencoded())\n", "date": "May 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Glamorous Goose", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/express-forms/"},
{"title": "nodejs aws s3 stream upload", "code": "inputStream\n  .pipe(uploadFromStream(s3));\n\nfunction uploadFromStream(s3) {\n  var pass = new stream.PassThrough();\n\n  var params = {Bucket: BUCKET, Key: KEY, Body: pass};\n  s3.upload(params, function(err, data) {\n    console.log(err, data);\n  });\n\n  return pass;\n}\n", "date": "Oct 05 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Tender Turkey", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/37336050/pipe-a-stream-to-s3-upload"},
{"title": "nodejs aws s3 bucket delete item", "code": "var params = {  Bucket: 'your bucket', Key: 'your object' };\n\ns3.deleteObject(params, function(err, data) {\n  if (err) console.log(err, err.stack);  // error\n  else     console.log();                 // deleted\n});", "date": "Oct 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "florinrelea", "source_name": null, "source_url": null},
{"title": "await inside map js", "code": "const mapLoop = async _ => {\n  console.log('Start')\n\n  const promises = fruitsToGet.map(async fruit => {\n    const numFruit = await getNumFruit(fruit)\n    return numFruit\n  })\n\n  const numFruits = await Promise.all(promises)\n  console.log(numFruits)\n\n  console.log('End')\n}", "date": "Jul 20 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Worrisome Warbler", "source_name": null, "source_url": null},
{"title": "nodejs await inside map", "code": "const someFunction = (myArray) => {\n    const promises = myArray.map(async (myValue) => {\n        return {\n            id: \"my_id\",\n            myValue: await service.getByValue(myValue)\n        }\n    });\n    return Promise.all(promises);\n}\n", "date": "Feb 04 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "jordangarrison", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/42489918/async-await-inside-arraymap"},
{"title": "map with async", "code": "const list = [1, 2, 3, 4, 5] //...an array filled with values\n\nconst functionWithPromise = item => { //a function that returns a promise\n  return Promise.resolve('ok')\n}\n\nconst anAsyncFunction = async item => {\n  return functionWithPromise(item)\n}\n\nconst getData = async () => {\n  return Promise.all(list.map(item => anAsyncFunction(item)))\n}\n\ngetData().then(data => {\n  console.log(data)\n})", "date": "Sep 01 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "GutoTrosla", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/javascript-async-await-array-map/"},
{"title": "nodejs authentication token", "code": "Setting up our development environment and initializing our express server.\nCreating our first basic route and controller.\nFleshing out our routes and controllers to add users and login users.\nCreating a route and controller that will handle getting all users.", "date": "Mar 01 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Super Scarab", "source_name": null, "source_url": null},
{"title": "token authenticate nodejs", "code": "As a first test to ensure that you can connect to your FusionAuth service, create a test.js file, replacing the first parameter in the FusionAuthClient constructor [your API Key here] with a valid API key from your FusionAuth environment. Replace the email address user@example.com with a valid user in your FusionAuth environment. If you just installed FusionAuth there may only be a single user which will be the email address used to complete the Setup Wizard.\n\n", "date": "Mar 01 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Curious Capybara", "source_name": null, "source_url": null},
{"title": "token authentication in nodejs", "code": "If the request contains the access token, then the server will verify whether it was issued by the server itself using the stored secret. In case the token is expired or recognized as a one not signed by the server, the jsonwebtoken\u2019s verify method will throw an error. We can handle the error to return a 401 error back to the client.", "date": "Mar 01 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Curious Capybara", "source_name": null, "source_url": null},
{"title": "nodejs atob", "code": "// If you need to convert to Base64 you could do so using Buffer:\nconsole.log(Buffer.from('Hello World!').toString('base64'));\n// Reverse (assuming the content you're decoding is a utf8 string):\nconsole.log(Buffer.from(b64Encoded, 'base64').toString());", "date": "Apr 03 2021", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "florinrelea", "source_name": null, "source_url": null},
{"title": "nodejs btoa", "code": "Buffer.from('Hello world!', 'binary').toString('base64')", "date": "Jun 12 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Uptight Unicorn", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/23097928/node-js-throws-btoa-is-not-defined-error"},
{"title": "atob nodejs", "code": "(function () {\n  \"use strict\";\n\n  var atob = require('atob');\n  var b64 = \"SGVsbG8sIFdvcmxkIQ==\";\n  var bin = atob(b64);\n\n  console.log(bin); // \"Hello, World!\"\n}());\n", "date": "Nov 28 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Handsome Hummingbird", "source_name": "npm.runkit.com", "source_url": "https://npm.runkit.com/atob"},
{"title": "atob javascript", "code": "The atob() and btoa() methods allow authors to transform content to and from the base64 encoding.\n\nIn these APIs, for mnemonic purposes, the \"b\" can be considered to stand for \"binary\", and the \"a\" for \"ASCII\". In practice, though, for primarily historical reasons, both the input and output of these functions are Unicode strings.\n\nFrom : http://www.w3.org/TR/html/webappapis.html#atob", "date": "Mar 11 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Santino", "source_name": null, "source_url": null},
{"title": "nodejs api to logged in users count on an application", "code": "var io = require('socket.io').listen(8080);\nvar count = 0\n\nio.sockets.on('connection', function(socket) {\n    count++;\n    io.sockets.emit('message', { count: count });\n\n    socket.on('disconnect', function(){\n        count--;\n        io.sockets.emit('message', { count: count });\n    })\n});\n", "date": "Nov 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Outstanding Ostrich", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/8449026/using-node-js-to-display-number-of-current-users"},
{"title": "node check if file exists", "code": "const fs = require(\"fs\"); // Or `import fs from \"fs\";` with ESM\nif (fs.existsSync(path)) {\n    // Do something\n}", "date": "May 22 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Witty Worm", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/4482686/check-synchronously-if-file-directory-exists-in-node-js"},
{"title": "nodejs check if file is running on server or client", "code": "function is_server() {\n   return ! (typeof window != 'undefined' && window.document);\n}\n", "date": "Apr 02 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Crowded Chinchilla", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/13644303/how-to-check-if-js-code-is-running-on-node-server-or-on-the-client"},
{"title": "how to manage a db connection in javascript", "code": "\n//put these lines in a seperate file\nconst mysql = require('mysql2');\n\nconst connection = mysql.createPool({\n    host: \"localhost\",\n    user: \"\",\n    password: \"\",\n    database: \"\"\n    // here you can set connection limits and so on\n});\n\nmodule.exports = connection;\n\n//put these on destination page\nconst connection = require('../util/connection');\n\nasync function getAll() {\n    const sql = \"SELECT * FROM tableName\";\n    const [rows] = await connection.promise().query(sql);\n    return rows;\n} \nexports.getAll = getAll;", "date": "May 09 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Alive Anaconda", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/49286687/managing-database-connections-in-node-js-best-practices"},
{"title": "use nodejs mysql", "code": "var\u00a0mysql\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=\u00a0require('mysql');var\u00a0connection\u00a0=\u00a0mysql.createConnection({\u00a0\u00a0host\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0'localhost',\u00a0\u00a0user\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0'me',\u00a0\u00a0password\u00a0:\u00a0'secret',\u00a0\u00a0database\u00a0:\u00a0'my_db'});\u00a0connection.connect();\u00a0connection.query('SELECT\u00a01\u00a0+\u00a01\u00a0AS\u00a0solution',\u00a0function\u00a0(error,\u00a0results,\u00a0fields)\u00a0{\u00a0\u00a0if\u00a0(error)\u00a0throw\u00a0error;\u00a0\u00a0console.log('The\u00a0solution\u00a0is:\u00a0',\u00a0results[0].solution);});\u00a0connection.end();", "date": "Dec 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Unknown dev", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/mysql"},
{"title": "nodejs 14 in docker", "code": "docker run -p 49160:8080 -d <your username>/node-web-app\n", "date": "Mar 03 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cautious Constrictor", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/nodejs-docker-webapp/"},
{"title": "javascript append to array", "code": "var colors=[\"red\",\"white\"];\r\ncolors.push(\"blue\");//append 'blue' to colors", "date": "Jul 22 2019", "vote": 118, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "append array js", "code": "var colors= [\"red\",\"blue\"];\n\tcolors.push(\"yellow\"); //[\"red\",\"blue\",\"yellow\"]", "date": "Nov 30 2019", "vote": 27, "tags": ["javascript", "nodejs"], "posted_by": "Mandras Tree Shrew", "source_name": null, "source_url": null},
{"title": "js add item to array", "code": "var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nfruits.push(\"Kiwi\");", "date": "Mar 30 2020", "vote": 18, "tags": ["javascript", "nodejs"], "posted_by": "just-saved-you-a-stackoverflow-visit", "source_name": null, "source_url": null},
{"title": "add item to list javascript", "code": "var fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\"];\nfruits.push(\"Kiwi\"); // Fruits = [\"Banana\", \"Orange\", \"Apple\", \"Mango\", \"Kiwi\"];", "date": "Mar 03 2020", "vote": 15, "tags": ["javascript", "nodejs"], "posted_by": "Wide-eyed Warbler", "source_name": null, "source_url": null},
{"title": "js push array", "code": "var array = [];\nvar element = \"anything you want in the array\";\narray.push(element); // array = [ \"anything you want in the array\" ]", "date": "Apr 25 2020", "vote": 11, "tags": ["javascript", "nodejs"], "posted_by": "Filthy Fish", "source_name": null, "source_url": null},
{"title": "nodejs add to array", "code": "var colors=[\"red\",\"white\"];\ncolors.push(\"blue\");//append 'blue' to colors", "date": "Feb 23 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fierce Fly", "source_name": null, "source_url": null},
{"title": "node wait 10 seconds", "code": "async function init() {\n  console.log(1);\n  await sleep(1000);\n  console.log(2);\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n\n// one liner\nlet sleep = ms => new Promise(resolve => setTimeout(resolve, ms));", "date": "Mar 30 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "just-saved-you-a-stackoverflow-visit", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/14249506/how-can-i-wait-in-node-js-javascript-l-need-to-pause-for-a-period-of-time/41957152"},
{"title": "check node version", "code": "node --version  \n//or\nnode -v\n\n//v12.15.0", "date": "Jul 03 2020", "vote": 10, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "find node version", "code": "node -v\n\nOR\n\nnode --version", "date": "May 25 2020", "vote": 3, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Silverlightning", "source_name": null, "source_url": null},
{"title": "check npm version", "code": "npm -v", "date": "Apr 26 2020", "vote": 4, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Disturbed Dove", "source_name": null, "source_url": null},
{"title": "node version check", "code": "node -v", "date": "May 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "dr3am_warri0r", "source_name": null, "source_url": null},
{"title": "javascript append to array", "code": "var colors=[\"red\",\"white\"];\r\ncolors.push(\"blue\");//append 'blue' to colors", "date": "Jul 22 2019", "vote": 118, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "javascript append element to array", "code": "var colors= [\"red\",\"blue\"];\n\tcolors.push(\"yellow\"); ", "date": "Oct 29 2019", "vote": 44, "tags": ["javascript", "nodejs"], "posted_by": "FriendlyHawk", "source_name": null, "source_url": null},
{"title": "nodejs add element to array", "code": "var array = [];\narray.push(element)\nconsole.log(array);", "date": "Jan 22 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "StarbuckBarista", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/"},
{"title": "javascript add items to array", "code": "//adding items to array\nobjects = [];\nobjects.push(\"you can add a string,number,boolean,etc\");\n//if you more stuff in a array\n//before i made a error doing value = : value\nobjects.push({variable1 : value, variable2 : value);\n//we do the {} so we tell it it will have more stuff and the variable : value\n", "date": "Oct 20 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Open Oryx", "source_name": null, "source_url": null},
{"title": "array.push", "code": "var vegetables = ['Capsicum',' Carrot','Cucumber','Onion'];\nvegetables.push('Okra');\n//expected output ['Capsicum',' Carrot','Cucumber','Onion','Okra']; \n// .push adds a thing at the last of an array", "date": "May 02 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Scary Shrew", "source_name": ".www.developer.mozilla.com", "source_url": "http://.www.developer.mozilla.com"},
{"title": "js append to array", "code": "var array = [0,1,3];\narray.append(5);\nconsole.log(array); // [0,1,3,5]", "date": "Jan 02 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Donate ", "source_name": null, "source_url": null},
{"title": "Nodejs - non-flowing data stream", "code": "import { createReadStream, ReadStream } from 'fs';\n\nvar readStream: ReadStream = createReadStream('./data.txt');\n\nsetTimeout(() => {\n  const data = readStream.read(10);\n  console.log(data);\n}, 10);\n", "date": "May 16 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Itchy Iguana", "source_name": "gist.githubusercontent.com", "source_url": "https://gist.githubusercontent.com/KunalT6569/30db44db888d5bcb683e64a913d4b002/raw/8f2307085952ca198d79ab2da19c593b98cc860c/non-flowing-readableStream-node.ts"},
{"title": "node wrangler preview", "code": "Simply Ctrl + Shift + Click a node", "date": "Apr 21 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "JasonXXR", "source_name": null, "source_url": null},
{"title": "npm cache clean", "code": "npm cache clean --force", "date": "May 05 2020", "vote": 22, "tags": ["javascript", "nodejs", "shell"], "posted_by": "GutoTrosla", "source_name": null, "source_url": null},
{"title": "nodejs clean cache", "code": "npm cache clean --force ", "date": "Dec 11 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Condemned Cardinal", "source_name": null, "source_url": null},
{"title": "node js", "code": "NodeJs is Runtime environment for executing Js code, Outside Of Browser.\nit is build upon Chrome v8 engine using c++.\n\nUses of Node:\n\n-can build back-end services like API which can be used as backend for \ndiferent platform Apps(Website, MobileApp, Desktop App).\n\n-is Asynchronous by default means Single thread handle all the request\nand response, thereby providing more speed, highly scalable, built time half \ncompare to other tech in market, 33% few line of code, 40% fewer files,\ncan handle 2times more requests/secs, 35% fast response time.\n// Hope you like the short Description.", "date": "Oct 02 2020", "vote": 14, "tags": ["javascript", "nodejs"], "posted_by": "VeNOM", "source_name": null, "source_url": null},
{"title": "node js version", "code": "node -v", "date": "May 01 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Victor Grk", "source_name": null, "source_url": null},
{"title": "node js", "code": "Node js allows you to run javascript outside of your browser\nex: you are able to run it on your terminal", "date": "Jun 18 2020", "vote": 16, "tags": ["javascript", "nodejs"], "posted_by": "Soccer Star", "source_name": null, "source_url": null},
{"title": "node.js", "code": "When you install Node.js, you can do these things:\nMake web servers\nRun JavaScript without an HTML file\n...and more!", "date": "Oct 03 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "amazingcoder444Rblx", "source_name": null, "source_url": null},
{"title": "node", "code": "JavaScript run time enviroment. Usully JS is ran by the browser.\nNode helps run javascript code outside the browser while also providing tools to\nmake coding in js more streamlined.", "date": "Oct 30 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "EZERP", "source_name": null, "source_url": null},
{"title": "nodejs", "code": "const http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('Hello World');\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});\n", "date": "Feb 17 2021", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Hurt Hamster", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/about/"},
{"title": "update nodejs", "code": "//First, clear the npm cache:\n\tnpm cache clean -f\n\n//Install n, Node\u2019s version manager:\n\tnpm install -g n\n    \n//With the n module installed, you can use it to:\n\tInstall the latest stable version: n stable\n\tInstall the latest release: n latest", "date": "Apr 30 2020", "vote": 21, "tags": ["javascript", "nodejs"], "posted_by": "D@RK$T@R", "source_name": null, "source_url": null},
{"title": "node updaten", "code": "npm cache clean -f\nnpm install -g n\nn stable", "date": "Oct 15 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Dead Deer", "source_name": null, "source_url": null},
{"title": "update nodejs version", "code": "npm cache clean -f", "date": "Jan 26 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bad Bat", "source_name": "phoenixnap.com", "source_url": "https://phoenixnap.com/kb/update-node-js-version"},
{"title": "node ubutun", "code": "sudo apt-get update\nsudo apt-get install nodejs npm", "date": "Dec 23 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Elegant Elk", "source_name": "doc.ubuntu-fr.org", "source_url": "https://doc.ubuntu-fr.org/nodejs"},
{"title": "node ubutun", "code": "wget -qO- https://deb.nodesource.com/setup_14.x | sudo -E bash -\nsudo apt install -y nodejs", "date": "Dec 23 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Elegant Elk", "source_name": "doc.ubuntu-fr.org", "source_url": "https://doc.ubuntu-fr.org/nodejs"},
{"title": "node ubutun", "code": "sudo apt-get install curl ", "date": "Dec 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Elegant Elk", "source_name": "doc.ubuntu-fr.org", "source_url": "https://doc.ubuntu-fr.org/nodejs"},
{"title": "node ubutun", "code": "sudo curl -o /usr/local/bin/n https://raw.githubusercontent.com/visionmedia/n/master/bin/n", "date": "Dec 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Elegant Elk", "source_name": "doc.ubuntu-fr.org", "source_url": "https://doc.ubuntu-fr.org/nodejs"},
{"title": "node ubutun", "code": "sudo chmod +x /usr/local/bin/n", "date": "Dec 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Elegant Elk", "source_name": "doc.ubuntu-fr.org", "source_url": "https://doc.ubuntu-fr.org/nodejs"},
{"title": "node ubutun", "code": "sudo n stable", "date": "Dec 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Elegant Elk", "source_name": "doc.ubuntu-fr.org", "source_url": "https://doc.ubuntu-fr.org/nodejs"},
{"title": "node telegram bot api", "code": "const TelegramBot = require('node-telegram-bot-api');\n\n// replace the value below with the Telegram token you receive from @BotFather\nconst token = 'YOUR_TELEGRAM_BOT_TOKEN';\n\n// Create a bot that uses 'polling' to fetch new updates\nconst bot = new TelegramBot(token, {polling: true});\n\n// Matches \"/echo [whatever]\"\nbot.onText(/\\/echo (.+)/, (msg, match) => {\n  // 'msg' is the received Message from Telegram\n  // 'match' is the result of executing the regexp above on the text content\n  // of the message\n\n  const chatId = msg.chat.id;\n  const resp = match[1]; // the captured \"whatever\"\n\n  // send back the matched \"whatever\" to the chat\n  bot.sendMessage(chatId, resp);\n});\n\n// Listen for any kind of message. There are different kinds of\n// messages.\nbot.on('message', (msg) => {\n  const chatId = msg.chat.id;\n\n  // send a message to the chat acknowledging receipt of their message\n  bot.sendMessage(chatId, 'Received your message');\n});", "date": "Feb 18 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Long Ladybird", "source_name": "github.com", "source_url": "https://github.com/yagop/node-telegram-bot-api"},
{"title": "javascript parse json", "code": "var jsonPerson = '{\"first_name\":\"billy\", \"age\":23}';\r\nvar personObject = JSON.parse(jsonPerson); //parse json string into JS object", "date": "Jul 23 2019", "vote": 62, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "node string to chars with spaces in between", "code": "let str = 'hello'\nstr.split('').join(' '); // \"h e l l o\"", "date": "Jan 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Smoggy Stag", "source_name": null, "source_url": null},
{"title": "node test unit", "code": "var assert = require('assert');\ndescribe('Array', function() {\n  describe('#indexOf()', function() {\n    it('should return -1 when the value is not present', function() {\n      assert.equal([1, 2, 3].indexOf(4), -1);\n    });\n  });\n});\n", "date": "May 27 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Doubtful Donkey", "source_name": "mochajs.org", "source_url": "https://mochajs.org/"},
{"title": "node string to json", "code": "const json = '{\"result\":true, \"count\":42}';\nconst obj = JSON.parse(json);", "date": "Apr 08 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Annoyed Antelope", "source_name": null, "source_url": null},
{"title": "json parse returns object", "code": "    var str = '[{\"UserName\":\"xxx\",\"Rolename\":\"yyy\"}]'; // your response in a string\n    var parsed = JSON.parse(str); // an *array* that contains the user\n    var user = parsed[0];         // a simple user\n    console.log(user.UserName);   // you'll get xxx\n    console.log(user.Rolename);   // you'll get yyy", "date": "May 27 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Homely Hamster", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/47737093/json-parse-returning-object-object-instead-of-value"},
{"title": "node tls reject unauthorized", "code": "process.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"] = 0;", "date": "Feb 29 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Misty Markhor", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/10888610/ignore-invalid-self-signed-ssl-certificate-in-node-js-with-https-request"},
{"title": "node to viewport godot", "code": "if node.get_class() == \"Node\":\n", "date": "Oct 10 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Yaroslav", "source_name": "godotengine.org", "source_url": "https://godotengine.org/qa/26945/how-do-i-check-a-nodes-type"},
{"title": "node sudo nvm", "code": "n=$(which node); \\\nn=${n%/bin/node}; \\\nchmod -R 755 $n/bin/*; \\\nsudo cp -r $n/{bin,lib,share} /usr/local", "date": "Sep 07 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Lonely Lark", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/21215059/cant-use-nvm-from-root-or-sudo"},
{"title": "node stdin read char by char", "code": "const stdin = process.stdin;\nif (!stdin.isTTY) {\n  console.log('Error: TTY is not available. (Don\\'t start me with nodemon.)');\n  process.exit(1);\n}\nstdin.setRawMode(true);\nstdin.setEncoding('utf8');\nstdin.resume();\n\nstdin.on('data', (key) => {\n  if (key === '\\u0003') {\n    process.exit();\n  } else if (key === '\\b') {\n    process.stdout.write('\\b \\b');\n  } else if (key === '\\r') {\n    process.stdout.write('\\r\\n');\n  } else {\n    process.stdout.write(key);\n  }\n});", "date": "Aug 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "node start is too slow windows 10", "code": "\"%ProgramFiles(x86)%\\Symantec\\Symantec Endpoint Protection\\smc.exe\" -stop\n", "date": "Feb 16 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "RvDev", "source_name": "superuser.com", "source_url": "https://superuser.com/questions/1332557/many-processes-such-as-git-and-node-are-running-10x-too-slow-on-windows-10-but"},
{"title": "node spawn", "code": "const { spawn } = require('child_process');\nconst ls = spawn('ls', ['-lh', '/usr']);\n\nls.stdout.on('data', (data) => {\n  console.log(`stdout: ${data}`);\n});\n\nls.stderr.on('data', (data) => {\n  console.error(`stderr: ${data}`);\n});\n\nls.on('close', (code) => {\n  console.log(`child process exited with code ${code}`);\n});\n", "date": "Jul 10 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "baruchiro", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/child_process.html"},
{"title": "how to return when child process is complete in node js", "code": "var child = require('child_process').exec('python celulas.py')\nchild.stdout.pipe(process.stdout)\nchild.on('exit', function() {\n  process.exit()\n})", "date": "Jun 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Misty Manatee", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/22337446/how-to-wait-for-a-child-process-to-finish-in-node-js"},
{"title": "how to return when child process is complete in node js", "code": "var execSync = require('exec-sync');\n\nvar user = execSync('python celulas.py');", "date": "Jun 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Misty Manatee", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/22337446/how-to-wait-for-a-child-process-to-finish-in-node-js"},
{"title": "node sleep", "code": "// one liner\nawait new Promise(resolve => setTimeout(resolve, 5000));\n\n// or re-usable `sleep` function:\nasync function init() {\n  console.log(1);\n  await sleep(1000);\n  console.log(2);\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}", "date": "Mar 31 2020", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "just-saved-you-a-stackoverflow-visit", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/14249506/how-can-i-wait-in-node-js-javascript-l-need-to-pause-for-a-period-of-time"},
{"title": "nodejs promise sleep", "code": "await new Promise(r => setTimeout(r, 2000));", "date": "May 10 2020", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Tame Tortoise", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/951021/what-is-the-javascript-version-of-sleep"},
{"title": "sleep in nodejs?", "code": "await sleep(1000)\nfunction sleep(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n} ", "date": "Jul 18 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Outstanding Oystercatcher", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/14249506/how-can-i-wait-in-node-js-javascript-l-need-to-pause-for-a-period-of-time"},
{"title": "js socket.emit", "code": "const socket = io('ws://localhost:3000');\nsocket.on('connect', () => {  \n  // either with send()  \n  socket.send('Hello!');\n  // or with emit() and custom event names  \n  socket.emit('salutations', 'Hello!', { 'mr': 'john' }, Uint8Array.from([1, 2, 3, 4]));});\n// handle the event sent with socket.send()\nsocket.on('message', data => {\n  console.log(data);\n});\n// handle the event sent with socket.emit()\nsocket.on('greetings', (elem1, elem2, elem3) => {\n  console.log(elem1, elem2, elem3);\n});", "date": "Sep 21 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Hilarious Hoopoe", "source_name": "socket.io", "source_url": "https://socket.io/docs/"},
{"title": "node socket.io send", "code": "io.on('connect', onConnect);\n\nfunction onConnect(socket){\n\n  // sending to the client\n  socket.emit('hello', 'can you hear me?', 1, 2, 'abc');\n\n  // sending to all clients except sender\n  socket.broadcast.emit('broadcast', 'hello friends!');\n\n  // sending to all clients in 'game' room except sender\n  socket.to('game').emit('nice game', \"let's play a game\");\n\n  // sending to all clients in 'game1' and/or in 'game2' room, except sender\n  socket.to('game1').to('game2').emit('nice game', \"let's play a game (too)\");\n\n  // sending to all clients in 'game' room, including sender\n  io.in('game').emit('big-announcement', 'the game will start soon');\n\n  // sending to all clients in namespace 'myNamespace', including sender\n  io.of('myNamespace').emit('bigger-announcement', 'the tournament will start soon');\n\n  // sending to a specific room in a specific namespace, including sender\n  io.of('myNamespace').to('room').emit('event', 'message');\n\n  // sending to individual socketid (private message)\n  io.to(`${socketId}`).emit('hey', 'I just met you');\n\n  // WARNING: `socket.to(socket.id).emit()` will NOT work, as it will send to everyone in the room\n  // named `socket.id` but the sender. Please use the classic `socket.emit()` instead.\n\n  // sending with acknowledgement\n  socket.emit('question', 'do you think so?', function (answer) {});\n\n  // sending without compression\n  socket.compress(false).emit('uncompressed', \"that's rough\");\n\n  // sending a message that might be dropped if the client is not ready to receive messages\n  socket.volatile.emit('maybe', 'do you really need it?');\n\n  // specifying whether the data to send has binary data\n  socket.binary(false).emit('what', 'I have no binaries!');\n\n  // sending to all clients on this node (when using multiple nodes)\n  io.local.emit('hi', 'my lovely babies');\n\n  // sending to all connected clients\n  io.emit('an event sent to all connected clients');\n\n};", "date": "Mar 30 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "just-saved-you-a-stackoverflow-visit", "source_name": null, "source_url": null},
{"title": "node silent print to themral", "code": "$ npm install node-thermal-printer\n", "date": "Oct 13 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Naughty Narwhal", "source_name": "openbase.io", "source_url": "https://openbase.io/js/node-thermal-printer"},
{"title": "how to create a server in node js", "code": "// code by VARSHITH REDDY SATTI\n// to create a server in node.js you should.\nvar http = require('http');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(\"write html code to display you test\")\n  res.end();\n}).listen(8080);\n// save this as httpServer.js\n// run this by typing node httpServer.js in the command line\n// to acess your server got to http://localhost:8080", "date": "Dec 28 2019", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Crown Of Thorns Starfish", "source_name": null, "source_url": null},
{"title": "node scheduler rules", "code": "const job = schedule.scheduleJob('0 1 * * *', function(fireDate){\n  console.log('This job was supposed to run at ' + fireDate + ', but actually ran at ' + new Date());\n});", "date": "May 11 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "RvDev", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-schedule"},
{"title": "node schedule every minute", "code": "var rule = new schedule.RecurrenceRule();\n\nrule.minute = new schedule.Range(0, 59, 5);\n\nschedule.scheduleJob(rule, function(){\n    console.log(rule);\n    console.log('Today is recognized by Rebecca Black!---------------------------');\n});\n", "date": "May 12 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Ham-Solo", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/20897528/schedule-a-job-for-every-5-minutes"},
{"title": "js filter array of objects by value", "code": "var heroes = [\n\t{name: \u201cBatman\u201d, franchise: \u201cDC\u201d},\n\t{name: \u201cIronman\u201d, franchise: \u201cMarvel\u201d},\n\t{name: \u201cThor\u201d, franchise: \u201cMarvel\u201d},\n\t{name: \u201cSuperman\u201d, franchise: \u201cDC\u201d}\n];\n\nvar marvelHeroes =  heroes.filter(function(hero) {\n\treturn hero.franchise == \u201cMarvel\u201d;\n});\n\n// [ {name: \u201cIronman\u201d, franchise: \u201cMarvel\u201d}, {name: \u201cThor\u201d, franchise: \u201cMarvel\u201d} ]", "date": "May 31 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Vivacious Vole", "source_name": "alligator.io", "source_url": "https://alligator.io/js/filter-array-method/"},
{"title": "node search filter array of objects", "code": "sadfsadf", "date": "Mar 13 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Disgusted Deer", "source_name": null, "source_url": null},
{"title": "node serialport isopen", "code": "node serialport isopen\n", "date": "Mar 25 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Relieved Reindeer", "source_name": null, "source_url": null},
{"title": "node save wav base64", "code": "fs.writeFileSync('file.ogg', Buffer.from(base64data.replace('data:audio/ogg; codecs=opus;base64,', ''), 'base64'));\n", "date": "Oct 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Aggressive Antelope", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/48291593/convert-base64-audio-to-file"},
{"title": "node send post request", "code": "const axios = require('axios')\n\naxios\n  .post('https://whatever.com/todos', {\n    todo: 'Buy the milk'\n  })\n  .then(res => {\n    console.log(`statusCode: ${res.statusCode}`)\n    console.log(res)\n  })\n  .catch(error => {\n    console.error(error)\n  })", "date": "Nov 19 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "GutoTrosla", "source_name": "nodejs.dev", "source_url": "https://nodejs.dev/learn/make-an-http-post-request-using-nodejs"},
{"title": "node serialport isopen", "code": "node serialport isopen\n", "date": "Mar 25 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Relieved Reindeer", "source_name": null, "source_url": null},
{"title": "node send post request", "code": "const axios = require('axios')\n\naxios\n  .post('https://whatever.com/todos', {\n    todo: 'Buy the milk'\n  })\n  .then(res => {\n    console.log(`statusCode: ${res.statusCode}`)\n    console.log(res)\n  })\n  .catch(error => {\n    console.error(error)\n  })", "date": "Nov 19 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "GutoTrosla", "source_name": "nodejs.dev", "source_url": "https://nodejs.dev/learn/make-an-http-post-request-using-nodejs"},
{"title": "Node Sass could not find a binding for your current environment: Linux 64-bit with Node.js 10.x", "code": "npm rebuild node-sass\n", "date": "Jan 14 2021", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "devops unicorn", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/37986800/node-sass-couldnt-find-a-binding-for-your-current-environment"},
{"title": "Node Sass could not find a binding for your current environment", "code": "This usually happens because your environment has changed since running `npm install`.\nRun `npm rebuild node-sass` to download the binding for your current environment.", "date": "May 18 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Evergreen Tomato", "source_name": null, "source_url": null},
{"title": "sendfile express syntax", "code": "app.get('/', function(req, res){\n  res.sendFile('index.html');\n}); \n", "date": "Mar 20 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "www.techiediaries.com", "source_url": "https://www.techiediaries.com/express-sendfile-serve-static-files/"},
{"title": "node send file", "code": "var http = require('http'),\n    fileSystem = require('fs'),\n    path = require('path');\n\nhttp.createServer(function(request, response) {\n    var filePath = path.join(__dirname, 'myfile.mp3');\n    var stat = fileSystem.statSync(filePath);\n\n    response.writeHead(200, {\n        'Content-Type': 'audio/mpeg',\n        'Content-Length': stat.size\n    });\n\n    var readStream = fileSystem.createReadStream(filePath);\n    // We replaced all the event handlers with a simple call to readStream.pipe()\n    readStream.pipe(response);\n})\n.listen(2000);", "date": "Jun 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Combative Cowfish", "source_name": null, "source_url": null},
{"title": "Error: Node Sass version 5.0.0 is incompatible with ^4.0.0.", "code": "with npm =>\n1.npm uninstall node-sass\n2.npm install node-sass@4.14.1\nwith yarn => \n1.yarn remove node-sass\n2.yarn remove node-sass@4.14.1", "date": "Nov 17 2020", "vote": 23, "tags": ["javascript", "nodejs"], "posted_by": "Mr J", "source_name": null, "source_url": null},
{"title": "node sass version 5.0.0 is incompatible with ^4.0.0", "code": "with npm =>\n1.npm uninstall node-sass\n2.npm install node-sass@4.14.1\nwith yarn => \n1.yarn remove node-sass\n2.yarn add node-sass@4.14.1", "date": "Dec 20 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Dangerous Dog", "source_name": null, "source_url": null},
{"title": "Error: Node Sass version 5.0.0 is incompatible with ^4.0.0.", "code": "with npm =>\n1. npm uninstall node-sass\n2. npm install node-sass@4.14.1\nwith yarn => \n1. yarn remove node-sass\n2. yarn add node-sass@4.14.1\n\n// ^ Update to MR J's post", "date": "Nov 28 2020", "vote": 10, "tags": ["javascript", "nodejs"], "posted_by": "Cheerful Capuchin", "source_name": null, "source_url": null},
{"title": "Node Sass version 5.0.0 is incompatible with ^4.0.0.", "code": "    npm uninstall node-sass\n    npm install node-sass@4.14.1\n\nOr, if using yarn (default in newer CRA versions)\n\n    yarn remove node-sass\n    yarn add node-sass@4.14.1", "date": "Jan 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Surf Kid Bonanza", "source_name": null, "source_url": null},
{"title": "Error: Node Sass version 5.0.0 is incompatible with ^4.0", "code": "npm uninstall node-sass\nnpm install node-sass@4.14.1\n\nOr, if using yarn (default in newer CRA versions)\n\nyarn remove node-sass\nyarn add node-sass@4.14.1", "date": "Jan 14 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Dayanaohhnana", "source_name": null, "source_url": null},
{"title": "Node Sass version 5.0.0 is incompatible with ^4.0.0.", "code": "npm uninstall node-sass\nnpm install node-sass@4.14.1", "date": "Jan 31 2021", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Grieving Gharial", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/64625050/error-node-sass-version-5-0-0-is-incompatible-with-4-0-0"},
{"title": "Error: Node Sass version 5.0.0 is incompatible with ^4.0.0.", "code": "with npm =>\n1.npm uninstall node-sass\n2.npm install node-sass@4.14.1\nwith yarn => \n1.yarn remove node-sass\n2.yarn remove node-sass@4.14.1", "date": "Nov 17 2020", "vote": 23, "tags": ["javascript", "nodejs"], "posted_by": "Mr J", "source_name": null, "source_url": null},
{"title": "node sass version 5.0.0 is incompatible with ^4.0.0", "code": "with npm =>\n1.npm uninstall node-sass\n2.npm install node-sass@4.14.1\nwith yarn => \n1.yarn remove node-sass\n2.yarn add node-sass@4.14.1", "date": "Dec 20 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Dangerous Dog", "source_name": null, "source_url": null},
{"title": "Error: Node Sass version 5.0.0 is incompatible with ^4.0.0.", "code": "with npm =>\n1. npm uninstall node-sass\n2. npm install node-sass@4.14.1\nwith yarn => \n1. yarn remove node-sass\n2. yarn add node-sass@4.14.1\n\n// ^ Update to MR J's post", "date": "Nov 28 2020", "vote": 10, "tags": ["javascript", "nodejs"], "posted_by": "Cheerful Capuchin", "source_name": null, "source_url": null},
{"title": "Node Sass version 5.0.0 is incompatible with ^4.0.0.", "code": "    npm uninstall node-sass\n    npm install node-sass@4.14.1\n\nOr, if using yarn (default in newer CRA versions)\n\n    yarn remove node-sass\n    yarn add node-sass@4.14.1", "date": "Jan 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Surf Kid Bonanza", "source_name": null, "source_url": null},
{"title": "Error: Node Sass version 5.0.0 is incompatible with ^4.0", "code": "npm uninstall node-sass\nnpm install node-sass@4.14.1\n\nOr, if using yarn (default in newer CRA versions)\n\nyarn remove node-sass\nyarn add node-sass@4.14.1", "date": "Jan 14 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Dayanaohhnana", "source_name": null, "source_url": null},
{"title": "Error: Node Sass version 5.0.0 is incompatible with ^4.0.0.", "code": "Solution\n1 Uninstall node-sass\nnpm uninstall node-sass\n\n2  use sass by:\nnpm install -g sass\nnpm install --save-dev sass\n", "date": "Jan 17 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Foolish Flatworm", "source_name": null, "source_url": null},
{"title": "node sass does not yet support your current environment windows 64-bit angular", "code": "npm rebuild node-sass", "date": "May 01 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Mysterious Monkey", "source_name": "medium.com", "source_url": "https://medium.com/@proustibat/how-to-fix-error-node-sass-does-not-yet-support-your-current-environment-os-x-64-bit-with-c1b3298e4af0"},
{"title": "node run parameters", "code": "var args = process.argv.slice(2);", "date": "Jun 23 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "GutoTrosla", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/4351521/how-do-i-pass-command-line-arguments-to-a-node-js-program"},
{"title": "Node Sass could not find a binding for your current environment: Linux 64-bit with Node.js 10.x", "code": "npm rebuild node-sass\n", "date": "Jan 14 2021", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "devops unicorn", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/37986800/node-sass-couldnt-find-a-binding-for-your-current-environment"},
{"title": "Node Sass could not find a binding for your current environment", "code": "This usually happens because your environment has changed since running `npm install`.\nRun `npm rebuild node-sass` to download the binding for your current environment.", "date": "May 18 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Evergreen Tomato", "source_name": null, "source_url": null},
{"title": "node sass version react", "code": "yarn add node-sass@4.14.1", "date": "Dec 09 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Yoyo Bu", "source_name": null, "source_url": null},
{"title": "node sass", "code": "npm\u00a0install\u00a0node-sass", "date": "Dec 04 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Alive Alligator", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-sass"},
{"title": "node-sass run", "code": "npm install node-sass\nnode-sass ./styles.scss -o ./styles.css", "date": "Dec 20 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "GutoTrosla", "source_name": null, "source_url": null},
{"title": "node sass", "code": "npm\u00a0install\u00a0node-sass", "date": "Apr 19 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Nice Narwhal", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-sass"},
{"title": "node-sass", "code": "var sass = require('sass');\n\nsass.render({\n  file: scss_filename\n}, function(err, result) {\n  /* ... */\n});\n\n// OR\n\nvar result = sass.renderSync({\n  file: scss_filename\n});\n", "date": "Mar 12 2021", "vote": 0, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Clear Cottonmouth", "source_name": "sass-lang.com", "source_url": "https://sass-lang.com/dart-sass"},
{"title": "scss npm", "code": "var sass = require('node-sass');\nsass.render({\n  file: scss_filename,\n  [, options..]\n}, function(err, result) { /*...*/ });\n// OR\nvar result = sass.renderSync({\n  data: scss_content\n  [, options..]\n});", "date": "Nov 23 2020", "vote": 0, "tags": ["javascript", "nodejs", "css"], "posted_by": "Enthusiastic Elk", "source_name": "github.com", "source_url": "https://github.com/sass/node-sass"},
{"title": "Node require module", "code": "// Use require.main.require to get a module from the root folder.\nconst Globals = require.main.require(\"./globals.js\");\nconst YourCustomModule = require(\"./yourmodule.js\");\n\nconsole.log(YourCustomModule.message);\n\n// --- yourmodule.js ---\nmodule.exports = {\n\tmessage: \"Hello World!\",\n\totherData: \"Hello Grepper!\"\n};", "date": "May 25 2020", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Nathan uses Linux", "source_name": null, "source_url": null},
{"title": "npm can i use my modules without specifying the path", "code": "npm install --save ../path/to/mymodule\n", "date": "Oct 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "florinrelea", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/15806241/how-to-specify-local-modules-as-npm-package-dependencies"},
{"title": "node require fs not found", "code": "module.exports = {\n  webpack: (config, { isServer }) => {\n    // Fixes npm packages that depend on `fs` module\n    if (!isServer) {\n      config.node = {\n        fs: 'empty'\n      }\n    }\n\n    return config\n  }\n}", "date": "Jul 29 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Relieved Rook", "source_name": "github.com", "source_url": "https://github.com/vercel/next.js/issues/7755"},
{"title": "node red reverse proxy for ui to root", "code": "Server {\n  Servername example.com\n  \n  location / {\n  ProxyPass example.com:1880/ui\n  }\n}", "date": "Jun 18 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "TinyHacks", "source_name": null, "source_url": null},
{"title": "node red push to array", "code": "var array = flow.get('array') || [];\narray.push(msg.payload);\nflow.set(\"array\", array);\nreturn msg;", "date": "Feb 25 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "feddynventor", "source_name": null, "source_url": null},
{"title": "node red flow.set", "code": "flow.set(\u201cfred\u201d,1);", "date": "Mar 10 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Energetic Eel", "source_name": null, "source_url": null},
{"title": "node red http post request data", "code": "msg.headers = {};\nmsg.headers={ \n    'Authorization':  'whatever',\n    'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nmsg.payload = {};\nmsg.payload={ \n    'key': 'whatever_value'\n};\n\nreturn msg", "date": "Mar 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "feddynventor", "source_name": null, "source_url": null},
{"title": "node red debug to console", "code": "//NODE-RED Show message in debug window\n\nnode.warn(\"msg\"); \nnode.error(\"msg\");", "date": "Apr 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Reinosoft", "source_name": null, "source_url": null},
{"title": "node readFileSync json", "code": "const fs = require('fs');\n\nlet rawdata = fs.readFileSync('student.json');\nlet student = JSON.parse(rawdata);\nconsole.log(student);\n", "date": "Feb 25 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Ham-Solo", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-json-files-with-node-js/"},
{"title": "node red admin password setting", "code": "httpNodeAuth: {user:\"fred\",pass:\"$2a$04$3gkGX/Q4VZ//F37kWvSU9eE9EM1WO2rdWk1oj/kfXIbeBON5eA56S\"},", "date": "Oct 16 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Thankful Toad", "source_name": "www.steves-internet-guide.com", "source_url": "http://www.steves-internet-guide.com/securing-node-red-ssl/"},
{"title": "read file node", "code": "// load fs\nconst fs = require(\"fs\");\n// read the file\nconst content = fs.readFileSync(\"./my_file.txt\");\n// print it\nconsole.log(content.toString());", "date": "Oct 11 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "ali ahmed", "source_name": null, "source_url": null},
{"title": "fs.readfile", "code": "fs.readFile('filename', function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    var content = data;\n  \n    console.log(content);  \n   \n});", "date": "Apr 21 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "If-dev", "source_name": null, "source_url": null},
{"title": "node read file sync", "code": "// macOS, Linux, and Windows\nfs.readFileSync('<directory>');\n// => [Error: EISDIR: illegal operation on a directory, read <directory>]\n\n//  FreeBSD\nfs.readFileSync('<directory>'); // => <data>", "date": "Jun 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Grotesque Gharial", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/fs.html#fs_fs_readfilesync_path_options"},
{"title": "node read file stream", "code": "const fs = require('fs');\nconst server = require('http').createServer();\n\nserver.on('request', (req, res) => {\n  const src = fs.createReadStream('./big.file');\n  src.pipe(res);\n});\n\nserver.listen(8000);", "date": "Mar 20 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Eager Echidna", "source_name": "www.freecodecamp.org", "source_url": "https://www.freecodecamp.org/news/node-js-streams-everything-you-need-to-know-c9141306be93/"},
{"title": "node read file line", "code": "const fs = require('fs');\nconst readline = require('readline');\n\nasync function processLineByLine() {\n  const fileStream = fs.createReadStream('input.txt');\n\n  const rl = readline.createInterface({\n    input: fileStream,\n    crlfDelay: Infinity\n  });\n  // Note: we use the crlfDelay option to recognize all instances of CR LF\n  // ('\\r\\n') in input.txt as a single line break.\n\n  for await (const line of rl) {\n    // Each line in input.txt will be successively available here as `line`.\n    console.log(`Line from file: ${line}`);\n  }\n}\n\nprocessLineByLine();\n", "date": "May 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Strange Starling", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/6156501/read-a-file-one-line-at-a-time-in-node-js"},
{"title": "install sass npm", "code": "npm\u00a0install\u00a0node-sass", "date": "Jul 19 2020", "vote": 3, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Talented Tarsier", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-sass"},
{"title": "node sass version react", "code": "yarn add node-sass@4.14.1", "date": "Dec 09 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Yoyo Bu", "source_name": null, "source_url": null},
{"title": "scss npm", "code": "var sass = require('node-sass');\nsass.render({\n  file: scss_filename,\n  [, options..]\n}, function(err, result) { /*...*/ });\n// OR\nvar result = sass.renderSync({\n  data: scss_content\n  [, options..]\n});", "date": "Nov 23 2020", "vote": 0, "tags": ["javascript", "nodejs", "css"], "posted_by": "Enthusiastic Elk", "source_name": "github.com", "source_url": "https://github.com/sass/node-sass"},
{"title": "read file node", "code": "// load fs\nconst fs = require(\"fs\");\n// read the file\nconst content = fs.readFileSync(\"./my_file.txt\");\n// print it\nconsole.log(content.toString());", "date": "Oct 11 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "ali ahmed", "source_name": null, "source_url": null},
{"title": "node open file", "code": "const fs = require(\"fs\");\n\n// __dirname means relative to script. Use \"./data.txt\" if you want it relative to execution path.\nfs.readFile(__dirname + \"/data.txt\", (error, data) => {\n    if(error) {\n        throw error;\n    }\n    console.log(data.toString());\n});", "date": "May 25 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Nathan uses Linux", "source_name": null, "source_url": null},
{"title": "read a file nodejs", "code": "const fs = require('fs');\n\nfs.readFile('my-file.txt', 'utf8', function(err, data) {\n    if (err) throw err;\n    console.log(data);\n});", "date": "Apr 17 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Yucky Yacare", "source_name": null, "source_url": null},
{"title": "read file in nodejs using fs", "code": "let myFile = \"./myText.txt\";\nconst fs = require(\"fs\");\n\t\t\napp.all('/test', async (req, res) => {\n\ttry {\n\t\tconst readData = fs.readFileSync(myFile, 'utf8');\n\t\tif (readData) {\n\t\t\tres.send(readData)\n\t\t}\n\t} catch (error) {\n\t\tres.send(\"something is wrong\", error)\n\t}\n})", "date": "Jan 07 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "abhi", "source_name": null, "source_url": null},
{"title": "nodejs open file", "code": "fs = require('fs')\nfs.readFile('/etc/hosts', 'utf8', function (err,data) {\n  if (err) {\n    return console.log(err);\n  }\n  console.log(data);\n});", "date": "Dec 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Gorgeous Goshawk", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/file-system/how-to-read-files-in-nodejs/"},
{"title": "node run shell command", "code": "// You can use 'exec' this way\n\nconst { exec } = require(\"child_process\");\n\nexec(\"ls -la\", (error, stdout, stderr) => {\n    if (error) {\n        console.log(`error: ${error.message}`);\n        return;\n    }\n    if (stderr) {\n        console.log(`stderr: ${stderr}`);\n        return;\n    }\n    console.log(`stdout: ${stdout}`);\n});\n", "date": "Apr 20 2020", "vote": 5, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Kaotik", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/executing-shell-commands-with-node-js/"},
{"title": "node execute shell commands", "code": "const { exec } = require(\"child_process\");\nexec(\"cat index.js\", (error, data, getter) => {\n\tif(error){\n\t\tconsole.log(\"error\",error.message);\n\t\treturn;\n\t}\n\tif(getter){\n\t\tconsole.log(\"data\",data);\n\t\treturn;\n\t}\n\tconsole.log(\"data\",data);\n\n});\n", "date": "Apr 11 2020", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "If-dev", "source_name": null, "source_url": null},
{"title": "execute terminal command nodejs", "code": "// You can use 'exec' this way\n// LINUX EXAMPLE\n\nconst { exec } = require(\"child_process\");\n\nexec(\"ls -la\", (error, stdout, stderr) => {\n    if (error) {\n        console.log(`error: ${error.message}`);\n        return;\n    }\n    if (stderr) {\n        console.log(`stderr: ${stderr}`);\n        return;\n    }\n    console.log(`stdout: ${stdout}`);\n});", "date": "Oct 12 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Lucky Lapwing", "source_name": "www.codegrepper.com", "source_url": "https://www.codegrepper.com/code-examples/shell/electron+js+run+bash+command+from+inside"},
{"title": "node run command", "code": "// Run a command asynchronously\nconst { spawn } = require('child_process');\nconst dir = spawn('cmd', ['/c', 'dir']);\n\ndir.stdout.on('data', data => console.log(`Stdout: ${data}`));\ndir.stderr.on('data', data => console.log(`Stderr: ${data}`));\ndir.on('close', code => console.log(`Exit code: ${code}`));\n\n// Run a command synchronously\nconst { spawnSync } = require( 'child_process' );\nconst dir = spawnSync('cmd', ['/c', 'dir']);\n\nconsole.log(`Stdout: ${dir.stdout.toString()}`);\nconsole.log(`Stderr: ${dir.stderr.toString()}`);", "date": "Aug 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "node promisify without err", "code": "function promisify(func, callbackPos) {\n  return (...args) => {\n    return new Promise((resolve) => {\n      const cb = (...args) => {\n        resolve(args);\n      };\n      args.splice(callbackPos ? callbackPos : args.length, 0, cb);\n      func(...args);\n    });\n  };\n};", "date": "Aug 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "node promisify without err", "code": "function promisify(func, callbackPos) {\n  return (...args) => {\n    return new Promise((resolve) => {\n      const cb = (...args) => {\n        resolve(args);\n      };\n      args.splice(callbackPos ? callbackPos : args.length, 0, cb);\n      func(...args);\n    });\n  };\n};\n\n// Example:\n\n// Import readline\nconst readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\n// Promisify rl.question\nconst asyncQuestion = promisify(rl.question.bind(rl));\n\n(async () => {\n  // Call asyncQuestion (Get some input from the user)\n  // Here we get all params back in an array\n  const input = (await asyncQuestion('Type something: '))[0];\n  console.log('You typed: ' + input);\n  \n  // We can also use this syntax\n  [someOtherInput] = await asyncQuestion('Another input: ');\n  console.log('You typed: ' + someOtherInput);\n})();", "date": "Aug 18 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "node print stdin", "code": "const process = require(\"process\")\nprocess.stdin.on('data', data => {\n    console.log(data.toString())\n})\n", "date": "May 10 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fine Falcon", "source_name": null, "source_url": null},
{"title": "javascript generate random string", "code": "// Generate a random alphanumerical string of length 11 ( change substring parameter for other length)\nMath.random().toString(36).substring(2);", "date": "Jul 16 2020", "vote": 29, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "javascript get random string", "code": "function getRandomString(length) {\r\n    var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var result = '';\r\n    for ( var i = 0; i < length; i++ ) {\r\n        result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\r\n    }\r\n    return result;\r\n}\r\n\r\n//usage: getRandomString(20); // pass desired length of random string", "date": "Jul 23 2019", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "js random string", "code": "function randomString(length) {\n\t\tvar result           = '';\n\t\tvar characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~!@#$%^&*()_+=-';\n\t\tvar charactersLength = characters.length;\n\t\tfor ( var i = 0; i < length; i++ ) {\n\t\t   result += characters.charAt(Math.floor(Math.random() * charactersLength));\n\t\t}\n\t\treturn result;\n\t }\nrandomString(4);", "date": "Oct 27 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Dizzy Dove", "source_name": null, "source_url": null},
{"title": "random string js", "code": "const string_length = 10\n[...Array(string_length)].map(i=>(~~(Math.random()*36)).toString(36)).join('')", "date": "Sep 04 2020", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Yoyo Bu", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript"},
{"title": "how to generate random string in javascript", "code": " Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);", "date": "Jun 13 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Frail Flatworm", "source_name": null, "source_url": null},
{"title": "node random string", "code": "var crypto = require(\"crypto\");\nvar id = crypto.randomBytes(20).toString('hex');\n\n// \"bb5dc8842ca31d4603d6aa11448d1654\"", "date": "Jul 22 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Proud Platypus", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript"},
{"title": "node pg array in", "code": "client.query(\n\t\"SELECT * FROM stooges WHERE name = ANY ($1)\", [\n\t\t['larry', 'curly', 'moe']\n\t]\n);", "date": "Jun 02 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Graceful Gull", "source_name": null, "source_url": null},
{"title": "node parameter add memory", "code": "node --max-old-space-size=8192 server.js  \n", "date": "Mar 24 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Eager Echidna", "source_name": "futurestud.io", "source_url": "https://futurestud.io/tutorials/node-js-increase-the-memory-limit-for-your-process"},
{"title": "node package.json type module", "code": "node --experimental-modules app.js", "date": "Jul 29 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Long Lapwing", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/how-to-enable-es-modules-nodejs/"},
{"title": "node node_modules/protractor/bin/webdriver-manager update", "code": "node node_modules/protractor/bin/webdriver-manager update", "date": "Aug 13 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Inquisitive Ibex", "source_name": null, "source_url": null},
{"title": "read file node", "code": "// load fs\nconst fs = require(\"fs\");\n// read the file\nconst content = fs.readFileSync(\"./my_file.txt\");\n// print it\nconsole.log(content.toString());", "date": "Oct 11 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "ali ahmed", "source_name": null, "source_url": null},
{"title": "node open file", "code": "const fs = require(\"fs\");\n\n// __dirname means relative to script. Use \"./data.txt\" if you want it relative to execution path.\nfs.readFile(__dirname + \"/data.txt\", (error, data) => {\n    if(error) {\n        throw error;\n    }\n    console.log(data.toString());\n});", "date": "May 25 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Nathan uses Linux", "source_name": null, "source_url": null},
{"title": "nodejs open file", "code": "fs = require('fs')\nfs.readFile('/etc/hosts', 'utf8', function (err,data) {\n  if (err) {\n    return console.log(err);\n  }\n  console.log(data);\n});", "date": "Dec 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Gorgeous Goshawk", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/file-system/how-to-read-files-in-nodejs/"},
{"title": "node module export multiple functions", "code": "//Inside lib file declare functions\nconst animalName = (name) => {\n\tconsole.log(name)\n}\nconst animalSound = (sound) => {\n\tconsole.log(sound)\n}\n//Export these both as JSON\nmodule.exports = {animalName, animalSound}\n\n//Navigate to file you want to use them and import\nconst animalLib = require('./location_of_file.js')\n\n//To access the function\nanimalLib.animalName(\"zebra\")", "date": "Jul 24 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Modern Marten", "source_name": null, "source_url": null},
{"title": "node mongoose save document", "code": "// Example for a model called Person with two properties, e.g. name, surname\n// Values to be saved\nconst person = { name: Jane, surname: Doe};\n// you can access the _id property from savedPerson variable (savedPerson._id)\nsavedPerson = await new Person(person).save()", "date": "May 19 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Poirot", "source_name": null, "source_url": null},
{"title": "node minimal db example", "code": "var Datastore = require('nedb');\nvar users = new Datastore({ filename: 'users.db', autoload: true });\nvar tweets = new Datastore({ filename: 'tweets.db', autoload: true });\nvar messages = new Datastore({ filename: 'messages.db', autoload: true });\n\nvar scott = {\n    name: 'Scott',\n    twitter: '@ScottWRobinson'\n};\n\nusers.insert(scott, function(err, doc) {\n    console.log('Inserted', doc.name, 'with ID', doc._id);\n});\n", "date": "May 10 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fine Falcon", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/nedb-a-lightweight-javascript-database/"},
{"title": "node.js name of file", "code": "var path = require('path');\nvar scriptName = path.basename(__filename);", "date": "Nov 10 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Lockeness", "source_name": null, "source_url": null},
{"title": "node map has value", "code": "let myMap = new Map();\n\nmyMap.set(\"key1\", \"value1\");\nmyMap.set(\"key2\", \"value2\");\n\nconsole.log(myMap.has(\"key1\")); // true\nconsole.log(myMap.has(\"key2\")); // true\n\nconsole.log(myMap.get(\"key1\")); // value1\nconsole.log(myMap.get(\"key2\")); // value2\n\n// NOTE: DO NOT try to access map values using [].\n// myMap[\"key1\"] = \"value1\";", "date": "Jun 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Nathan uses Linux", "source_name": null, "source_url": null},
{"title": "node mailer office 365", "code": "{ \n    host: 'smtp.office365.com',\n    port: '587',\n    auth: { user: 'xxxx', pass: 'xxxx' },\n    secureConnection: false,\n    tls: { ciphers: 'SSLv3' }\n}", "date": "Oct 19 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Obedient Oryx", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/29812132/error-sending-email-using-nodemailer-via-office365-smtp-meanjs-scaffold/29812364"},
{"title": "node main", "code": "// main.js / main.ts (the filename doesn't matter)\n\nfunction main() {\n  console.log(\"Hello world\");\n}\n\nif (require.main === module) {\n  main();\n}", "date": "Mar 22 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Different Dove", "source_name": null, "source_url": null},
{"title": "node log docker", "code": "No result Found", "date": "Mar 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fragile Fox", "source_name": null, "source_url": null},
{"title": "node log docker", "code": "No result Found", "date": "Mar 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fragile Fox", "source_name": null, "source_url": null},
{"title": "node log docker", "code": "No result Found", "date": "Mar 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fragile Fox", "source_name": null, "source_url": null},
{"title": "node log docker", "code": "No result Found", "date": "Mar 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fragile Fox", "source_name": null, "source_url": null},
{"title": "node log centered", "code": "// Center text horizontally\nfunction logXCentered(s) {\n  console.log(' '.repeat(process.stdout.columns / 2 - s.length / 2) + s);\n}\nlogXCentered('This text is centered horizontally.');\n\n// Center text both, horizontally and vertically\nfunction logCentered(s) {\n  console.log(\n    '\\n'.repeat(process.stdout.rows / 2) +\n      ' '.repeat(process.stdout.columns / 2 - s.length / 2) +\n      s +\n      '\\n'.repeat(process.stdout.rows / 2 - 1)\n  );\n}\nlogCentered('This text is centered.');", "date": "Sep 07 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "node lodash documentation", "code": "$\u00a0npm\u00a0i\u00a0-g\u00a0npm$\u00a0npm\u00a0i\u00a0--save\u00a0lodash", "date": "Oct 20 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Difficult Dolphin", "source_name": "lodash.com", "source_url": "https://lodash.com/"},
{"title": "node load string from file", "code": "var fs = require('fs');\n\nfs.readFile('my-file.txt', 'utf8', function(err, data) {\n    if (err) throw err;\n    console.log(data);\n});\n", "date": "Mar 19 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Eager Echidna", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/read-files-with-node-js/"},
{"title": "node load file", "code": "const fs = require(\"fs\");\n\n// __dirname means relative to script. Use \"./data.txt\" if you want it relative to execution path.\nfs.readFile(__dirname + \"/data.txt\", (error, data) => {\n    if(error) {\n        throw error;\n    }\n    console.log(data.toString());\n});", "date": "May 25 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Nathan uses Linux", "source_name": null, "source_url": null},
{"title": "node list files in directory", "code": "\n//requiring path and fs modules\nconst path = require('path');\nconst fs = require('fs');\n//joining path of directory \nconst directoryPath = path.join(__dirname, 'Documents');\n//passsing directoryPath and callback function\nfs.readdir(directoryPath, function (err, files) {\n    //handling error\n    if (err) {\n        return console.log('Unable to scan directory: ' + err);\n    } \n    //listing all files using forEach\n    files.forEach(function (file) {\n        // Do whatever you want to do with the file\n        console.log(file); \n    });\n});", "date": "Jun 26 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Clever Crane", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/2727167/how-do-you-get-a-list-of-the-names-of-all-files-present-in-a-directory-in-node-j"},
{"title": "node js get files in dir", "code": "const path = require('path');\nconst fs = require('fs');\n\nfs.readdir(\n  path.resolve(__dirname, 'MyFolder'),\n  (err, files) => {\n    if (err) throw err;\n    \n    for (let file of files) {\n      console.log(file);\n    }\n  }\n);", "date": "Sep 07 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "how to get file name in directory node js", "code": "const path = require('path')\n\n//...\n\n//inside the `for` loop\nconst stat = fs.lstatSync(path.join(dir, file))\n", "date": "Oct 16 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Quaint Quail", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/how-to-get-files-names/"},
{"title": "node js write read string to file", "code": "// basic read-write string from-to file with node.js \nvar fs = require('fs');\nvar opath = 'test.txt'; \nvar ostring = 'Hello!'\nfs.writeFileSync(opath, ostring, 'utf8');\nvar istring = fs.readFileSync('test.txt').toString();\nconsole.log(istring);\n\n// with error handling and logging:  \nfs.readFile('test.txt', 'utf8' , (err, data) => {\n    if (err) {\n        console.error(err)\n        return\n    }\n    console.log(data)\n  });\n\n// or fs.readFileSync() or use streams for large files\n// for better memory consumption and execution speed\n// https://nodejs.dev/learn/reading-files-with-nodejs", "date": "Dec 26 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "onjay ernquestfay ", "source_name": null, "source_url": null},
{"title": "node js with express medium", "code": "npm install express --save", "date": "Jul 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Wandering Whale", "source_name": "medium.com", "source_url": "https://medium.com/edureka/expressjs-tutorial-795ad6e65ab3"},
{"title": "nodemon", "code": "npm\u00a0install\u00a0-g\u00a0nodemon", "date": "Feb 17 2020", "vote": 14, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Shiny Shark", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/nodemon"},
{"title": "nodemon a npm run command", "code": "nodemon --exec npm run dev:test", "date": "Apr 17 2020", "vote": 0, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Suspect Camel", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/33879896/how-to-execute-start-script-with-nodemon"},
{"title": "node mon install", "code": "npm install --save-dev nodemon", "date": "Apr 09 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "mithulix", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/nodemon"},
{"title": "node js variable inside string", "code": "var my_name = 'John';\nvar s = `hello ${my_name}, how are you doing`;\nconsole.log(s); // prints hello John, how are you doing", "date": "May 23 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Concerned Chipmunk", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/a/32695337/13575699"},
{"title": "Javascript object to JSON string", "code": "var person={\"first_name\":\"Tony\",\"last_name\":\"Hawk\",\"age\":31};\r\nvar personJSONString=JSON.stringify(person); ", "date": "Jul 23 2019", "vote": 34, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "node json stringify", "code": "let data = {\n  name: \"John Smith\",\n  age: 30,\n  hobbies: [\"Programming\", \"Video Games\"]\n};\n\n// {name:\"John Smith\",age:30,hobbies:[\"Programming\",\"Video Games\"]}\nlet miny = JSON.stringify(data);\n\n// The 4 parameter signifys 4 spaces. You can also use \"\\t\".\n/* {\n *     name: \"John Smith\",\n *     age: 30,\n *     ...\n */\nlet pretty = JSON.stringify(data, null, 4);", "date": "Jun 20 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Nathan uses Linux", "source_name": null, "source_url": null},
{"title": "js string to json", "code": "var obj = JSON.parse(\"{no:'u',my:'sql'}\");//returnes {no:'u',my:'sql'}", "date": "Apr 08 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "If-dev", "source_name": null, "source_url": null},
{"title": "how to use json stringify in javascript", "code": "var Num=[1,2,3,4,5,6]\nconsole.log(\"The Numbers Are \"+JSON.stringify(Num))\n//output= The Number Are [1,2,3,4,5,6]\n", "date": "Apr 22 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Breakable Batfish", "source_name": null, "source_url": null},
{"title": "Node Locking", "code": "Node-locked licensing is a software licensing approach in which a license for a software application is assigned to one or more hardware devices. Typically any numbers of instances are allowed to execute for such license", "date": "Apr 29 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Talented Teira", "source_name": null, "source_url": null},
{"title": "writefile in node js", "code": "// writefile.js\n\nconst fs = require('fs');\n\nlet lyrics = 'But still I\\'m having memories of high speeds when the cops crashed\\n' + \n             'As I laugh, pushin the gas while my Glocks blast\\n' + \n             'We was young and we was dumb but we had heart';\n\n// write to a new file named 2pac.txt\nfs.writeFile('2pac.txt', lyrics, (err) => {\n    // throws an error, you could also catch it here\n    if (err) throw err;\n\n    // success case, the file was saved\n    console.log('Lyric saved!');\n});\n", "date": "Mar 15 2020", "vote": 11, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/writing-to-files-in-node-js/"},
{"title": "node js write file", "code": "// fs_write.js\n\nconst fs = require('fs');\n\n// specify the path to the file, and create a buffer with characters we want to write\nlet path = 'ghetto_gospel.txt';\nlet buffer = new Buffer('Those who wish to follow me\\nI welcome with my hands\\nAnd the red sun sinks at last');\n\n// open the file in writing mode, adding a callback function where we do the actual writing\nfs.open(path, 'w', function(err, fd) {\n    if (err) {\n        throw 'could not open file: ' + err;\n    }\n\n    // write the contents of the buffer, from position 0 to the end, to the file descriptor returned in opening our file\n    fs.write(fd, buffer, 0, buffer.length, null, function(err) {\n        if (err) throw 'error writing file: ' + err;\n        fs.close(fd, function() {\n            console.log('wrote the file successfully');\n        });\n    });\n});", "date": "Jun 24 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Xenophobic Xenomorph", "source_name": null, "source_url": null},
{"title": "writefile in node js", "code": "// write_stream.js\n\nconst fs = require('fs');\n\nlet writeStream = fs.createWriteStream('secret.txt');\n\n// write some data with a base64 encoding\nwriteStream.write('aef35ghhjdk74hja83ksnfjk888sfsf', 'base64');\n\n// the finish event is emitted when all data has been flushed from the stream\nwriteStream.on('finish', () => {\n    console.log('wrote all data to file');\n});\n\n// close the stream\nwriteStream.end();\n", "date": "Mar 15 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/writing-to-files-in-node-js/"},
{"title": "fs writefile node", "code": "const fs = require('fs')\n\nconst content = 'Some content!'\n\nfs.writeFile('/Users/joe/test.txt', content, err => {\n  if (err) {\n    console.error(err)\n    return\n  }\n  //file written successfully\n})", "date": "Mar 15 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "nodejs.dev", "source_url": "https://nodejs.dev/writing-files-with-nodejs"},
{"title": "writefile in node js", "code": "// append_file.js\n\nconst fs = require('fs');\n\n// add a line to a lyric file, using appendFile\nfs.appendFile('empirestate.txt', '\\nRight there up on Broadway', (err) => {\n    if (err) throw err;\n    console.log('The lyrics were updated!');\n});\n", "date": "Mar 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/writing-to-files-in-node-js/"},
{"title": "writefile in node js", "code": "fs.writeFile('2pac.txt', 'Some other lyric', 'ascii', callback);\n", "date": "Mar 15 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/writing-to-files-in-node-js/"},
{"title": "check node version", "code": "node --version  \n//or\nnode -v\n\n//v12.15.0", "date": "Jul 03 2020", "vote": 10, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "update nodejs mac", "code": "sudo npm cache clean -f \nsudo npm install -g n\nsudo n stable/lts ", "date": "Oct 21 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Curious Coyote", "source_name": null, "source_url": null},
{"title": "find node version", "code": "node -v\n\nOR\n\nnode --version", "date": "May 25 2020", "vote": 3, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Silverlightning", "source_name": null, "source_url": null},
{"title": "node js version", "code": "node -v", "date": "May 01 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Victor Grk", "source_name": null, "source_url": null},
{"title": "node js", "code": "Node js allows you to run javascript outside of your browser\nex: you are able to run it on your terminal", "date": "Jun 18 2020", "vote": 16, "tags": ["javascript", "nodejs"], "posted_by": "Soccer Star", "source_name": null, "source_url": null},
{"title": "node js util promisify", "code": "const util = require('util');\nconst fs = require('fs');\n\nconst stat = util.promisify(fs.stat);\n\nasync function callStat() {\n  const stats = await stat('.');\n  console.log(`This directory is owned by ${stats.uid}`);\n}\n", "date": "May 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "saggiyogesh", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/util.html#util_util_promisify_original"},
{"title": "node js utf8 encode", "code": "//install using 'npm install utf8'\nconst utf8 = require('utf8');\nutf8.encode(string)", "date": "Apr 18 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "adreaskar", "source_name": null, "source_url": null},
{"title": "node loop files and push to array to display on screen with nunjucks", "code": "<!-- Nunjucks to loop the array and show each file in a list -->\n<ul>\n  {% for file in fileList %}\n  \t<li>{{ file }}</li>\n  {% endfor %}\n</ul>", "date": "Dec 03 2020", "vote": 0, "tags": ["javascript", "nodejs", "html"], "posted_by": "Awful Anteater", "source_name": null, "source_url": null},
{"title": "node loop files and push to array to display on screen with nunjucks", "code": "const directoryPath = './path/to/dir/';\n\n// loop files in directory and push to an array and pass to rendered screen\nrouter.get('/slug', (req, res) => {\n    let fileList = [];\n    fs.readdir(directoryPath, (err, file) => {\n        if (err) {\n            return console.log('Unable to scan directory: ' + err);\n        } \n        file.forEach((file) => {\n            fileList.push(file);\n        });\n      \t// Passing the array to the rendered screen\n        res.render('rendered/screen', {fileList});\n    });\n});", "date": "Dec 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Awful Anteater", "source_name": null, "source_url": null},
{"title": "how to format unix timestamp javascript", "code": "var s = new Date(1504095567183).toLocaleDateString(\"en-US\")\n// expected output \"8/30/2017\"  \nconsole.log(s);", "date": "Apr 30 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Happy Hamster", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/847185/convert-a-unix-timestamp-to-time-in-javascript"},
{"title": "node get unix timestamp", "code": "Math.floor(new Date() / 1000) // in seconds", "date": "Mar 30 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "just-saved-you-a-stackoverflow-visit", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/25250551/how-to-generate-timestamp-unix-epoch-format-nodejs"},
{"title": "node js unix timestamp", "code": "function getUnixTime() {\n  return (Date.now() / 1000) | 0;  \n}", "date": "Jan 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Dizzy Dog", "source_name": null, "source_url": null},
{"title": "nodejs current timestamp unix", "code": "Math.floor(+new Date() / 1000)\n", "date": "Dec 20 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "PerryGamerPT", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/25250551/how-to-generate-timestamp-unix-epoch-format-nodejs"},
{"title": "nodejs current timestamp", "code": "Math.floor(new Date() / 1000)", "date": "Jan 25 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "PerryGamerPT", "source_name": null, "source_url": null},
{"title": "node js TypeError [ERR_INVALID_ARG_TYPE]: The argument must be of type string. Received undefined", "code": "1) install cucumber as project local package, rather than global package.\n\nnpm install -S cucumber", "date": "Oct 05 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Armandres", "source_name": null, "source_url": null},
{"title": "node js try catch", "code": "try {\n  nonExistentFunction();\n} catch (error) {\n  console.error(error);\n  // expected output: ReferenceError: nonExistentFunction is not defined\n  // Note - error messages will vary depending on browser\n}", "date": "Sep 14 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Rich Raccoon", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch"},
{"title": "javascript try", "code": "var someNumber = 1;\ntry {\n  someNumber.replace(\"-\",\"\"); //You can't replace a int\n} catch(err) {\n console.log(err);\n}", "date": "Jun 27 2019", "vote": 25, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "node js to check 32 bit", "code": "{\n    \"data\": [\n        {\n            \"x\": [\n                \"giraffes\",\n                \"orangutans\",\n                \"monkeys\"\n            ],\n            \"y\": [\n                20,\n                14,\n                23\n            ],\n            \"type\": \"bar\"\n        }\n    ]\n}\nCopy to Clipboard!!", "date": "May 07 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Average Albatross", "source_name": "plotly.com", "source_url": "https://plotly.com/chart-studio-help/json-chart-schema/#background"},
{"title": "Node Js templates", "code": "$ npm i vue vuex vue-loader css-loader vue-template-compiler node-sass sass-loader postcss-loader postcss-loader webpack-node-externals webpack-merge webpack babel-core babel-loader babel-plugin-transform-object-rest-spread babel-preset-env --save", "date": "Nov 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Xerothermic Xenomorph", "source_name": "github.com", "source_url": "https://github.com/vuexpress/vuexpress"},
{"title": "node js sublime text", "code": "{\n    \"cmd\": [\"/usr/bin/node\", \"$file\"],\n    \"selector\": \"source.js\"\n}\n", "date": "Feb 18 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Poised Panda", "source_name": null, "source_url": null},
{"title": "node js store values in file", "code": "var fs = require('fs');\n\nvar myOptions = {\n  name: 'Avian',\n  dessert: 'cake'\n  flavor: 'chocolate',\n  beverage: 'coffee'\n};\n\nvar data = JSON.stringify(myOptions);\n\nfs.writeFile('./config.json', data, function (err) {\n  if (err) {\n    console.log('There has been an error saving your configuration data.');\n    console.log(err.message);\n    return;\n  }\n  console.log('Configuration saved successfully.')\n});", "date": "Aug 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Juligum", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/file-system/how-to-store-local-config-data/"},
{"title": "node js store add values in file", "code": "const fs = require('fs');\n\nlet obj = {\n    table: []\n};\n\nfs.exists('myjsonfile.json', function(exists) {\n\n    if (exists) {\n      \n        fs.readFile('myjsonfile.json', function readFileCallback(err, data) {\n\n            if (err) {\n                console.log(err);\n            } else {\n                obj = JSON.parse(data);\n\n              \t//Data that you want add to the file\n                for (i = 0; i < 5; i++) {\n                    obj.table.push({\n                        id: i,\n                        square: i * i\n                    });\n                }\n\n                let json = JSON.stringify(obj);\n                fs.writeFile('myjsonfile.json', json);\n            }\n        });\n    } else {\n      \n        console.log(\"file not exists\");\n      \t\n      \t//Data that you want add to the file\n        for (i = 0; i < 5; i++) {\n            obj.table.push({\n                id: i,\n                square: i * i\n            });\n        }\n\n        let json = JSON.stringify(obj);\n        fs.writeFile('myjsonfile.json', json);\n    }\n});", "date": "Aug 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Juligum", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/36856232/write-add-data-in-json-file-using-node-js"},
{"title": "node js stop", "code": "process.exit();", "date": "Jul 15 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "node js split", "code": "str.split([separator[, limit]])", "date": "May 20 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Horrible Hyena", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/String/split"},
{"title": "node js split", "code": "function splitString(stringToSplit, separator) {\n  var arrayOfStrings = stringToSplit.split(separator);\n\n  console.log('The original string is: \"' + stringToSplit + '\"');\n  console.log('The separator is: \"' + separator + '\"');\n  console.log('The array has ' + arrayOfStrings.length + ' elements: ' + arrayOfStrings.join(' / '));\n}\n\nvar tempestString = 'Oh brave new world that has such people in it.';\nvar monthString = 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec';\n\nvar space = ' ';\nvar comma = ',';\n\nsplitString(tempestString, space);\nsplitString(tempestString);\nsplitString(monthString, comma);", "date": "May 20 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Horrible Hyena", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/String/split"},
{"title": "js throw error", "code": "throw new Error('Whoops!')", "date": "Mar 17 2020", "vote": 18, "tags": ["javascript", "nodejs"], "posted_by": "gaz_edge", "source_name": null, "source_url": null},
{"title": "node js throw error", "code": "FactoryController.prototype.create = function (callback) {\n    //The throw is working, and the exception is returned.\n    throw new Error('An error occurred'); //outside callback \n    try {\n        this.check(function (check_result) {\n            callback(check_result);\n        });\n    } catch (ex) {\n        throw new Error(ex.toString());\n    }\n}\n\nFactoryController.prototype.create = function (callback) {\n    try {\n        this.check(function (check_result) {\n            //The throw is not working on this case to return the exception to the caller(parent)\n            throw new Error('An error occurred'); //inside callback \n        });\n    } catch (ex) {\n        throw new Error(ex.toString());\n    }\n}", "date": "May 05 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Helpless Hoopoe", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/34017767/nodejs-throw-exception"},
{"title": "javascript throw new error", "code": "throw new Error(\"Error message here\"); // Uncaught Error: Error message here", "date": "Jun 06 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "TC5550", "source_name": null, "source_url": null},
{"title": "error handling in node js", "code": "app.get('/', function (req, res, next) {\n  Promise.resolve().then(function () {\n    throw new Error('BROKEN')\n  }).catch(next) // Errors will be passed to Express.\n})\n", "date": "Jul 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Beautiful Badger", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/guide/error-handling.html"},
{"title": "js throw new error", "code": "throw new Error(\"message\");\n", "date": "Jul 21 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Diz Andriana", "source_name": "humanwhocodes.com", "source_url": "https://humanwhocodes.com/blog/2009/03/10/the-art-of-throwing-javascript-errors-part-2/"},
{"title": "node js sleep between axios", "code": "const bluebird = require('bluebird')\n\nasync function makeRequests (lines) {\n  await bluebird.map(\n    lines,\n    async (line) => {\n      const encodedLink = encodeURI(line.link)\n      const response = await axios.get(encodedLink)\n      // ...your response handling code here...\n    },\n    { concurrency: 3 }\n  )\n}\n\nmakeRequests(jsonParsed)\n", "date": "Dec 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Lovely Ladybird", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/56876990/node-js-how-to-run-axios-get-every-2-seconds"},
{"title": "node js type error", "code": "TypeError: res.status is not a function\n    at C:\\Users\\lenovo\\Desktop\\MERN\\backend\\app.js:16:8\n    at Layer.handle_error (C:\\Users\\lenovo\\Desktop\\MERN\\backend\\node_modules\\express\\lib\\router\\layer.js:71:5)\n    at trim_prefix (C:\\Users\\lenovo\\Desktop\\MERN\\backend\\node_modules\\express\\lib\\router\\index.js:315:13)\n    at C:\\Users\\lenovo\\Desktop\\MERN\\backend\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\lenovo\\Desktop\\MERN\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at Immediate.next (C:\\Users\\lenovo\\Desktop\\MERN\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Immediate.<anonymous> (C:\\Users\\lenovo\\Desktop\\MERN\\backend\\node_modules\\express\\lib\\router\\index.js:635:15)\n    at processImmediate (internal/timers.js:458:21)\n\n\nreason:-(error,res,req,next)  order of argument is incorrect req after before res\nsolution:-(error,req,res,next)\n", "date": "Oct 12 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Beautiful Badger", "source_name": null, "source_url": null},
{"title": "node js type error", "code": "TypeError: res.status is not a function\n    at C:\\Users\\lenovo\\Desktop\\MERN\\backend\\app.js:16:8\n    at Layer.handle_error (C:\\Users\\lenovo\\Desktop\\MERN\\backend\\node_modules\\express\\lib\\router\\layer.js:71:5)\n    at trim_prefix (C:\\Users\\lenovo\\Desktop\\MERN\\backend\\node_modules\\express\\lib\\router\\index.js:315:13)\n    at C:\\Users\\lenovo\\Desktop\\MERN\\backend\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Users\\lenovo\\Desktop\\MERN\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at Immediate.next (C:\\Users\\lenovo\\Desktop\\MERN\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Immediate.<anonymous> (C:\\Users\\lenovo\\Desktop\\MERN\\backend\\node_modules\\express\\lib\\router\\index.js:635:15)\n    at processImmediate (internal/timers.js:458:21)\n\n\nreason:-(error,res,req,next)  order of argument is incorrect req after before res\nsolution:-(error,req,res,next)\n", "date": "Oct 12 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Beautiful Badger", "source_name": null, "source_url": null},
{"title": "node js sendgrid", "code": "const sgMail = require('@sendgrid/mail');\nsgMail.setApiKey(process.env.SENDGRID_API_KEY);\nconst msg = {\n  to: 'test@example.com',\n  from: 'test@example.com',\n  subject: 'Sending with SendGrid is Fun',\n  text: 'and easy to do anywhere, even with Node.js',\n};\nsgMail.send(msg).catch(err => {\n  console.log(err);\n});\n", "date": "May 01 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cheerful Chimpanzee", "source_name": "www.twilio.com", "source_url": "https://www.twilio.com/blog/sending-email-attachments-with-sendgrid"},
{"title": "node js sendgrid", "code": "const sgMail = require('@sendgrid/mail');\nsgMail.setApiKey(process.env.SENDGRID_API_KEY);\n\nconst fs = require(\"fs\");\n\npathToAttachment = `${__dirname}/attachment.pdf`;\nattachment = fs.readFileSync(pathToAttachment).toString(\"base64\");\n\nconst msg = {\n  to: test@example.com',\n  from: 'test@example.com',\n  subject: 'Sending with SendGrid is Fun',\n  text: 'and easy to do anywhere, even with Node.js',\n};\nsgMail.send(msg).catch(err => {\n  console.log(err);\n});\n", "date": "May 01 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cheerful Chimpanzee", "source_name": "www.twilio.com", "source_url": "https://www.twilio.com/blog/sending-email-attachments-with-sendgrid"},
{"title": "node js sendgrid", "code": "npm install @sendgrid/mail\n", "date": "May 01 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cheerful Chimpanzee", "source_name": "www.twilio.com", "source_url": "https://www.twilio.com/blog/sending-email-attachments-with-sendgrid"},
{"title": "node js sendgrid", "code": "const sgMail = require('@sendgrid/mail');\nsgMail.setApiKey(process.env.SENDGRID_API_KEY);\n\nconst fs = require(\"fs\");\n\npathToAttachment = `${__dirname}/attachment.pdf`;\nattachment = fs.readFileSync(pathToAttachment).toString(\"base64\");\n\nconst msg = {\n  to: test@example.com',\n  from: 'test@example.com',\n  subject: 'Sending with SendGrid is Fun',\n  text: 'and easy to do anywhere, even with Node.js',\n  attachments: [\n    {\n      content: attachment,\n      filename: \"attachment.pdf\",\n      type: \"application/pdf\",\n      disposition: \"attachment\"\n    }\n  ]\n};\n\nsgMail.send(msg).catch(err => {\n  console.log(err);\n});\n", "date": "May 01 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cheerful Chimpanzee", "source_name": "www.twilio.com", "source_url": "https://www.twilio.com/blog/sending-email-attachments-with-sendgrid"},
{"title": "node js send javascript", "code": "const fs = require(\"fs\");\nconst hostname = \"127.0.0.1\";\nconst port = 3000;\n\n// use createReadStream instead to save memory\nconst index = fs.readFileSync(\"index.html\");\nconst java = fs.readFileSync(\"javascript.js\");\n\n// this is our request handler\nconst server = http.createServer((req, res) => {\n if (req.url === \"/\") {\n   res.setHeader(\"Content-Type\", \"text/html\");\n   res.write(index);\n }\n if (req.url === \"/javascript.js\") {\n   res.setHeader(\"Content-Type\", \"text/javascript\");\n   res.write(java);\n }\n res.statusCode = 200;\n //   res.writeHead(200, java);\n res.end();\n});\n\nserver.listen(port, hostname, () => {\n console.log(`Server running at http://${hostname}:${port}/`);\n});", "date": "Feb 18 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Shiny Shark", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/55233132/send-javascript-and-html-in-http-response-in-nodejs/55233644"},
{"title": "node js run bat file", "code": "require('child_process').exec('cmd /c batfile.bat', function(){\n   // \u2026you callback code may run here\u2026\n});", "date": "Jan 13 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Helpless Hedgehog", "source_name": "github.com", "source_url": "https://github.com/nwjs/nw.js/issues/1069"},
{"title": "node js send fcm", "code": "\u00a0\u00a0\u00a0\u00a0var\u00a0FCM\u00a0=\u00a0require('fcm-node')\n    var\u00a0serverKey\u00a0=\u00a0require('path/to/privatekey.json')\u00a0//put\u00a0the\u00a0generated\u00a0private\u00a0key\u00a0path\u00a0here\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n    var\u00a0fcm\u00a0=\u00a0new\u00a0FCM(serverKey)\u00a0\u00a0\u00a0\u00a0\u00a0\n    var\u00a0message\u00a0=\u00a0{\u00a0//this\u00a0may\u00a0vary\u00a0according\u00a0to\u00a0the\u00a0message\u00a0type\u00a0(single\u00a0recipient,\u00a0multicast,\u00a0topic,\u00a0et\u00a0cetera)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n      to:\u00a0'registration_token',\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n      collapse_key:\u00a0'your_collapse_key',\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n      notification:\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n        title:\u00a0'Title\u00a0of\u00a0your\u00a0push\u00a0notification',\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n        body:\u00a0'Body\u00a0of\u00a0your\u00a0push\u00a0notification'\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n      },\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n      data:\u00a0{\u00a0\u00a0//you\u00a0can\u00a0send\u00a0only\u00a0notification\u00a0or\u00a0only\u00a0data(or\u00a0include\u00a0both)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n        my_key:\u00a0'my\u00a0value',\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n        my_another_key:\u00a0'my\u00a0another\u00a0value'\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n      }\u00a0\u00a0\u00a0\u00a0\n    }\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n    fcm.send(message,\u00a0function(err,\u00a0response){\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n      if\u00a0(err)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n        console.log(\"Something\u00a0has\u00a0gone\u00a0wrong!\")\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n      }\u00a0else\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n        console.log(\"Successfully\u00a0sent\u00a0with\u00a0response:\u00a0\",\u00a0response)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n      }\u00a0\u00a0\u00a0\u00a0\n    })", "date": "Jun 23 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "GutoTrosla", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/fcm-node"},
{"title": "node js server", "code": "/* ====== create node.js server with core 'http' module ====== */\n// dependencies\nconst http = require(\"http\");\n\n// PORT\nconst PORT = 3000;\n\n// server create\nconst server = http.createServer((req, res) => {\n   if (req.url === \"/\") {\n      res.write(\"This is home page.\");\n      res.end();\n   } else if (req.url === \"/about\" && req.method === \"GET\") {\n      res.write(\"This is about page.\");\n      res.end();\n   } else {\n      res.write(\"Not Found!\");\n      res.end();\n   }\n});\n\n// server listen port\nserver.listen(PORT);\n\nconsole.log(`Server is running on PORT: ${PORT}`);\n\n/* ========== *** ========== */\n\n/* ====== create node.js server with express.js framework ====== */\n// dependencies\nconst express = require(\"express\");\n\nconst app = express();\n\napp.get(\"/\", (req, res) => {\n   res.send(\"This is home page.\");\n});\n\napp.post(\"/\", (req, res) => {\n   res.send(\"This is home page with post request.\");\n});\n\n// PORT\nconst PORT = 3000;\n\napp.listen(PORT, () => {\n   console.log(`Server is running on PORT: ${PORT}`);\n});\n\n\n// ======== Instructions ========\n// save this as index.js\n// you have to download and install node.js on your machine\n// open terminal or command prompt\n// type node index.js\n// find your server at http://localhost:3000", "date": "Feb 19 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": null, "source_url": null},
{"title": "node js server", "code": "const express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))", "date": "Apr 01 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Encouraging Elk", "source_name": null, "source_url": null},
{"title": "how to create a server in node js", "code": "// code by VARSHITH REDDY SATTI\n// to create a server in node.js you should.\nvar http = require('http');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(\"write html code to display you test\")\n  res.end();\n}).listen(8080);\n// save this as httpServer.js\n// run this by typing node httpServer.js in the command line\n// to acess your server got to http://localhost:8080", "date": "Dec 28 2019", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Crown Of Thorns Starfish", "source_name": null, "source_url": null},
{"title": "SERVER PORT NODE.JS", "code": "const http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('Hello World');\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});", "date": "Jul 08 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Alive Antelope", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/getting-started-guide/"},
{"title": "how to create node js server", "code": "//HTTP MODULE NODE.JS\nvar http = require('http');\nvar server = http.createServer(function(req, res){\n  //write code here\n});\nserver.listen(5000); ", "date": "Jan 13 2021", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Repulsive Ray", "source_name": null, "source_url": null},
{"title": "create node js server", "code": "import express from 'express';\nconst server = express();\n\nconst port = 8080;\n\nserver.get('/', (req, res) => {\n  return res.send('Hello, Express.js!');\n})\n\nserver.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});", "date": "Mar 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mysterious Monkey", "source_name": "learn.coderslang.com", "source_url": "https://learn.coderslang.com/0047-node.js-create-your-first-express-server/"},
{"title": "node js serve pdf file", "code": "app.use('/pdf', express.static(__dirname + '/pathToPDF'));\n", "date": "Dec 14 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Worrisome Wallaby", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/17831942/serve-pdf-files-using-node-js-express"},
{"title": "node js create pdf from html", "code": "The problem with using PDF converter libraries available on NPM like pdfkit is that, you gonna have to recreate the page structures again in your html templates to get the desired output.\n\nOne of the best approach to rendering html and convert to pdf is by using Puppeteer on NodeJs. Puppeteer is a Node library which provides a high-level API to control Chrome or Chromium over the DevTools Protocol. It can be used to generate screenshots and PDFs of html pages in your case.", "date": "Mar 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Santino", "source_name": null, "source_url": null},
{"title": "node js serve pdf file", "code": "res.setHeader('Content-Disposition', 'inline;filename=yolo.pdf')", "date": "May 09 2021", "vote": 0, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Itchy Iguana", "source_name": "www.codegrepper.com", "source_url": "https://www.codegrepper.com/code-examples/javascript/frameworks/react/node+js+serve+pdf+file"},
{"title": "node js serve pdf file", "code": "res.setHeader('Content-Type', 'application/pdf')", "date": "May 09 2021", "vote": 0, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Itchy Iguana", "source_name": "www.codegrepper.com", "source_url": "https://www.codegrepper.com/code-examples/javascript/frameworks/react/node+js+serve+pdf+file"},
{"title": "node js serve pdf file", "code": "app.use('/pdf', express.static(__dirname + '/pathToPDF'));", "date": "May 09 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Itchy Iguana", "source_name": "www.codegrepper.com", "source_url": "https://www.codegrepper.com/code-examples/javascript/frameworks/react/node+js+serve+pdf+file"},
{"title": "express send pdf to view", "code": "res.setHeader('Content-Type', 'application/pdf')\nres.setHeader('Content-Disposition', 'inline;filename=yolo.pdf')", "date": "Nov 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "florinrelea", "source_name": null, "source_url": null},
{"title": "node js return ID in postgres insert", "code": "INSERT INTO foo (name) VALUES ('baz') RETURNING *", "date": "Oct 21 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fine Fish", "source_name": null, "source_url": null},
{"title": "node js require file in parent directory", "code": "var configData = require('./../common/config.js');", "date": "Jul 02 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Grotesque Gemsbok", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/42163049/node-js-require-from-parent-folder"},
{"title": "node js response header", "code": "response.setHeader(\"Content-Type\", \"text/html\");", "date": "Jul 26 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Encouraging Eagle", "source_name": "nodejs.org", "source_url": "https://nodejs.org/docs/v0.4.12/api/http.html#response.writeHead"},
{"title": "node js require all function from another file", "code": "const { func1, func2, func3 } = require(\"./lib\");", "date": "Mar 19 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "TheMikeste1", "source_name": null, "source_url": null},
{"title": "node js reuire json shows onject", "code": "var readJson = (path, cb) => {\n  fs.readFile(require.resolve(path), (err, data) => {\n    if (err)\n      cb(err)\n    else\n      cb(null, JSON.parse(data))\n  })\n}\n", "date": "Dec 09 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "pink pikachu", "source_name": "goenning.net", "source_url": "https://goenning.net/2016/04/14/stop-reading-json-files-with-require/"},
{"title": "node js request download file", "code": "const http = require('http'); // or 'https' for https:// URLs\nconst fs = require('fs');\n\nconst file = fs.createWriteStream(\"file.jpg\");\nconst request = http.get(\"http://i3.ytimg.com/vi/J---aiyznGQ/mqdefault.jpg\", function(response) {\n  response.pipe(file);\n});\n", "date": "Apr 13 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Nervous Newt", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/11944932/how-to-download-a-file-with-node-js-without-using-third-party-libraries/11944984"},
{"title": "node js request async await", "code": "function doRequest(url) {\n  return new Promise(function (resolve, reject) {\n    request(url, function (error, res, body) {\n      if (!error && res.statusCode == 200) {\n        resolve(body);\n      } else {\n        reject(error);\n      }\n    });\n  });\n}\n\n// Usage:\n\nasync function main() {\n  let res = await doRequest(url);\n  console.log(res);\n}\n\nmain();", "date": "May 23 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Concerned Chipmunk", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/38428027/why-await-is-not-working-for-node-request-module/38428075"},
{"title": "node js read file stream line by line", "code": "const readline = require('readline');\nconst fs = require('fs');\n\n// create instance of readline\n// each instance is associated with single input stream\nlet rl = readline.createInterface({\n    input: fs.createReadStream('products.txt')\n});\n\nlet line_no = 0;\n\n// event is emitted after each line\nrl.on('line', function(line) {\n    line_no++;\n    console.log(line);\n});\n\n// end\nrl.on('close', function(line) {\n    console.log('Total lines : ' + line_no);\n});\n", "date": "Mar 04 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "jordangarrison", "source_name": "usefulangle.com", "source_url": "https://usefulangle.com/post/95/nodejs-read-file-line-by-line"},
{"title": "node js read file from s3 bucket", "code": "# This function for read/download file from s3 bucketconst s3download = function (params) {    return new Promise((resolve, reject) => {        s3.createBucket({            Bucket: BUCKET_NAME        /* Put your bucket name */        }, function () {            s3.getObject(params, function (err, data) {                if (err) {                    reject(err);                } else {                    console.log(\"Successfully dowloaded data from  bucket\");                    resolve(data);                }            });        });    });}", "date": "Jan 21 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Hungry Hamerkop", "source_name": "rajputankit22.medium.com", "source_url": "https://rajputankit22.medium.com/read-write-and-delete-file-from-s3-bucket-via-nodejs-2e17047d2178"},
{"title": "nodejs recursively read directory", "code": "var fs = require('fs');\nvar path = require('path');\nvar walk = function(dir, done) {\n  var results = [];\n  fs.readdir(dir, function(err, list) {\n    if (err) return done(err);\n    var i = 0;\n    (function next() {\n      var file = list[i++];\n      if (!file) return done(null, results);\n      file = path.resolve(dir, file);\n      fs.stat(file, function(err, stat) {\n        if (stat && stat.isDirectory()) {\n          walk(file, function(err, res) {\n            results = results.concat(res);\n            next();\n          });\n        } else {\n          results.push(file);\n          next();\n        }\n      });\n    })();\n  });\n};\n\n\nAnd to test it out on your home directory (WARNING: the results list will be huge if you have a lot of stuff in your home directory):\n\nwalk(process.env.HOME, function(err, results) {\n  if (err) throw err;\n  console.log(results);\n});", "date": "Jul 22 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Old Knight", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/5827612/node-js-fs-readdir-recursive-directory-search"},
{"title": "node js read files recursively", "code": "var fs = require('fs');\nvar path = require('path');\nvar walk = function(dir, done) {\n  var results = [];\n  fs.readdir(dir, function(err, list) {\n    if (err) return done(err);\n    var i = 0;\n    (function next() {\n      var file = list[i++];\n      if (!file) return done(null, results);\n      file = path.resolve(dir, file);\n      fs.stat(file, function(err, stat) {\n        if (stat && stat.isDirectory()) {\n          walk(file, function(err, res) {\n            results = results.concat(res);\n            next();\n          });\n        } else {\n          results.push(file);\n          next();\n        }\n      });\n    })();\n  });\n};\n\nAnd to test it out on your home directory (WARNING: the results list will be huge if you have a lot of stuff in your home directory):\n\nwalk(process.env.HOME, function(err, results) {\n  if (err) throw err;\n  console.log(results);\n});", "date": "Sep 30 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "MakSoft", "source_name": null, "source_url": null},
{"title": "node js return json", "code": "var http = require('http');\n\nvar app = http.createServer(function(req,res){\n    res.setHeader('Content-Type', 'application/json');\n    res.end(JSON.stringify({ a: 1 }));\n});\napp.listen(3000);\n\n// > {\"a\":1}", "date": "Jun 19 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Jules", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/19696240/proper-way-to-return-json-using-node-or-express"},
{"title": "node js quit", "code": "process.exit();", "date": "Jun 11 2020", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "end code nodejs", "code": "process.exit()", "date": "Dec 13 2019", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "1337", "source_name": null, "source_url": null},
{"title": "mssql query node js", "code": "const sql = require('mssql')\nconst query=`select * from table`;\nconfig = {\n    database: \"dbname\",\n  // can keep these option required with latest version of mssql npm package\n    options: {\n      enableArithAbort: true,\n      encrypt: true,\n      rowCollectionOnRequestCompletion: false,\n    },\n    parseJSON: true,\n    password: \"password\",\n    port: port, // if youe database running on difrent port then 1433\n    server: \"server ip or name\",\n    user: \"usenme\",\n  };\n\n \nsql.on('error', err => {\n    // ... error handler\n})\n \nsql.connect(config).then(pool => {\n    return pool.request()\n        .query(query)\n}).then(result => {\n    console.log(result.recordset)\n}).catch(err => {\n    console.log(err)\n});\n", "date": "Nov 13 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Elated Echidna", "source_name": null, "source_url": null},
{"title": "node js printing", "code": "console.log([data][, ...])", "date": "Jan 26 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Minecraftian14", "source_name": null, "source_url": null},
{"title": "node http request", "code": "const https = require('https')\nconst options = {\n  hostname: 'whatever.com',\n  port: 443,\n  path: '/todos',\n  method: 'GET'\n}\n\nconst req = https.request(options, res => {\n  console.log(`statusCode: ${res.statusCode}`)\n\n  res.on('data', d => {\n    process.stdout.write(d)\n  })\n})\n\nreq.on('error', error => {\n  console.error(error)\n})\n\nreq.end()", "date": "Mar 20 2020", "vote": 12, "tags": ["javascript", "nodejs"], "posted_by": "Eager Echidna", "source_name": "nodejs.dev", "source_url": "https://nodejs.dev/making-http-requests-with-nodejs"},
{"title": "node js request", "code": "const request = require('request');\nrequest('http://www.google.com', function (error, response, body) {\n  console.error('error:', error); // Print the error if one occurred\n  console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n  console.log('body:', body); // Print the HTML for the Google homepage.\n});", "date": "Aug 11 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Tarik", "source_name": null, "source_url": null},
{"title": "node js do request", "code": "let request = require('request')\n\nconst formData = {\n  // Pass a simple key-value pair\n  my_field: 'my_value',\n  // Pass data via Buffers\n  my_buffer: Buffer.from([1, 2, 3]),\n  // Pass data via Streams\n  my_file: fs.createReadStream(__dirname + '/unicycle.jpg'),\n  // Pass multiple values /w an Array\n  attachments: [\n    fs.createReadStream(__dirname + '/attachment1.jpg'),\n    fs.createReadStream(__dirname + '/attachment2.jpg')\n  ],\n  // Pass optional meta-data with an 'options' object with style: {value: DATA, options: OPTIONS}\n  // Use case: for some types of streams, you'll need to provide \"file\"-related information manually.\n  // See the `form-data` README for more information about options: https://github.com/form-data/form-data\n  custom_file: {\n    value:  fs.createReadStream('/dev/urandom'),\n    options: {\n      filename: 'topsecret.jpg',\n      contentType: 'image/jpeg'\n    }\n  }\n};\nrequest.post({url:'http://service.com/upload', formData: formData}, function optionalCallback(err, httpResponse, body) {\n  if (err) {\n    return console.error('upload failed:', err);\n  }\n  console.log('Upload successful!  Server responded with:', body);\n});", "date": "Jun 22 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Jules", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/request"},
{"title": "print in node js", "code": "console.log('hello world');\n// Prints: hello world, to stdout\nconsole.log('hello %s', 'world');\n// Prints: hello world, to stdout\nconsole.error(new Error('Whoops, something bad happened'));\n// Prints: [Error: Whoops, something bad happened], to stderr\n\nconst name = 'Will Robinson';\nconsole.warn(`Danger ${name}! Danger!`);\n// Prints: Danger Will Robinson! Danger!, to stderr", "date": "Aug 10 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bored Boar", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/console.html"},
{"title": "node js printing", "code": "console.log([data][, ...])", "date": "Jan 26 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Minecraftian14", "source_name": null, "source_url": null},
{"title": "node js print", "code": "print(\"hello world\");", "date": "Jan 15 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "HeyItsDeveloperRhys", "source_name": null, "source_url": null},
{"title": "postgresql nodejs", "code": "//connect to postgres database in node\n\nconst Pool = require('pg').Pool;\n\nconst pool = new Pool({\n    user: '',\n    host: 'localhost',\n    database:  '',\n    password: '',\n    port:5432,\n  })\n\n//query example\n\napp.get('/users',async(req,res)=>{\n  \n  try{\n     let resp=await pool.query('SELECT * FROM users');\n  }catch(err){\n     res.status(200).send(resp.rows);\n  }\n})\n", "date": "Apr 20 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Average Addax", "source_name": null, "source_url": null},
{"title": "node js postgresql query", "code": "// callback\nclient.query('SELECT NOW() as now', (err, res) => {\n  if (err) {\n    console.log(err.stack)\n  } else {\n    console.log(res.rows[0])\n  }\n})\n// promise\nclient\n  .query('SELECT NOW() as now')\n  .then(res => console.log(res.rows[0]))\n  .catch(e => console.error(e.stack))", "date": "May 05 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Zealous Zebra", "source_name": "node-postgres.com", "source_url": "https://node-postgres.com/features/queries"},
{"title": "postgresql nodejs", "code": "const { Client } = require('pg')const client = new Client();(async () => {  await client.connect()  const res = await client.query('SELECT $1::text as message', ['Hello world!'])  console.log(res.rows[0].message) // Hello world!  await client.end()})()", "date": "Sep 08 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Shy Seal", "source_name": "node-postgres.com", "source_url": "https://node-postgres.com/"},
{"title": "node js post multipart/form-data", "code": "var jsonUpload = {  };\nvar formData = {\n    'file': fs.createReadStream(fileName),\n    'jsonUpload': JSON.stringify(jsonUpload)\n};\nvar uploadOptions = {\n    \"url\": \"https://upload/url\",\n    \"method\": \"POST\",\n    \"headers\": {\n        \"Authorization\": \"Bearer \" + accessToken\n    },\n    \"formData\": formData\n}\nvar req = request(uploadOptions, function(err, resp, body) {\n    if (err) {\n        console.log('Error ', err);\n    } else {\n        console.log('upload successful', body)\n    }\n});\n", "date": "Oct 28 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Quaint Quelea", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/13797670/nodejs-post-request-multipart-form-data"},
{"title": "mssql query node js", "code": "const sql = require('mssql')\nconst query=`select * from table`;\nconfig = {\n    database: \"dbname\",\n  // can keep these option required with latest version of mssql npm package\n    options: {\n      enableArithAbort: true,\n      encrypt: true,\n      rowCollectionOnRequestCompletion: false,\n    },\n    parseJSON: true,\n    password: \"password\",\n    port: port, // if youe database running on difrent port then 1433\n    server: \"server ip or name\",\n    user: \"usenme\",\n  };\n\n \nsql.on('error', err => {\n    // ... error handler\n})\n \nsql.connect(config).then(pool => {\n    return pool.request()\n        .query(query)\n}).then(result => {\n    console.log(result.recordset)\n}).catch(err => {\n    console.log(err)\n});\n", "date": "Nov 13 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Elated Echidna", "source_name": null, "source_url": null},
{"title": "node js mysql starter github", "code": "# clone it\ngit clone git@github.com:dainiusgliebus/nodejs-express-rest-mysql-starter\ncd nodejs-express-rest-mysql-starter\n\n# Make it your own\nrm -rf .git && git init && npm init\n\n# Install dependencies\nnpm install\n\n# Create mysql database and copy sql to database from sql/users.sql\n# Copy .env.example to .env and update with local parameters\ncp .env.example .env\n\n# Run test\nnpm run test\n\n# Run test-reload\nnpm run test-watch\n\n# Start development live-reload server\nnpm run dev\n\n# Start production server:\nnpm start", "date": "Jul 14 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Perfect Pheasant", "source_name": "github.com", "source_url": "https://github.com/dainiusgliebus/nodejs-express-rest-mysql-starter"},
{"title": "node js mysql escape string", "code": "// Escape values:\n\nlet escaped = mysql.escape('myString');\n\n// or\n\nmysql.query(\n  \"SELECT * FROM `table` WHERE `str1`=? AND `str2`=?\",\n  ['myString1', 'myString2'],\n  (err, result)=>{}\n);\n\n// Escape identifiers:\n\nmysql.query(\n  \"SELECT * FROM ??\",\t// note the double ?\n  ['tablename'],\n  (err, result)=>{}\n);", "date": "Jun 01 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "node js mongoose text index", "code": "var schema = new Schema({\n  name: String,\n  email: String,\n  profile: {\n    something: String,\n    somethingElse: String\n  }\n});\nschema.index({name: 'text', 'profile.something': 'text'});", "date": "Mar 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Arex", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/28775051/best-way-to-perform-a-full-text-search-in-mongodb-and-mongoose"},
{"title": "node js mongoose async await", "code": "const connectToDb = async () => {\n  try {\n    await mongoose.connect(<connection_string>, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n    });\n    console.log(\"Db connection success\");\n  } catch (err) {\n    console.log(err.message);\n    process.exit(1)\n  }\n};", "date": "Jul 03 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "node js module require multiple functions from one node", "code": "exports.method = function() {};\nexports.otherMethod = function() {};\n", "date": "Feb 04 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Helpless Hedgehog", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/16631064/declare-multiple-module-exports-in-node-js"},
{"title": "node js module require multiple functions from one node", "code": "module.exports = {\n    method: function() {},\n    otherMethod: function() {},\n};\n", "date": "Feb 04 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Helpless Hedgehog", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/16631064/declare-multiple-module-exports-in-node-js"},
{"title": "node js module require multiple functions from one node", "code": "const myModule = require('./myModule.js');\nconst method = myModule.method;\nconst otherMethod = myModule.otherMethod;\n// OR:\nconst {method, otherMethod} = require('./myModule.js');\n", "date": "Feb 04 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Helpless Hedgehog", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/16631064/declare-multiple-module-exports-in-node-js"},
{"title": "module.exports multiple functions", "code": "module.exports = function(firstParam) { console.log(\"You did it\"); },\nmodule.exports = function(secondParam) { console.log(\"Yes you did it\"); }, \n// This may contain more functions", "date": "Sep 20 2020", "vote": -2, "tags": ["javascript", "nodejs", "typescript"], "posted_by": "Silly Stoat", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/16631064/declare-multiple-module-exports-in-node-js"},
{"title": "how to export a class in node js", "code": "class TestClass {\n  \n}\n\nmodule.exports.TestClass = TestClass;\n", "date": "Feb 05 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Embarrassed Earthworm", "source_name": null, "source_url": null},
{"title": "node js module export class", "code": "module.exports = class Person {\n\tconstructor(firstName, lastName) {\n\t\tthis.firstName = firstName;\n\t\tthis.lastName = lastName;\n\t}\n\n\tdisplay() {\n\t\tconsole.log(this.firstName + \" \" + this.lastName);\n\t}\n}", "date": "Oct 04 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Silly Seahorse", "source_name": null, "source_url": null},
{"title": "node js middleware for parsing formdata", "code": "npm install -S express-formidable\n", "date": "Apr 20 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Brainy Buzzard", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/30654747/parsing-post-form-data-node-js-express"},
{"title": "kill node process", "code": "The Difference Between kill and pkill\nThe kill command is a wrapper to the kill system call, which knows only about process IDs. pkill can determine the process ID based on things like, process name, owner of the process or session id.\n\nSyntax:\n$ kill 1234\n$ pkill -f node\n", "date": "Mar 31 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Ankur", "source_name": "medium.com", "source_url": "https://medium.com/@mhagemann/how-to-terminate-a-nodejs-process-aa64aba56eb3"},
{"title": "js kill process", "code": "process.kill(process.pid, 'SIGINT');", "date": "Feb 01 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Im_Arxus", "source_name": null, "source_url": null},
{"title": "node js kill process", "code": "process.exit()\n\n//or\n\nif (condition){process.exit()}\n\n//or\n\nsetTimeout((function() {\n    return process.exit();\n}), 5000);\n// kill server after 5000ms\n\n//source :\n//https://stackabuse.com/how-to-exit-in-node-js/", "date": "Mar 18 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Attractive Ape", "source_name": null, "source_url": null},
{"title": "node js list all installed modules", "code": "npm -g ls --depth=0", "date": "Jan 31 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "PerryGamerPT", "source_name": null, "source_url": null},
{"title": "node js kill port", "code": "taskkill /f /im node.exe", "date": "Sep 20 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Friendly Fish", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/14790910/stop-all-instances-of-node-js-server"},
{"title": "node js on ctrl c", "code": "process.on('SIGINT', function() {\n    console.log(\"Caught interrupt signal\");\n\n    if (i_should_exit)\n        process.exit();\n});", "date": "Mar 13 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Average Addax", "source_name": null, "source_url": null},
{"title": "node js interview questions", "code": "What is Node.js? What is it used for?\n\nQ2. What is Event-driven programming?\n\nQ3. What is Event loop in Node.js work? And How does it work?\n\nQ4. What is REPL in Node.js?\nQ5. What is the purpose of module.exports in Node.js?\n\nQ6. What is the difference between Asynchronous and Non-blocking?\n\nQ7. What is Tracing in Node.js?\n\nQ8. How will you debug an application in Node.js?\n\nQ9. Difference between setImmediate() vs setTimeout()\n\nQ10. What is process.nextTick()\nvent loop continues.\nQ11. What is package.json? What is it used for?\n\nQ12. What is libuv?\nlibuv is a multi-platform support library with a focus on asynchronous I/O. It was primarily developed for use by Node.js, but it\u2019s also used by Luvit, Julia, pyuv, and others.\nWhen the node.js project began in 2009 as a JavaScript environment decoupled from the browser, it is using Google\u2019s V8 and Marc Lehmann\u2019s libev, node.js combined a model of I/O \u2013 evented \u2013 with a language that was well suited to the style of programming; due to the way it had been shaped by browsers. As node.js grew in popularity, it was important to make it work on Windows, but libev ran only on Unix. libuv was an abstraction around libev or IOCP depending on the platform, providing users an API based on libev. In the node-v0.9.0 version of libuv libev was removed.\nSome of the features of libuv are:\nFull-featured event loop backed by epoll, kqueue, IOCP, event ports.\nAsynchronous TCP and UDP sockets\nAsynchronous file and file system operations\nChild processes\nFile system events\nQ13. What are some of the most popular modules of Node.js?\nThere are many most popular, most starred or most downloaded modules in Node.js. Some of them are:\nexpress\nasync\nbrowserify\nsocket.io\nbower\ngulp\ngrunt\nQ14. What is EventEmitter in Node.js?\nAll objects that emit events are instances of the EventEmitter class. These objects expose an eventEmitter.on() function that allows one or more functions to be attached to named events emitted by the object.\nWhen the EventEmitter object emits an event, all of the functions attached to that specific event are called synchronously.\n", "date": "Aug 07 2020", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "Soccer Star", "source_name": null, "source_url": null},
{"title": "node js interview questions interviewbit", "code": "hoistedVariable = 3;\nconsole.log(hoistedVariable); // outputs 3 even when the variable is declared after it is initialized\t\nvar hoistedVariable;\n", "date": "Mar 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Dark Deer", "source_name": "www.interviewbit.com", "source_url": "https://www.interviewbit.com/javascript-interview-questions/#javascript-hoisting"},
{"title": "node js interview questions", "code": "What is Node.js? What is it used for?\n\nQ2. What is Event-driven programming?\n\nQ3. What is Event loop in Node.js work? And How does it work?\n\nQ4. What is REPL in Node.js?\nQ5. What is the purpose of module.exports in Node.js?\n\nQ6. What is the difference between Asynchronous and Non-blocking?\n\nQ7. What is Tracing in Node.js?\n\nQ8. How will you debug an application in Node.js?\n\nQ9. Difference between setImmediate() vs setTimeout()\n\nQ10. What is process.nextTick()\nvent loop continues.\nQ11. What is package.json? What is it used for?\n\nQ12. What is libuv?\nlibuv is a multi-platform support library with a focus on asynchronous I/O. It was primarily developed for use by Node.js, but it\u2019s also used by Luvit, Julia, pyuv, and others.\nWhen the node.js project began in 2009 as a JavaScript environment decoupled from the browser, it is using Google\u2019s V8 and Marc Lehmann\u2019s libev, node.js combined a model of I/O \u2013 evented \u2013 with a language that was well suited to the style of programming; due to the way it had been shaped by browsers. As node.js grew in popularity, it was important to make it work on Windows, but libev ran only on Unix. libuv was an abstraction around libev or IOCP depending on the platform, providing users an API based on libev. In the node-v0.9.0 version of libuv libev was removed.\nSome of the features of libuv are:\nFull-featured event loop backed by epoll, kqueue, IOCP, event ports.\nAsynchronous TCP and UDP sockets\nAsynchronous file and file system operations\nChild processes\nFile system events\nQ13. What are some of the most popular modules of Node.js?\nThere are many most popular, most starred or most downloaded modules in Node.js. Some of them are:\nexpress\nasync\nbrowserify\nsocket.io\nbower\ngulp\ngrunt\nQ14. What is EventEmitter in Node.js?\nAll objects that emit events are instances of the EventEmitter class. These objects expose an eventEmitter.on() function that allows one or more functions to be attached to named events emitted by the object.\nWhen the EventEmitter object emits an event, all of the functions attached to that specific event are called synchronously.\n", "date": "Aug 07 2020", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "Soccer Star", "source_name": null, "source_url": null},
{"title": "node js interview questions", "code": "what is a monolith server\t\t\t\t\t\t\nwhat does mean by async and sync in javascript\t\t\t\thttps://youtu.be/h0ZUpPiV1ac?t=569\t\t\nA higher order function which takes function as an argument\t\t\t\t\t\t\n\"handlebars is a template engine like Jade.\nVash.\nEJS.\nMustache.\nDust.js.\nNunjucks.\nHandlebars.\natpl\"\t\t\t\t\t\t\nES6 features\t\t\t\t\t\t\nOOP programming in nodejs\t\t\t\t\t\t\nhow to allow cors in nodejs server using express and http module and cors module\t\t\t\t\t\t\nwhat is refrential transparency\t\t\thttps://www.google.com/search?q=referential+transparency&oq=refrential+tra&aqs=chrome.1.69i57j0i10l7.5812j0j1&sourceid=chrome&ie=UTF-8\t\t\t\nWhat is difference between REST API and RESTful API?\t\t\t\t\t\t", "date": "Apr 03 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Glorious Gull", "source_name": null, "source_url": null},
{"title": "javascript advanced interview questions", "code": "\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">addNode</span>(<span class=\"hljs-params\"></span>) </span>{ <span class=\"hljs-keyword\">var</span> newP = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">\"p\"</span>);\n\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> textNode = <span class=\"hljs-built_in\">document</span>.createTextNode(<span class=\"hljs-string\">\" This is a new text node\"</span>);\n\t\t\t\t\t\t\t\t\t\tnewP.appendChild(textNode); <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"firstP\"</span>).appendChild(newP); }\n\n", "date": "Nov 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Impossible Iguana", "source_name": "hackr.io", "source_url": "https://hackr.io/blog/javascript-interview-questions"},
{"title": "node js interview questions interviewbit", "code": "hoistedVariable = 3;\nconsole.log(hoistedVariable); // outputs 3 even when the variable is declared after it is initialized\t\nvar hoistedVariable;\n", "date": "Mar 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Dark Deer", "source_name": "www.interviewbit.com", "source_url": "https://www.interviewbit.com/javascript-interview-questions/#javascript-hoisting"},
{"title": "node js inheritance es6", "code": "class Vehicle {   constructor (name, type) {    this.name = name;    this.type = type;  }   getName () {    return this.name;  }   getType () {    return this.type;  } }class Car extends Vehicle {   constructor (name) {    super(name, 'car');  }   getName () {    return 'It is a car: ' + super.getName();  } }let car = new Car('Tesla');console.log(car.getName()); // It is a car: Teslaconsole.log(car.getType()); // car", "date": "Apr 30 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Thoughtful Thrush", "source_name": "medium.com", "source_url": "https://medium.com/ecmascript-2015/es6-classes-and-inheritance-607804080906"},
{"title": "node js if no arguments", "code": "let arguments = args.slice(0).join(' ');\nif(!arguments) return;\n//You don't have to keep \"return;\", you can return anything, for example, a message", "date": "Jan 16 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "HeyItsDeveloperRhys", "source_name": null, "source_url": null},
{"title": "else if javascript", "code": "if (condition1) {\n\u00a0\u00a0// code to be executed if condition1 is true\n} else if (condition2) {\n\u00a0\u00a0// code to be executed if the condition1 is false and condition2 is true\n} else {\n\u00a0\u00a0// code to be executed if the condition1 is false and condition2 is false\n}", "date": "Jul 25 2020", "vote": 22, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "javascript if statement", "code": "if (5 < 10) {\n\tconsole.log(\"5 is less than 10\");\n} else {\n\tconsole.log(\"5 is now bigger than 10\")\n}", "date": "Apr 26 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Craqed  on YT", "source_name": null, "source_url": null},
{"title": "if statements javascript", "code": "if (pros < 10) {\n  console.log(\"LESS THAN 10 PROS!\");\n}\nelse if (pros < 5) {\n  console.log(\"LESS THAN 5 PROS!\");\n}\nelse {\n  console.log(\"How many pros are there?\");\n}", "date": "Sep 22 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Lava", "source_name": null, "source_url": null},
{"title": "node js if", "code": "if(){ //Note, you cant leave if() empty. You have to put something in it, for exmaple, if(args[0] === \"hi\")\n\t//Your code here   \t\n}", "date": "Jan 16 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "HeyItsDeveloperRhys", "source_name": null, "source_url": null},
{"title": "node js else", "code": "//if(args[0] === \"hi\"){\n// console.log(\"Hello!\"); \n//}\nelse {\n  //Your code here\n}", "date": "Jan 16 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "HeyItsDeveloperRhys", "source_name": null, "source_url": null},
{"title": "node js how to basic auth to specific urk", "code": "var request = require('request')\nvar username = 'fooUsername'\nvar password = 'fooPassword'\nvar options = {\n  url: 'http://localhost:1234/api/res/xyz',\n  auth: {\n    user: username,\n    password: password\n  }\n}\n\nrequest(options, function (err, res, body) {\n  if (err) {\n    console.dir(err)\n    return\n  }\n  console.dir('headers', res.headers)\n  console.dir('status code', res.statusCode)\n  console.dir(body)\n})", "date": "Aug 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Super Starling", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/15986204/how-to-do-auth-in-node-js-client"},
{"title": "get query parameters in node.js", "code": "var express = require('express');\nvar app = express();\n\napp.get('/', function(req, res){\n  res.send('id: ' + req.query.id);\n});\n\napp.listen(3000);", "date": "May 14 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Fair Finch", "source_name": null, "source_url": null},
{"title": "node js http request get parameters", "code": "const http = require('http');\nconst url = require('url');\n\nhttp.createServer(function (req, res) {\n  const queryObject = url.parse(req.url,true).query;\n  console.log(queryObject);\n\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.end('Feel free to add query parameters to the end of the url');\n}).listen(8080);", "date": "Jun 14 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Friendly Finch", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/HTTP/clients/how-to-access-query-string-parameters/"},
{"title": "node js github actions with mongodb", "code": "name: Run tests\n\non: [push]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        node-version: [12.x, 14.x]\n        mongodb-version: [4.0, 4.2, 4.4]\n\n    steps:\n    - name: Git checkout\n      uses: actions/checkout@v2\n\n    - name: Use Node.js ${{ matrix.node-version }}\n      uses: actions/setup-node@v1\n      with:\n        node-version: ${{ matrix.node-version }}\n\n    - name: Start MongoDB\n      uses: supercharge/mongodb-github-action@1.3.0\n      with:\n        mongodb-version: ${{ matrix.mongodb-version }}\n\n    - run: npm install\n\n    - run: npm test\n      env:\n        CI: true", "date": "Mar 22 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Naughty Nightingale", "source_name": "github.com", "source_url": "https://github.com/marketplace/actions/mongodb-in-github-actions"},
{"title": "node js get time in timezone", "code": "// Javascript timestamps are specified in milliseconds\nlet ts = 1581338765000;\n\nlet nz_date_string = new Date(ts).toLocaleString(\"en-US\", { timeZone: \"Pacific/Chatham\" });\n\n// rest of the code", "date": "May 01 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Undefined", "source_name": null, "source_url": null},
{"title": "node js get file name without extension", "code": "filename.split('.').slice(0, -1).join('.')\n", "date": "Oct 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "p_snehanshu", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/4250364/how-to-trim-a-file-extension-from-a-string-in-javascript"},
{"title": "node js function infinite parameters", "code": "function print(...args) {\n  args.forEach((arg, index) => {\n    console.log(arg);\n  });\n}\n\nprint('hello', true, new Date());", "date": "Jun 01 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "node list files in directory", "code": "\n//requiring path and fs modules\nconst path = require('path');\nconst fs = require('fs');\n//joining path of directory \nconst directoryPath = path.join(__dirname, 'Documents');\n//passsing directoryPath and callback function\nfs.readdir(directoryPath, function (err, files) {\n    //handling error\n    if (err) {\n        return console.log('Unable to scan directory: ' + err);\n    } \n    //listing all files using forEach\n    files.forEach(function (file) {\n        // Do whatever you want to do with the file\n        console.log(file); \n    });\n});", "date": "Jun 26 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Clever Crane", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/2727167/how-do-you-get-a-list-of-the-names-of-all-files-present-in-a-directory-in-node-j"},
{"title": "node js get files in dir", "code": "const path = require('path');\nconst fs = require('fs');\n\nfs.readdir(\n  path.resolve(__dirname, 'MyFolder'),\n  (err, files) => {\n    if (err) throw err;\n    \n    for (let file of files) {\n      console.log(file);\n    }\n  }\n);", "date": "Sep 07 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "node js firebird example", "code": "//\u00a05\u00a0=\u00a0the\u00a0number\u00a0is\u00a0count\u00a0of\u00a0opened\u00a0socketsvar\u00a0pool\u00a0=\u00a0Firebird.pool(5,\u00a0options);\u00a0//\u00a0Get\u00a0a\u00a0free\u00a0poolpool.get(function(err,\u00a0db)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(err)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0err;\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0db\u00a0=\u00a0DATABASE\u00a0\u00a0\u00a0\u00a0db.query('SELECT\u00a0*\u00a0FROM\u00a0TABLE',\u00a0function(err,\u00a0result)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0IMPORTANT:\u00a0release\u00a0the\u00a0pool\u00a0connection\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0db.detach();\u00a0\u00a0\u00a0\u00a0});});\u00a0//\u00a0Destroy\u00a0poolpool.destroy();", "date": "Apr 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Long Ladybird", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-firebird"},
{"title": "node js firebird example", "code": "fb.attach(_connection,\u00a0function(err,\u00a0svc)\u00a0{\u00a0\u00a0\u00a0\u00a0if\u00a0(err)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\u00a0\u00a0\u00a0\u00a0//\u00a0all\u00a0function\u00a0that\u00a0return\u00a0a\u00a0stream\u00a0take\u00a0two\u00a0optional\u00a0parameter\u00a0\u00a0\u00a0\u00a0//\u00a0optread\u00a0=>\u00a0byline\u00a0or\u00a0buffer\u00a0\u00a0byline\u00a0use\u00a0isc_info_svc_line\u00a0and\u00a0buffer\u00a0use\u00a0isc_info_svc_to_eof\u00a0\u00a0\u00a0\u00a0//\u00a0buffersize\u00a0=>\u00a0is\u00a0the\u00a0buffer\u00a0for\u00a0service\u00a0manager\u00a0it\u00a0can't\u00a0exceed\u00a08ko\u00a0(i'm\u00a0not\u00a0sure)\u00a0\u00a0\u00a0\u00a0\u00a0svc.getLog({optread:'buffer',\u00a0buffersize:2048},\u00a0function\u00a0(err,\u00a0data)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0data\u00a0is\u00a0a\u00a0readablestream\u00a0that\u00a0contain\u00a0the\u00a0firebird.log\u00a0file\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(err);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0data.on('data',\u00a0function\u00a0(data)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(data.toString());\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0data.on('end',\u00a0function()\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log('finish');\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0an\u00a0other\u00a0exemple\u00a0to\u00a0use\u00a0function\u00a0that\u00a0return\u00a0object\u00a0\u00a0\u00a0\u00a0svc.getFbserverInfos(\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"dbinfo\"\u00a0:\u00a0true,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"fbconfig\"\u00a0:\u00a0true,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"svcversion\"\u00a0:\u00a0true,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"fbversion\"\u00a0:\u00a0true,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"fbimplementation\"\u00a0:\u00a0true,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"fbcapatibilities\"\u00a0:\u00a0true,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"pathsecuritydb\"\u00a0:\u00a0true,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"fbenv\"\u00a0:\u00a0true,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"fbenvlock\"\u00a0:\u00a0true,\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"fbenvmsg\"\u00a0:\u00a0true\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0},\u00a0{},\u00a0function\u00a0(err,\u00a0data)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(err);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log(data);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});});\u00a0", "date": "Apr 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Long Ladybird", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-firebird"},
{"title": "node js firebird example", "code": "//\u00a0each\u00a0row\u00a0:\u00a0fctname\u00a0:\u00a0[params],\u00a0typeofreturnvar\u00a0fbsvc\u00a0=\u00a0{\u00a0\u00a0\u00a0\u00a0\"backup\"\u00a0:\u00a0{\u00a0[\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"nbackup\"\u00a0:\u00a0{\u00a0[\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"restore\"\u00a0:\u00a0{\u00a0[\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"nrestore\"\u00a0:\u00a0{\u00a0[\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"setDialect\":\u00a0{\u00a0[\u00a0\"database\",\"dialect\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"setSweepinterval\":\u00a0{\u00a0[\u00a0\"database\",\"sweepinterval\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"setCachebuffer\"\u00a0:\u00a0{\u00a0[\u00a0\"database\",\"nbpagebuffers\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"BringOnline\"\u00a0:\u00a0{\u00a0[\u00a0\"database\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"Shutdown\"\u00a0:\u00a0{\u00a0[\u00a0\"database\",\"shutdown\",\"shutdowndelay\",\"shutdownmode\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"setShadow\"\u00a0:\u00a0{\u00a0[\u00a0\"database\",\"activateshadow\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"setForcewrite\"\u00a0:\u00a0{\u00a0[\u00a0\"database\",\"forcewrite\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"setReservespace\"\u00a0:\u00a0{\u00a0[\u00a0\"database\",\"reservespace\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"setReadonlyMode\"\u00a0:\u00a0{\u00a0[\u00a0\"database\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"setReadwriteMode\"\u00a0:\u00a0{\u00a0[\u00a0\"database\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"validate\"\u00a0:\u00a0{\u00a0[\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"commit\"\u00a0:\u00a0{\u00a0[\u00a0\"database\",\u00a0\"transactid\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"rollback\"\u00a0:\u00a0{\u00a0[\u00a0\"database\",\u00a0\"transactid\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"recover\"\u00a0:\u00a0{\u00a0[\u00a0\"database\",\u00a0\"transactid\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"getStats\"\u00a0:\u00a0{\u00a0[\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"getLog\"\u00a0:\u00a0{\u00a0[\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"getUsers\"\u00a0:\u00a0{\u00a0[\u00a0\"username\"],\u00a0\"object\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"addUser\"\u00a0:\u00a0{\u00a0[\u00a0\"username\",\u00a0\"password\",\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"editUser\"\u00a0:\u00a0{\u00a0[\u00a0\"username\",\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"removeUser\"\u00a0:\u00a0{\u00a0[\u00a0\"username\",\"rolename\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"getFbserverInfos\"\u00a0:\u00a0{\u00a0[\u00a0\"options\",\u00a0\"options\"],\u00a0\"object\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"startTrace\"\u00a0:\u00a0{\u00a0[\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"suspendTrace\"\u00a0:\u00a0{\u00a0[\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"resumeTrace\"\u00a0:\u00a0{\u00a0[\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"stopTrace\"\u00a0:\u00a0{\u00a0[\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"getTraceList\"\u00a0:\u00a0{\u00a0[\u00a0\"options\"],\u00a0\"stream\"\u00a0},\u00a0\u00a0\u00a0\u00a0\"hasActionRunning\"\u00a0:\u00a0{\u00a0[\u00a0\"options\"],\u00a0\"object\"}}\u00a0", "date": "Apr 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Long Ladybird", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-firebird"},
{"title": "node js firebird example", "code": "Firebird.attach(options,\u00a0function(err,\u00a0db)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(err)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0err;\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0db\u00a0=\u00a0DATABASE\u00a0\u00a0\u00a0\u00a0db.query('SELECT\u00a0*\u00a0FROM\u00a0TABLE',\u00a0function(err,\u00a0result)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0IMPORTANT:\u00a0close\u00a0the\u00a0connection\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0db.detach();\u00a0\u00a0\u00a0\u00a0});\u00a0});", "date": "Apr 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Long Ladybird", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-firebird"},
{"title": "node js firebird example", "code": "var\u00a0{\u00a0GDSCode\u00a0}\u00a0=\u00a0require('node-firebird/lib/gdscodes');/*...*/db.query('insert\u00a0into\u00a0my_table(id,\u00a0name)\u00a0values\u00a0(?,\u00a0?)',\u00a0[1,\u00a0'John\u00a0Doe'],\u00a0\u00a0\u00a0\u00a0function\u00a0(err)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if(err.gdscode\u00a0==\u00a0GDSCode.UNIQUE_KEY_VIOLATION){\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log('constraint\u00a0name:'+\u00a0err.gdsparams[0]);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0console.log('table\u00a0name:'+\u00a0err.gdsparams[0]);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/*...*/\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/*...*/\u00a0\u00a0\u00a0\u00a0});\u00a0", "date": "Apr 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Long Ladybird", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-firebird"},
{"title": "node js firebird example", "code": "const\u00a0config\u00a0=\u00a0{...};\u00a0//\u00a0Classic\u00a0configuration\u00a0with\u00a0manager\u00a0=\u00a0trueconst\u00a0RESTORE_OPTS\u00a0=\u00a0{\u00a0\u00a0\u00a0\u00a0database:\u00a0'database.fdb',\u00a0\u00a0\u00a0\u00a0files:\u00a0['backup.fbk']};\u00a0Firebird.attach(config,\u00a0(err,\u00a0srv)\u00a0=>\u00a0{\u00a0\u00a0\u00a0\u00a0srv.restore(RESTORE_OPTS,\u00a0(err,\u00a0data)\u00a0=>\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0data.on('data',\u00a0()\u00a0=>\u00a0{});\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0data.on('end',\u00a0()\u00a0=>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0srv.detach();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0});});", "date": "Apr 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Long Ladybird", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-firebird"},
{"title": "node js firebird example", "code": "var\u00a0options\u00a0=\u00a0{};\u00a0options.host\u00a0=\u00a0'127.0.0.1';options.port\u00a0=\u00a03050;options.database\u00a0=\u00a0'database.fdb';options.user\u00a0=\u00a0'SYSDBA';options.password\u00a0=\u00a0'masterkey';options.lowercase_keys\u00a0=\u00a0false;\u00a0//\u00a0set\u00a0to\u00a0true\u00a0to\u00a0lowercase\u00a0keysoptions.role\u00a0=\u00a0null;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0defaultoptions.pageSize\u00a0=\u00a04096;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0default\u00a0when\u00a0creating\u00a0database\u00a0", "date": "Apr 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Long Ladybird", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-firebird"},
{"title": "node js firebird example", "code": "var\u00a0sql1\u00a0=\u00a0'SELECT\u00a0*\u00a0FROM\u00a0TBL_USER\u00a0WHERE\u00a0ID>'\u00a0+\u00a0Firebird.escape(1);var\u00a0sql2\u00a0=\u00a0'SELECT\u00a0*\u00a0FROM\u00a0TBL_USER\u00a0WHERE\u00a0NAME='\u00a0+\u00a0Firebird.escape('Pe\\'er');var\u00a0sql3\u00a0=\u00a0'SELECT\u00a0*\u00a0FROM\u00a0TBL_USER\u00a0WHERE\u00a0CREATED<='\u00a0+\u00a0Firebird.escape(new\u00a0Date());var\u00a0sql4\u00a0=\u00a0'SELECT\u00a0*\u00a0FROM\u00a0TBL_USER\u00a0WHERE\u00a0NEWSLETTER='\u00a0+\u00a0Firebird.escape(true);\u00a0//\u00a0or\u00a0db.escape()\u00a0console.log(sql1);console.log(sql2);console.log(sql3);console.log(sql4);", "date": "Apr 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Long Ladybird", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-firebird"},
{"title": "node js firebird example", "code": "Firebird.attach(options,\u00a0function(err,\u00a0db)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(err)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0err;\u00a0\u00a0\u00a0\u00a0\u00a0db.on('row',\u00a0function(row,\u00a0index,\u00a0isObject)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0index\u00a0===\u00a0Number\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0isObject\u00a0===\u00a0is\u00a0row\u00a0object\u00a0or\u00a0array?\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0db.on('result',\u00a0function(result)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0result\u00a0===\u00a0Array\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0db.on('attach',\u00a0function()\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0db.on('detach',\u00a0function(isPoolConnection)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0isPoolConnection\u00a0==\u00a0Boolean\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0db.on('reconnect',\u00a0function()\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0db.on('error',\u00a0function(err)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0db.on('transaction',\u00a0function(isolation)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0isolation\u00a0===\u00a0Number\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0db.on('commit',\u00a0function()\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0db.on('rollback',\u00a0function()\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0db.detach();});", "date": "Apr 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Long Ladybird", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-firebird"},
{"title": "node js firebird example", "code": "Firebird.attach(options,\u00a0function(err,\u00a0db)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(err)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0throw\u00a0err;\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0db\u00a0=\u00a0DATABASE\u00a0\u00a0\u00a0\u00a0db.transaction(Firebird.ISOLATION_READ_COMMITED,\u00a0function(err,\u00a0transaction)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0transaction.query('INSERT\u00a0INTO\u00a0users\u00a0VALUE(?,?)',\u00a0[1,\u00a0'Janko'],\u00a0function(err,\u00a0result)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(err)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0transaction.rollback();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0transaction.commit(function(err)\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0(err)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0transaction.rollback();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0db.detach();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0});});", "date": "Apr 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Long Ladybird", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-firebird"},
{"title": "node js find directory change directory", "code": "// get current directory \nvar cur_dir = process.cwd();\nconsole.log(cur_dir);\n// change current directory\n\nprocess.chdir('C:\\\\Projects\\\\experiments');\nconsole.log(process.cwd()); \n\n// path.join for cross-platform paths:\nconst path = require('path');\nprocess.chdir(path.join('C:', 'Projects', 'experiments'));\nconsole.log(process.cwd()); \nprocess.exit();", "date": "Dec 26 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "onjay ernquestfay ", "source_name": null, "source_url": null},
{"title": "node js fetch data from url", "code": "var http = require('http');\n\nvar options = {\n    host: 'google.com',\n    path: '/'\n}\nvar request = http.request(options, function (res) {\n    var data = '';\n    res.on('data', function (chunk) {\n        data += chunk;\n    });\n    res.on('end', function () {\n        console.log(data);\n\n    });\n});\nrequest.on('error', function (e) {\n    console.log(e.message);\n});\nrequest.end();", "date": "Oct 10 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Average Aardvark", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/6287297/reading-content-from-url-with-node-js"},
{"title": "node js ffmpeg image to video", "code": "const frames = ['frame1.jpg', 'frame2.jpg', ...]\n\nconst conv = ffmpeg() // create converter\nconst input = conv.input({f: 'image2pipe', r: 30}) // create input writable stream\nconv.output('out.mp4', {vcodec: 'libx264', pix_fmt: 'yuv420p'}) // output to file\n\n// for every frame create a function that returns a promise\nframes.map(filename => () =>\n  new Promise((fulfill, reject) =>\n    s3\n      .getObject({Bucket: '...', Key: filename})\n      .createReadStream()\n      .on('end', fulfill) // fulfill promise on frame end\n      .on('error', reject) // reject promise on error\n      .pipe(input, {end: false}) // pipe to converter, but don't end the input yet\n  )\n)\n// reduce into a single promise, run sequentially\n.reduce((prev, next) => prev.then(next), Promise.resolve())\n// end converter input\n.then(() => input.end())\n\nconv.run()", "date": "Apr 11 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "If-dev", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/44437401/using-node-fluent-ffmpeg-for-converting-images-to-video"},
{"title": "express redirect", "code": "res.redirect('/foo/bar')\nres.redirect('http://example.com')\nres.redirect(301, 'http://example.com')\nres.redirect('../login')\n", "date": "Dec 13 2019", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Defeated Dog", "source_name": null, "source_url": null},
{"title": "node js http request express", "code": "npm install request@2.81.0\n", "date": "Feb 04 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Cheerful Chimpanzee", "source_name": "www.twilio.com", "source_url": "https://www.twilio.com/blog/2017/08/http-requests-in-node-js.html"},
{"title": "node js fetch", "code": "const fetch = require('node-fetch');\t//npm install node-fetch\n\nfetch('https://httpbin.org/post', {\n  method: 'POST',\n  body: 'a=1'\n})\n  .then(res => res.json())\n  .then(json => {\n\t// Do something...\n  })\n  .catch(err => console.log(err));", "date": "Jun 02 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-fetch"},
{"title": "how to install node fetch", "code": "$\u00a0npm\u00a0install\u00a0node-fetch\u00a0--save", "date": "Jun 10 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Puzzled Puffin", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-fetch"},
{"title": "node fetch", "code": "const fetch = require('node-fetch');", "date": "May 07 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Undefined", "source_name": null, "source_url": null},
{"title": "express get url parameters", "code": "app.get('/path/:name', function(req, res) {\n  res.send(\"tagId is set to \" + req.params.name);\n});", "date": "Jul 03 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "express param in url", "code": "app.get('/p/:tagId', function(req, res) {\n  res.send(\"tagId is set to \" + req.params.tagId);\n});\n\n// GET /p/5\n// tagId is set to 5\n", "date": "Oct 14 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "SirSundays", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/20089582/how-to-get-a-url-parameter-in-express"},
{"title": "node js express url parameters", "code": "// http://localhost:8080/api/1\napp.get('/api/:version', function(req, res) {\n    res.send(req.params.version);\n});", "date": "Oct 11 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Fair Fowl", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/use-expressjs-to-get-url-and-post-parameters"},
{"title": "express route parameters", "code": "app.get('/',function(req,res)\n{\n    res.send(\"Route path at base address\");\n});", "date": "Sep 20 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Wrong Wasp", "source_name": "modernweb.com", "source_url": "https://modernweb.com/the-basics-of-express-routes/"},
{"title": "node js favicon.ico", "code": "\u00a0\nvar favicon = require('serve-favicon');\napp.use(favicon(path.join(__dirname, 'public/images', 'favicon.ico')));\n\u00a0\n", "date": "Oct 12 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Adorable Antelope", "source_name": "zinlee.tistory.com", "source_url": "https://zinlee.tistory.com/entry/nodejs%EC%97%90%EC%84%9C-%ED%8C%8C%EB%B9%84%EC%BD%98favicon-%EC%84%A4%EC%A0%95-%EB%B0%A9%EB%B2%95"},
{"title": "node express server static files", "code": "var express = require('express');\nvar app = express();\nvar path = require('path');\n\n//app.use(express.static(__dirname)); // Current directory is root\napp.use(express.static(path.join(__dirname, 'public'))); //  \"public\" off of current is root\n\napp.listen(80);\nconsole.log('Listening on port 80');", "date": "May 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "JDog", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/10434001/static-files-with-express-js"},
{"title": "app.use public", "code": "app.use(express.static('public'))\napp.use(express.static('files'))\n", "date": "Apr 02 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/static-files.html"},
{"title": "node js express static folder", "code": "// node js -> express -> basic example: static folder, 404 page\n\nconst express = require('express');\nconst path = require('path');\nconst PORT = process.env.PORT || 5000;\n\nconst app = express();\n\nfunction error404(req, res) {\n  res.status(404);\n\n  if (req.accepts('html')) {\n    res.sendFile(path.join(__dirname, 'public/errors/404.html'));\n    return;\n  }\n\n  if (req.accepts('json')) {\n    res.send({\n      status: 404,\n      error: 'Not found'\n    });\n    return;\n  }\n  \n  res.type('txt').send('404 - Not found');\n}\n\napp\n  .use(express.static(path.join(__dirname, 'public')))\n  .use(error404)\n  .listen(PORT, () => console.log(`Listening on ${ PORT }`));\n", "date": "Jul 06 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "app.use public", "code": "express.static(root, [options])\n", "date": "Apr 02 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/static-files.html"},
{"title": "express js server", "code": "const express = require('express');\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\napp.get('/', (req, res) => {\n  res.send('<h1>Some HTML</h1>');\n  res.send('<p>Even more HTML</p>');\n});\n\napp.listen(PORT, () => console.log(`Server is listening on port ${PORT}`));", "date": "Sep 29 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "amazingcoder444Rblx", "source_name": null, "source_url": null},
{"title": "node.js express", "code": "const express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))", "date": "Jun 05 2020", "vote": 16, "tags": ["javascript", "nodejs"], "posted_by": "Vincent Lab", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/hello-world.html"},
{"title": "express js", "code": "\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => {\n  res.send('Hello World!')\n})\n\napp.listen(port, () => {\n  console.log(`Example app listening at http://localhost:${port}`)\n})\n\n", "date": "Dec 18 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "The French Doctor", "source_name": "expressjs.com", "source_url": "https://expressjs.com/fr/starter/hello-world.html"},
{"title": "node js express", "code": "basic server\n\nconst express =require('express');\nconst app = express();\nconst PORT = 5000;\n\n\napp.get('/',(req,res)=>{\n   res.json({message: 'Welcome to the backend'})\n})\n\n\napp.listen(PORT ,()=>console.log(`Connected to ${PORT}`)\n           \n           ", "date": "Apr 02 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Arqa", "source_name": null, "source_url": null},
{"title": "express and node", "code": "// Load HTTP module\nconst http = require(\"http\");\n\nconst hostname = \"127.0.0.1\";\nconst port = 8000;\n\n// Create HTTP server \nconst server = http.createServer((req, res) => {\n\n   // Set the response HTTP header with HTTP status and Content type\n   res.writeHead(200, {'Content-Type': 'text/plain'});\n   \n   // Send the response body \"Hello World\"\n   res.end('Hello World\\n');\n});\n\n// Prints a log once the server starts listening\nserver.listen(port, hostname, () => {\n   console.log(`Server running at http://${hostname}:${port}/`);\n})\n", "date": "Nov 23 2019", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Swallow Tail Gull", "source_name": null, "source_url": null},
{"title": "node js express", "code": "// node js -> express -> basic example: static folder, 404 page\n\nconst express = require('express');\nconst path = require('path');\nconst PORT = process.env.PORT || 5000;\n\nconst app = express();\n\nfunction error404(req, res) {\n  res.status(404);\n\n  if (req.accepts('html')) {\n    res.sendFile(path.join(__dirname, 'public/errors/404.html'));\n    return;\n  }\n\n  if (req.accepts('json')) {\n    res.send({\n      status: 404,\n      error: 'Not found'\n    });\n    return;\n  }\n  \n  res.type('txt').send('404 - Not found');\n}\n\napp\n  .use(express.static(path.join(__dirname, 'public')))\n  .use(error404)\n  .listen(PORT, () => console.log(`Listening on ${ PORT }`));\n", "date": "Jun 07 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "node js event emitter", "code": "const EventEmitter = require('events');\n\nclass MyEmitter extends EventEmitter {\n  foo() {\n    this.emit('test');\n  }\n}\nconst myEmitter = new MyEmitter();\nmyEmitter.on('test', () => console.log('Yay, it works!'));\n\nmyEmitter.foo();\t// Yay it works!", "date": "Oct 29 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "event module in node js", "code": "const myEmitter = new MyEmitter();\nlet m = 0;\nmyEmitter.on('event', () => {\n  console.log(++m);\n});\nmyEmitter.emit('event');\n// Prints: 1\nmyEmitter.emit('event');\n// Prints: 2", "date": "Sep 04 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Upset Unicorn", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/events.html"},
{"title": "eventemitter nodejs", "code": "myEmitter.on('status', (code, msg)=> console.log(`Got ${code} and ${msg}`));", "date": "Sep 04 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Dead Dove", "source_name": "www.freecodecamp.org", "source_url": "https://www.freecodecamp.org/news/how-to-code-your-own-event-emitter-in-node-js-a-step-by-step-guide-e13b7e7908e1/"},
{"title": "node js else", "code": "//if(args[0] === \"hi\"){\n// console.log(\"Hello!\"); \n//}\nelse {\n  //Your code here\n}", "date": "Jan 16 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "HeyItsDeveloperRhys", "source_name": null, "source_url": null},
{"title": "node js download file to folder", "code": "var http = require('http');\nvar fs = require('fs');\n\nvar download = function(url, dest, cb) {\n  var file = fs.createWriteStream(dest);\n  var request = http.get(url, function(response) {\n    response.pipe(file);\n    file.on('finish', function() {\n      file.close(cb);  // close() is async, call cb after close completes.\n    });\n  }).on('error', function(err) { // Handle errors\n    fs.unlink(dest); // Delete the file async. (But we don't check the result)\n    if (cb) cb(err.message);\n  });\n};", "date": "Aug 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Quaint Quelea", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/11944932/how-to-download-a-file-with-node-js-without-using-third-party-libraries"},
{"title": "node js do request", "code": "let request = require('request')\n\nconst formData = {\n  // Pass a simple key-value pair\n  my_field: 'my_value',\n  // Pass data via Buffers\n  my_buffer: Buffer.from([1, 2, 3]),\n  // Pass data via Streams\n  my_file: fs.createReadStream(__dirname + '/unicycle.jpg'),\n  // Pass multiple values /w an Array\n  attachments: [\n    fs.createReadStream(__dirname + '/attachment1.jpg'),\n    fs.createReadStream(__dirname + '/attachment2.jpg')\n  ],\n  // Pass optional meta-data with an 'options' object with style: {value: DATA, options: OPTIONS}\n  // Use case: for some types of streams, you'll need to provide \"file\"-related information manually.\n  // See the `form-data` README for more information about options: https://github.com/form-data/form-data\n  custom_file: {\n    value:  fs.createReadStream('/dev/urandom'),\n    options: {\n      filename: 'topsecret.jpg',\n      contentType: 'image/jpeg'\n    }\n  }\n};\nrequest.post({url:'http://service.com/upload', formData: formData}, function optionalCallback(err, httpResponse, body) {\n  if (err) {\n    return console.error('upload failed:', err);\n  }\n  console.log('Upload successful!  Server responded with:', body);\n});", "date": "Jun 22 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Jules", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/request"},
{"title": "node js crud operation", "code": "npm install --save express body-parser mongoose", "date": "May 09 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bright Baboon", "source_name": "codeburst.io", "source_url": "https://codeburst.io/writing-a-crud-app-with-node-js-and-mongodb-e0827cbbdafb"},
{"title": "node js create folder", "code": "var fs = require('fs');\n\nconst dir = './database/temp';\nif (!fs.existsSync(dir)) {\n\tfs.mkdirSync(dir, {\n\t\trecursive: true\n\t});\n}", "date": "Jun 23 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "nodejs make directory", "code": "var fs = require('fs');\nvar dir = './tmp';\nif (!fs.existsSync(dir)){\n    fs.mkdirSync(dir);\n}\n\n// or if complains about existence and nesting doesn't matter:\n\nvar shell = require('shelljs');\nshell.mkdir('-p', 'root/parent/tmp');", "date": "Mar 30 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Hobbes", "source_name": null, "source_url": null},
{"title": "how to create a folder using fs in node js", "code": "//Include fs module\nconst fs = require('fs');\n\nconst dir = './dir'\nfs.mkdir(dir);", "date": "Jul 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "metiu19", "source_name": null, "source_url": null},
{"title": "node js console.table", "code": "// an object whose properties are strings\n\nfunction Person(firstName, lastName) {\n  this.firstName = firstName;\n  this.lastName = lastName;\n}\n\nvar me = new Person(\"John\", \"Smith\");\n\nconsole.table(me);", "date": "Aug 21 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Juligum", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Web/API/Console/table"},
{"title": "node js console log", "code": "console.log(\"hello world\");", "date": "Jan 15 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "HeyItsDeveloperRhys", "source_name": null, "source_url": null},
{"title": "print in node js", "code": "console.log('hello world');\n// Prints: hello world, to stdout\nconsole.log('hello %s', 'world');\n// Prints: hello world, to stdout\nconsole.error(new Error('Whoops, something bad happened'));\n// Prints: [Error: Whoops, something bad happened], to stderr\n\nconst name = 'Will Robinson';\nconsole.warn(`Danger ${name}! Danger!`);\n// Prints: Danger Will Robinson! Danger!, to stderr", "date": "Aug 10 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bored Boar", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/console.html"},
{"title": "colors in node js console", "code": "// Second argument is inserted in place of %s\n\nconsole.log('\\x1b[36m%s\\x1b[0m', 'I am cyan');  //cyan\nconsole.log('\\x1b[33m%s\\x1b[0m', stringToMakeYellow);  //yellow\n\nReset = \"\\x1b[0m\"\nBright = \"\\x1b[1m\"\nDim = \"\\x1b[2m\"\nUnderscore = \"\\x1b[4m\"\nBlink = \"\\x1b[5m\"\nReverse = \"\\x1b[7m\"\nHidden = \"\\x1b[8m\"\n\nFgBlack = \"\\x1b[30m\"\nFgRed = \"\\x1b[31m\"\nFgGreen = \"\\x1b[32m\"\nFgYellow = \"\\x1b[33m\"\nFgBlue = \"\\x1b[34m\"\nFgMagenta = \"\\x1b[35m\"\nFgCyan = \"\\x1b[36m\"\nFgWhite = \"\\x1b[37m\"\n\nBgBlack = \"\\x1b[40m\"\nBgRed = \"\\x1b[41m\"\nBgGreen = \"\\x1b[42m\"\nBgYellow = \"\\x1b[43m\"\nBgBlue = \"\\x1b[44m\"\nBgMagenta = \"\\x1b[45m\"\nBgCyan = \"\\x1b[46m\"\nBgWhite = \"\\x1b[47m\"", "date": "Jun 16 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "One Eyed Willy", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color"},
{"title": "node js colors", "code": "Reset = \"\\x1b[0m\"\nBright = \"\\x1b[1m\"\nDim = \"\\x1b[2m\"\nUnderscore = \"\\x1b[4m\"\nBlink = \"\\x1b[5m\"\nReverse = \"\\x1b[7m\"\nHidden = \"\\x1b[8m\"\n\nFgBlack = \"\\x1b[30m\"\nFgRed = \"\\x1b[31m\"\nFgGreen = \"\\x1b[32m\"\nFgYellow = \"\\x1b[33m\"\nFgBlue = \"\\x1b[34m\"\nFgMagenta = \"\\x1b[35m\"\nFgCyan = \"\\x1b[36m\"\nFgWhite = \"\\x1b[37m\"\n\nBgBlack = \"\\x1b[40m\"\nBgRed = \"\\x1b[41m\"\nBgGreen = \"\\x1b[42m\"\nBgYellow = \"\\x1b[43m\"\nBgBlue = \"\\x1b[44m\"\nBgMagenta = \"\\x1b[45m\"\nBgCyan = \"\\x1b[46m\"\nBgWhite = \"\\x1b[47m\"", "date": "Jan 31 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Arrogant Addax", "source_name": null, "source_url": null},
{"title": "node js code for saving first middle and last name", "code": "var studentFullName=\"John Smith\";\nvar details=[]\nvar details=studentFullName.split(' ');\nconsole.log(\"StudentFirstName=\"+details[0])\nconsole.log(\"StudentLastName=\"+details[1]);", "date": "Nov 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Enthusiastic Earthworm", "source_name": "www.tutorialspoint.com", "source_url": "https://www.tutorialspoint.com/split-first-name-and-last-name-using-javascript"},
{"title": "node js download image from url as buffer", "code": "var request = require('request').defaults({ encoding: null });\nrequest.get(s3Url, function (err, res, body) {\n      //process exif here\n});", "date": "Aug 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Agreeable Ant", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/18264346/how-to-load-an-image-from-url-into-buffer-in-nodejs"},
{"title": "node js create pdf from html", "code": "The problem with using PDF converter libraries available on NPM like pdfkit is that, you gonna have to recreate the page structures again in your html templates to get the desired output.\n\nOne of the best approach to rendering html and convert to pdf is by using Puppeteer on NodeJs. Puppeteer is a Node library which provides a high-level API to control Chrome or Chromium over the DevTools Protocol. It can be used to generate screenshots and PDFs of html pages in your case.", "date": "Mar 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Santino", "source_name": null, "source_url": null},
{"title": "javascript class", "code": "// Improved formatting of Spotted Tailed Quoll's answer\nclass Person {\n\tconstructor(name, age) {\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\tintroduction() {\n\t\treturn `My name is ${name} and I am ${age} years old!`;\n\t}\n}\n\nlet john = new Person(\"John Smith\", 18);\nconsole.log(john.introduction());", "date": "May 25 2020", "vote": 10, "tags": ["javascript", "nodejs"], "posted_by": "Nathan uses Linux", "source_name": null, "source_url": null},
{"title": "node js class", "code": "//Node js class: Here a quick code example\n\n// Basic class\nclass Rectangle {\n  \n  // Constructor\n  constructor(height, width) {\n    // Member variables\n    this.height = height;\n    this.width = width;\n\n    // Access static member variable\n    Rectangle.count++;\n  }\n  \n  // Getter\n  get area() {\n    return this.calcArea();\n  }\n  \n  // Method\n  calcArea() {\n    return this.height * this.width;\n  }\n\n  // Static method\n  static calcArea(width, height) {\n    return width * height;\n  }\n}\n\n// Static member variable\nRectangle.count = 0;\n\n\n// Class instantiation\nconst square = new Rectangle(10, 10);\n\n// Access member variable\nconsole.log(square.height, square.width); // 10 10\n\n// Call getter\nconsole.log(square.area);\t// 100\n\n// Call method\nconsole.log(square.calcArea()); // 100\n\n\n// Access static member variable\nconsole.log(Rectangle.count); // 1\n\n// Call static method\nconsole.log(Rectangle.calcArea(15, 15));  // 225", "date": "Jun 03 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes"},
{"title": "javascript class", "code": "class Rectangle {\n  constructor(height, width) {\n    this.height = height;\n    this.width = width;\n  }\n  // Getter\n  get area() {\n    return this.calcArea();\n  }\n  // Method\n  calcArea() {\n    return this.height * this.width;\n  }\n}\n\nconst square = new Rectangle(10, 10);\n\nconsole.log(square.area); // 100", "date": "May 31 2020", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Uninterested Unicorn", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes"},
{"title": "class declaration in javascript", "code": "class NameOfClass {\n//class declaration first letter should be capital it's a convention\n  obj=\"text\";\n  obj2=\"some other text\";\n}\n//always call class with \"new\" key word\nconsole.log(new NameOfClass);", "date": "Dec 19 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Homeless Hornet", "source_name": null, "source_url": null},
{"title": "node js check type of variable", "code": "if (typeof i != \"number\") {\n    console.log('This is not number');\n}", "date": "Apr 03 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Plain Piranha", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/19048507/how-to-check-for-datatype-in-node-js-specifically-for-integer"},
{"title": "process memory usage javascript", "code": "const arr = [1, 2, 3, 4, 5, 6, 9, 7, 8, 9, 10];\narr.reverse();\nconst used = process.memoryUsage().heapUsed / 1024 / 1024;\nconsole.log(`The script uses approximately ${Math.round(used * 100) / 100} MB`);", "date": "Apr 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Skullbite", "source_name": "www.valentinog.com", "source_url": "https://www.valentinog.com/blog/node-usage/"},
{"title": "node js check ram usage", "code": "const Discord = require('discord.js');\nconst client = new Discord.Client();\nconst config = require(\"./config.json\")\n\n\n\n\nclient.on(\"ready\", () => {\n    console.log(`Bot Foi Iniciado, com ${client.users.cache.size} usu\u00e1rios, em ${client.channels.cache.size} canais, em ${client.guilds.cache.size} servidores.`);\n    client.user.setActivity(`Dinheiro Na Putaria`);\n    client.user.setUsername('Hidrz')\n});\nconst prefix = \"!\";\n\nclient.on(\"message\", async message => {\n\n    if (message.author.bot) return;\n    if (message.channel.type == 'dm') return;\n    if (!message.guild) return;\n    if (!message.content.toLowerCase().startsWith(config.prefix.toLowerCase())) return;\n    if (message.content.startsWith(`<@!${client.user.id}>`) || message.content.startsWith(`<@${client.user.id}>`)) return;\n\n   const args = message.content\n       .trim().slice(config.prefix.length)\n       .split(/ +/g);\n   const command = args.shift().toLowerCase();\n\n   try {\n       const commandFile = require(`./commands/${command}.js`)\n       commandFile.run(client, message, args);\n   } catch (err) {\n   console.error('Erro:' + err);\n   }\n    \n   \n    \n\n    \n});\n   \n\n\n\nclient.login(config.token)\n", "date": "Apr 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Powerful Puma", "source_name": null, "source_url": null},
{"title": "node js check ram usage", "code": "const Discord = require('discord.js');\nconst client = new Discord.Client();\nconst config = require(\"./config.json\")\n\n\n\n\nclient.on(\"ready\", () => {\n    console.log(`Bot Foi Iniciado, com ${client.users.cache.size} usu\u00e1rios, em ${client.channels.cache.size} canais, em ${client.guilds.cache.size} servidores.`);\n    client.user.setActivity(`Dinheiro Na Putaria`);\n    client.user.setUsername('Hidrz')\n});\nconst prefix = \"!\";\n\nclient.on(\"message\", async message => {\n\n    if (message.author.bot) return;\n    if (message.channel.type == 'dm') return;\n    if (!message.guild) return;\n    if (!message.content.toLowerCase().startsWith(config.prefix.toLowerCase())) return;\n    if (message.content.startsWith(`<@!${client.user.id}>`) || message.content.startsWith(`<@${client.user.id}>`)) return;\n\n   const args = message.content\n       .trim().slice(config.prefix.length)\n       .split(/ +/g);\n   const command = args.shift().toLowerCase();\n\n   try {\n       const commandFile = require(`./commands/${command}.js`)\n       commandFile.run(client, message, args);\n   } catch (err) {\n   console.error('Erro:' + err);\n   }\n    \n   \n    \n\n    \n});\n   \n\n\n\nclient.login(config.token)\n", "date": "Apr 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Powerful Puma", "source_name": null, "source_url": null},
{"title": "node js check if called from module", "code": "if (require.main === module) {\n    console.log('called directly');\n} else {\n    console.log('required as a module');\n}", "date": "Jun 01 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/6398196/detect-if-called-through-require-or-directly-by-command-line"},
{"title": "node js check if called from command line", "code": "if (require.main === module) {\n    console.log('called directly');\n} else {\n    console.log('required as a module');\n}", "date": "Jun 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "node js check if a user exists in mysql", "code": "connectDB.query(\"SELECT ACCOUNT_ID FROM registration WHERE ACCOUNT_ID = '\"+ userAccnt +\"'\", function(err, result, field){\n     if(result.length === 0){\n        //new user logic\n}else{  \n    //existing user, redirect to another page \n }\n        }", "date": "May 09 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Alive Anaconda", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/30602804/check-existing-user-node-mysql"},
{"title": "node js catch any  errors", "code": "process.on('uncaughtException', function(err) {\n  console.log('Caught exception: ' + err);\n});", "date": "May 08 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Prickly Pony", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/19909904/how-to-handle-all-exceptions-in-node-js"},
{"title": "node js callback", "code": "function processData (callback) {\n  fetchData(function (err, data) {\n    if (err) {\n      console.log(\"An error has occurred. Abort everything!\");\n      return callback(err);\n    }\n    data += 1;\n    callback(null, data);\n  });\n}\n\nprocessData(function (err, data) {\n  if (err) {\n      console.err(err);\n  } else {\n    console.log(\"Data: \" + data);\n  }\n});", "date": "Aug 21 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Juligum", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/getting-started/control-flow/what-are-callbacks/"},
{"title": "node js async delay", "code": "const { promisify } = require('util');\n\nconst delay = promisify(setTimeout);\n\n// Usage:\n(async () => {\n  console.log('1');\n  await delay(1000);\n  console.log('2');\n})();", "date": "Aug 18 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "promp node js", "code": "const readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question(\"What is your name ? \", function saveInput(name) {\n  console.log(`His name is ${name}`);\n  rl.close();\n});\n\nrl.on(\"close\", function saveInput() {\n    console.log(\"\\nBYE BYE !!!\");\n    process.exit(0);\n});", "date": "May 16 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "JoseHdez", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/command-line/how-to-prompt-for-command-line-input/"},
{"title": "node js ask for user input", "code": "const readline = require(\"readline\");\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question(\"What is your name ? \", function(name) {\n    rl.question(\"Where do you live ? \", function(country) {\n        console.log(`${name}, is a citizen of ${country}`);\n        rl.close();\n    });\n});\n\nrl.on(\"close\", function() {\n    console.log(\"\\nBYE BYE !!!\");\n    process.exit(0);\n});", "date": "Dec 23 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Lonely Lemur", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/command-line/how-to-prompt-for-command-line-input/"},
{"title": "node js arabic number to english number", "code": "npm install persianjs", "date": "Mar 27 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tense Tarantula", "source_name": "usablica.github.io", "source_url": "http://usablica.github.io/persian.js/"},
{"title": "mongoose setup", "code": "// getting-started.js\nconst mongoose = require('mongoose');\nmongoose.connect(\"mongodb://localhost:27017/name\", { useUnifiedTopology: true, useNewUrlParser: true });", "date": "Jul 09 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Helpless Hippopotamus", "source_name": "mongoosejs.com", "source_url": "https://mongoosejs.com/docs/"},
{"title": "mongoose node js", "code": "// getting-started.js\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/test', {useNewUrlParser: true});", "date": "Jun 20 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Vivacious Vole", "source_name": "mongoosejs.com", "source_url": "https://mongoosejs.com/docs/"},
{"title": "node js + mongoose", "code": "await\u00a0mongoose.connect('mongodb://localhost/my_database',\u00a0{\u00a0\u00a0useNewUrlParser:\u00a0true,\u00a0\u00a0useUnifiedTopology:\u00a0true});", "date": "Aug 02 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Xerothermic Xenomorph", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/mongoose"},
{"title": "node js + mongoose", "code": "const db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n});", "date": "Aug 02 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Xerothermic Xenomorph", "source_name": "mongoosejs.com", "source_url": "https://mongoosejs.com/docs/"},
{"title": "mongoose node js", "code": "var db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n});", "date": "Jun 20 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Vivacious Vole", "source_name": "mongoosejs.com", "source_url": "https://mongoosejs.com/docs/"},
{"title": "mongoose connect", "code": "import mongoose from 'mongoose'\n\nexport const connectDb = async () => {\n  try {\n    await mongoose.connect('mongodb://localhost:27017/test', {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n    })\n  } catch (error) {\n    console.log(error.message)\n  }\n}", "date": "Apr 12 2021", "vote": 5, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Blue Booby", "source_name": "www.dailydeveloping.com", "source_url": "https://www.dailydeveloping.com/posts/User-authentication-with-next.js-and-mongodb"},
{"title": "mongoose connection nodejs", "code": "const mongoose = require('mongoose');\n\nconst connectDB = async () => {\n    mongoose\n        .connect('mongodb://localhost:27017/playground', {\n            useCreateIndex: true,\n            useNewUrlParser: true,\n            useUnifiedTopology: true,\n            useFindAndModify: false\n        })\n        .then(() => console.log('Connected Successfully'))\n        .catch((err) => console.error('Not Connected'));\n}\n\nmodule.exports = connectDB;", "date": "Feb 20 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Uptight Unicorn", "source_name": null, "source_url": null},
{"title": "mongoose connect", "code": "mongoose.connect('mongodb://localhost:27017/test', {\n  useMongoClient: true,\n  connectTimeoutMS: 1000\n})", "date": "Aug 07 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Yawning Yak", "source_name": null, "source_url": null},
{"title": "mongoose connection node", "code": "mongoose.connect('mongodb://localhost/myapp', { useNewUrlParser: true, useUnifiedTopology: true });\n", "date": "Aug 12 2020", "vote": 2, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Average Alpaca", "source_name": "mongoosejs.com", "source_url": "https://mongoosejs.com/docs/4.x/docs/connections.html"},
{"title": "mongoose setup", "code": "// getting-started.js\nconst mongoose = require('mongoose');\nmongoose.connect(\"mongodb://localhost:27017/name\", { useUnifiedTopology: true, useNewUrlParser: true });", "date": "Jul 09 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Helpless Hippopotamus", "source_name": "mongoosejs.com", "source_url": "https://mongoosejs.com/docs/"},
{"title": "node js connect to mongodb using mongoose", "code": "\n//connect with mongodb\nmongoose.connect('mongodb://localhost:27017/your_db_name', {useNewUrlParser: true});\n//you can also specify with user and pass\nmongoose.connect('mongodb://username:password@host:port/database?options...', {useNewUrlParser: true});\n//or goto docs https://mongoosejs.com/docs/connections.html", "date": "Sep 18 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "kepl3r", "source_name": "mongoosejs.com", "source_url": "https://mongoosejs.com/docs/connections.html"},
{"title": "colors in node js console", "code": "// Second argument is inserted in place of %s\n\nconsole.log('\\x1b[36m%s\\x1b[0m', 'I am cyan');  //cyan\nconsole.log('\\x1b[33m%s\\x1b[0m', stringToMakeYellow);  //yellow\n\nReset = \"\\x1b[0m\"\nBright = \"\\x1b[1m\"\nDim = \"\\x1b[2m\"\nUnderscore = \"\\x1b[4m\"\nBlink = \"\\x1b[5m\"\nReverse = \"\\x1b[7m\"\nHidden = \"\\x1b[8m\"\n\nFgBlack = \"\\x1b[30m\"\nFgRed = \"\\x1b[31m\"\nFgGreen = \"\\x1b[32m\"\nFgYellow = \"\\x1b[33m\"\nFgBlue = \"\\x1b[34m\"\nFgMagenta = \"\\x1b[35m\"\nFgCyan = \"\\x1b[36m\"\nFgWhite = \"\\x1b[37m\"\n\nBgBlack = \"\\x1b[40m\"\nBgRed = \"\\x1b[41m\"\nBgGreen = \"\\x1b[42m\"\nBgYellow = \"\\x1b[43m\"\nBgBlue = \"\\x1b[44m\"\nBgMagenta = \"\\x1b[45m\"\nBgCyan = \"\\x1b[46m\"\nBgWhite = \"\\x1b[47m\"", "date": "Jun 16 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "One Eyed Willy", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color"},
{"title": "node console color", "code": "Reset = \"\\x1b[0m\"\nBright = \"\\x1b[1m\"\nDim = \"\\x1b[2m\"\nUnderscore = \"\\x1b[4m\"\nBlink = \"\\x1b[5m\"\nReverse = \"\\x1b[7m\"\nHidden = \"\\x1b[8m\"\n\nFgBlack = \"\\x1b[30m\"\nFgRed = \"\\x1b[31m\"\nFgGreen = \"\\x1b[32m\"\nFgYellow = \"\\x1b[33m\"\nFgBlue = \"\\x1b[34m\"\nFgMagenta = \"\\x1b[35m\"\nFgCyan = \"\\x1b[36m\"\nFgWhite = \"\\x1b[37m\"\n\nBgBlack = \"\\x1b[40m\"\nBgRed = \"\\x1b[41m\"\nBgGreen = \"\\x1b[42m\"\nBgYellow = \"\\x1b[43m\"\nBgBlue = \"\\x1b[44m\"\nBgMagenta = \"\\x1b[45m\"\nBgCyan = \"\\x1b[46m\"\nBgWhite = \"\\x1b[47m\"", "date": "May 26 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "L", "source_name": null, "source_url": null},
{"title": "node js change text color", "code": "const COLOR = {\n  reset: '\\x1b[0m',\n  bright: '\\x1b[1m',\n  dim: '\\x1b[2m',\n  underscore: '\\x1b[4m',\n  blink: '\\x1b[5m',\n  reverse: '\\x1b[7m',\n  hidden: '\\x1b[8m',\n\n  fgBlack: '\\x1b[30m',\n  fgRed: '\\x1b[31m',\n  fgGreen: '\\x1b[32m',\n  fgYellow: '\\x1b[33m',\n  fgBlue: '\\x1b[34m',\n  fgMagenta: '\\x1b[35m',\n  fgCyan: '\\x1b[36m',\n  fgWhite: '\\x1b[37m',\n\n  bgBlack: '\\x1b[40m',\n  bgRed: '\\x1b[41m',\n  bgGreen: '\\x1b[42m',\n  bgYellow: '\\x1b[43m',\n  bgBlue: '\\x1b[44m',\n  bgMagenta: '\\x1b[45m',\n  bgCyan: '\\x1b[46m',\n  bgWhite: '\\x1b[47m',\n};\n\nconsole.log(`${COLOR.fgRed}This text is red.${COLOR.reset}`);", "date": "Aug 25 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "node http request", "code": "const https = require('https')\nconst options = {\n  hostname: 'whatever.com',\n  port: 443,\n  path: '/todos',\n  method: 'GET'\n}\n\nconst req = https.request(options, res => {\n  console.log(`statusCode: ${res.statusCode}`)\n\n  res.on('data', d => {\n    process.stdout.write(d)\n  })\n})\n\nreq.on('error', error => {\n  console.error(error)\n})\n\nreq.end()", "date": "Mar 20 2020", "vote": 11, "tags": ["javascript", "nodejs"], "posted_by": "Eager Echidna", "source_name": "nodejs.dev", "source_url": "https://nodejs.dev/making-http-requests-with-nodejs"},
{"title": "nodejs http server", "code": "/* ====== create node.js server with core 'http' module ====== */\n// dependencies\nconst http = require(\"http\");\n\n// PORT\nconst PORT = 3000;\n\n// server create\nconst server = http.createServer((req, res) => {\n   if (req.url === \"/\") {\n      res.write(\"This is home page.\");\n      res.end();\n   } else if (req.url === \"/about\" && req.method === \"GET\") {\n      res.write(\"This is about page.\");\n      res.end();\n   } else {\n      res.write(\"Not Found!\");\n      res.end();\n   }\n});\n\n// server listen port\nserver.listen(PORT);\n\nconsole.log(`Server is running on PORT: ${PORT}`);\n\n// ======== Instructions ========\n// save this as index.js\n// you have to download and install node.js on your machine\n// open terminal or command prompt\n// type node index.js\n// find your server at http://localhost:3000", "date": "Jan 09 2021", "vote": 45, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": null, "source_url": null},
{"title": "node js request", "code": "const request = require('request');\nrequest('http://www.google.com', function (error, response, body) {\n  console.error('error:', error); // Print the error if one occurred\n  console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n  console.log('body:', body); // Print the HTML for the Google homepage.\n});", "date": "Aug 11 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Tarik", "source_name": null, "source_url": null},
{"title": "node js do request", "code": "let request = require('request')\n\nconst formData = {\n  // Pass a simple key-value pair\n  my_field: 'my_value',\n  // Pass data via Buffers\n  my_buffer: Buffer.from([1, 2, 3]),\n  // Pass data via Streams\n  my_file: fs.createReadStream(__dirname + '/unicycle.jpg'),\n  // Pass multiple values /w an Array\n  attachments: [\n    fs.createReadStream(__dirname + '/attachment1.jpg'),\n    fs.createReadStream(__dirname + '/attachment2.jpg')\n  ],\n  // Pass optional meta-data with an 'options' object with style: {value: DATA, options: OPTIONS}\n  // Use case: for some types of streams, you'll need to provide \"file\"-related information manually.\n  // See the `form-data` README for more information about options: https://github.com/form-data/form-data\n  custom_file: {\n    value:  fs.createReadStream('/dev/urandom'),\n    options: {\n      filename: 'topsecret.jpg',\n      contentType: 'image/jpeg'\n    }\n  }\n};\nrequest.post({url:'http://service.com/upload', formData: formData}, function optionalCallback(err, httpResponse, body) {\n  if (err) {\n    return console.error('upload failed:', err);\n  }\n  console.log('Upload successful!  Server responded with:', body);\n});", "date": "Jun 22 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Jules", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/request"},
{"title": "settimeout node js", "code": "setTimeout(function () {\n    console.log(\"5 secondes\"); \n}, 5000); \nconsole.log(\"now\");", "date": "Apr 03 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "adriendums", "source_name": null, "source_url": null},
{"title": "promp node js", "code": "const readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question(\"What is your name ? \", function saveInput(name) {\n  console.log(`His name is ${name}`);\n  rl.close();\n});\n\nrl.on(\"close\", function saveInput() {\n    console.log(\"\\nBYE BYE !!!\");\n    process.exit(0);\n});", "date": "May 16 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "JoseHdez", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/command-line/how-to-prompt-for-command-line-input/"},
{"title": "node js express", "code": "basic server\n\nconst express =require('express');\nconst app = express();\nconst PORT = 5000;\n\n\napp.get('/',(req,res)=>{\n   res.json({message: 'Welcome to the backend'})\n})\n\n\napp.listen(PORT ,()=>console.log(`Connected to ${PORT}`)\n           \n           ", "date": "Apr 02 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Arqa", "source_name": null, "source_url": null},
{"title": "node js server", "code": "const express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))", "date": "Apr 01 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Encouraging Elk", "source_name": null, "source_url": null},
{"title": "node js", "code": "NodeJs is Runtime environment for executing Js code, Outside Of Browser.\nit is build upon Chrome v8 engine using c++.\n\nUses of Node:\n\n-can build back-end services like API which can be used as backend for \ndiferent platform Apps(Website, MobileApp, Desktop App).\n\n-is Asynchronous by default means Single thread handle all the request\nand response, thereby providing more speed, highly scalable, built time half \ncompare to other tech in market, 33% few line of code, 40% fewer files,\ncan handle 2times more requests/secs, 35% fast response time.\n// Hope you like the short Description.", "date": "Oct 02 2020", "vote": 15, "tags": ["javascript", "nodejs"], "posted_by": "VeNOM", "source_name": null, "source_url": null},
{"title": "node js", "code": "Node js allows you to run javascript outside of your browser\nex: you are able to run it on your terminal", "date": "Jun 18 2020", "vote": 16, "tags": ["javascript", "nodejs"], "posted_by": "Soccer Star", "source_name": null, "source_url": null},
{"title": "node ja sap concur", "code": "curl -d \"client_secret={YOUR SECRET}&client_id={YOUR CLIENT ID}&grant_type=password&username={YOUR USERNAME}&password={YOUR PASSWORD}\" https://us.api.concursolutions.com/oauth2/v0/token\n", "date": "Dec 31 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Magnificent Mandrill", "source_name": "developer.concur.com", "source_url": "https://developer.concur.com/api-reference/receipts/get-started.html"},
{"title": "node check if file exists", "code": "const fs = require(\"fs\"); // Or `import fs from \"fs\";` with ESM\nif (fs.existsSync(path)) {\n    // Do something\n}", "date": "May 22 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Witty Worm", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/4482686/check-synchronously-if-file-directory-exists-in-node-js"},
{"title": "node if file exists", "code": "const fs = require(\"fs\"); // Or `import fs from \"fs\";` with ESM\nif (fs.existsSync(path)) {\n    // Do something\n}\n", "date": "Jan 13 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "gaz_edge", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/4482686/check-synchronously-if-file-directory-exists-in-node-js?answertab=active#tab-top"},
{"title": "node check if file exists", "code": "const fs = require('fs');\n\nlet file = '../path/to/chad_warden.mpeg';\n\n// async\nconst fileExists = (file) => {\n    return new Promise((resolve) => {\n        fs.access(file, fs.constants.F_OK, (err) => {\n            err ? resolve(false) : resolve(true)\n        });\n    })\n}\n\n// sync\nconst fileExistsSync = (file) => {\n    try {\n        fs.accessSync(file, fs.constants.R_OK | fs.constants.W_OK);\n        return true;\n      } catch (err) {\n        return false;\n      }\n}", "date": "Mar 16 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Charming Caterpillar", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/fs.html#fs_fs_access_path_mode_callback"},
{"title": "check if file exists javascript", "code": "function executeIfFileExist(src, callback) {\n    var xhr = new XMLHttpRequest()\n    xhr.onreadystatechange = function() {\n        if (this.readyState === this.DONE) {\n            callback()\n        }\n    }\n    xhr.open('HEAD', src)\n}", "date": "May 20 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "TC5550", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/3646914/how-do-i-check-if-file-exists-in-jquery-or-pure-javascript"},
{"title": "node https", "code": "const https = require('https');\n\nhttps.get('https://encrypted.google.com/', (res) => {\n  console.log('statusCode:', res.statusCode);\n  console.log('headers:', res.headers);\n\n  res.on('data', (d) => {\n    process.stdout.write(d);\n  });\n\n}).on('error', (e) => {\n  console.error(e);\n});", "date": "Dec 20 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Important Ibex", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/https.html#https_https_get_url_options_callback"},
{"title": "node if path exists", "code": "const fs = require(\"fs\"); // Or `import fs from \"fs\";` with ESM\nif (fs.existsSync(path)) {\n    // Do something\n}", "date": "Oct 13 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "gaz_edge", "source_name": null, "source_url": null},
{"title": "node import all functions from file", "code": "//we are in ./utils/dbHelper.js, here we have some helper functions\nfunction connect() {\n  // connect do db...\n}\n\nfunction closeConnection() {\n  // close connection to DB...\n}\n\n//let's export this function to show them to the world outside\nmodule.exports = {\n  connect(),\n    closeConnection()\n};\n\n// now we are in ./main.js and we want use helper functions from dbHelper.js\nconst DbHelper = require ('./utils/dbHelper'); // import all file and name it DbHelper\nDbHelper.connect(); // use function from './utils/dbHelper' using dot(.)\n\n// or we can import only chosen function(s)\nconst { connect, closeConnection } = require ('./utils/dbHelper');\nconnect(); // use function from class without dot", "date": "Aug 24 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Scatterbrained Pennyduck", "source_name": null, "source_url": null},
{"title": "node google client api to get user profile with already fetched token", "code": "var google = require('googleapis').google;\nvar OAuth2 = google.auth.OAuth2;\nvar oauth2Client = new OAuth2();\noauth2Client.setCredentials({access_token: 'ACCESS TOKEN HERE'});\nvar oauth2 = google.oauth2({\n  auth: oauth2Client,\n  version: 'v2'\n});\noauth2.userinfo.get(\n  function(err, res) {\n    if (err) {\n       console.log(err);\n    } else {\n       console.log(res);\n    }\n});\n", "date": "Dec 16 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Mystic Dev", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/46780218/how-to-use-the-node-google-client-api-to-get-user-profile-with-already-fetched-t/46780714"},
{"title": "node global directory windows", "code": "C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\node_modules\n\nOr run:\n\nnpm config ls -l | grep prefix\n; prefix = \"C:\\\\Program Files\\\\nodejs\" (overridden)\nprefix = \"C:\\\\Users\\\\bjorn\\\\AppData\\\\Roaming\\\\npm\"", "date": "May 03 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Selfish Snake", "source_name": null, "source_url": null},
{"title": "node get value from map", "code": "let myMap = new Map();\n\nmyMap.set(\"key1\", \"value1\");\nmyMap.set(\"key2\", \"value2\");\n\nconsole.log(myMap.has(\"key1\")); // true\nconsole.log(myMap.has(\"key2\")); // true\n\nconsole.log(myMap.get(\"key1\")); // value1\nconsole.log(myMap.get(\"key2\")); // value2\n\n// NOTE: DO NOT try to access map values using [].\n// myMap[\"key1\"] = \"value1\";", "date": "Jun 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Nathan uses Linux", "source_name": null, "source_url": null},
{"title": "nodejs fs root folder path", "code": "global.__basedir = __dirname;", "date": "Dec 07 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Filthy Frog", "source_name": "www.abeautifulsite.net", "source_url": "https://www.abeautifulsite.net/determining-your-apps-base-directory-in-nodejs"},
{"title": "node get root directory", "code": "path.resolve(\"./\")", "date": "Mar 24 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Amused Anteater", "source_name": null, "source_url": null},
{"title": "javascript get timestamp", "code": "var currentTimeInSeconds=Math.floor(Date.now()/1000); //unix timestamp in seconds\r\nvar currentTimeInMilliseconds=Date.now(); // unix timestamp in milliseconds", "date": "Jul 22 2019", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "node get unix timestamp", "code": "Math.floor(new Date() / 1000) // in seconds", "date": "Mar 30 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "just-saved-you-a-stackoverflow-visit", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/25250551/how-to-generate-timestamp-unix-epoch-format-nodejs"},
{"title": "node js unix timestamp", "code": "function getUnixTime() {\n  return (Date.now() / 1000) | 0;  \n}", "date": "Jan 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Dizzy Dog", "source_name": null, "source_url": null},
{"title": "node how to set environment variable", "code": "// get an environment variableexport const token = process.env['API_TOKEN'];// set an environment variable at runtimeprocess.env['RANDOM_ID'] = Math.random();", "date": "Jan 10 2021", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Black Hole", "source_name": "itnext.io", "source_url": "https://itnext.io/how-to-use-environment-variables-in-node-js-cb2ef0e9574a"},
{"title": "node get path of current file", "code": "module.filename", "date": "Feb 22 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "The little dog", "source_name": null, "source_url": null},
{"title": "node run parameters", "code": "var args = process.argv.slice(2);", "date": "Jun 23 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "GutoTrosla", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/4351521/how-do-i-pass-command-line-arguments-to-a-node-js-program"},
{"title": "node get args", "code": "console.log(process.argv);", "date": "Feb 10 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Gifted Gibbon", "source_name": null, "source_url": null},
{"title": "node get absolute path", "code": "// to get a valid absolute path\nresolve = require('path').resolve\nresolve('../../bb/tmp.txt')\n\n// to get current file directory\n__dirname", "date": "Mar 29 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "just-saved-you-a-stackoverflow-visit", "source_name": null, "source_url": null},
{"title": "node filesystem change directory of a file", "code": "const {promisify} = require('util');\nconst fs = require('fs');\nconst {join} = require('path');\nconst mv = promisify(fs.rename);\n\nconst moveThem = async () => {\n  // Move file ./bar/foo.js to ./baz/qux.js\n  const original = join(__dirname, 'bar/foo.js');\n  const target = join(__dirname, 'baz/qux.js'); \n  await mv(original, target);\n}\n\nmoveThem();\n", "date": "Sep 30 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Grotesque Goldfinch", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/8579055/how-do-i-move-files-in-node-js"},
{"title": "node filesystem change directory of a file", "code": "var fs = require('fs-extra')\n\nfs.move('/tmp/somefile', '/tmp/does/not/exist/yet/somefile', function (err) {\n if (err) return console.error(err)\n console.log(\"success!\")\n})\n", "date": "Sep 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Grotesque Goldfinch", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/8579055/how-do-i-move-files-in-node-js"},
{"title": "express get full url", "code": "var fullUrl = req.protocol + '://' + req.get('host') + req.originalUrl;", "date": "Jun 10 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Doubtful Dog", "source_name": null, "source_url": null},
{"title": "get full url nodejs", "code": "var fullUrl = req.protocol + '://' + req.get('host') + req.originalUrl;  ", "date": "Jul 03 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "node get current url", "code": "const fullUrl = `${req.protocol}://${req.get(\"host\")}${req.originalUrl}`;", "date": "May 03 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "TindyC", "source_name": null, "source_url": null},
{"title": "how to get url node", "code": "const https = require(\"https\"); //First require the module \n\nconst url = https://url.com \n//good practice is to assign the url to a const named url//\n\napp.get(\"/\", function(req, res){\n    https.get(url, function(res){\n        console.log(res);//if you wish to console log the respone from the server\n    });", "date": "Apr 21 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "TheDevStar", "source_name": null, "source_url": null},
{"title": "node js fetch", "code": "const fetch = require('node-fetch');\t//npm install node-fetch\n\nfetch('https://httpbin.org/post', {\n  method: 'POST',\n  body: 'a=1'\n})\n  .then(res => res.json())\n  .then(json => {\n\t// Do something...\n  })\n  .catch(err => console.log(err));", "date": "Jun 02 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-fetch"},
{"title": "how to install node fetch", "code": "$\u00a0npm\u00a0install\u00a0node-fetch\u00a0--save", "date": "Jun 10 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Puzzled Puffin", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/node-fetch"},
{"title": "node fetch", "code": "const fetch = require('node-fetch');", "date": "May 07 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Undefined", "source_name": null, "source_url": null},
{"title": "node express verify account link api", "code": "var emailRegex = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n\nfunction isEmailValid(email) {\n    if (!email)\n        return false;\n\n    if(email.length>254)\n        return false;\n\n    var valid = emailRegex.test(email);\n    if(!valid)\n        return false;\n\n    // Further checking of some things regex can't handle\n    var parts = email.split(\"@\");\n    if(parts[0].length>64)\n        return false;\n\n    var domainParts = parts[1].split(\".\");\n    if(domainParts.some(function(part) { return part.length>63; }))\n        return false;\n\n    return true;\n}\n", "date": "Jan 14 2021", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Worrisome Wolverine", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/52456065/how-to-format-and-validate-email-node-js"},
{"title": "node get all files in folder", "code": "fs.readdir('./', (err, files) => {\n    files.forEach(file => {\n    //   console.log(file);\n})});", "date": "Mar 15 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Adventurous Aardvark", "source_name": null, "source_url": null},
{"title": "node list files in directory", "code": "\n//requiring path and fs modules\nconst path = require('path');\nconst fs = require('fs');\n//joining path of directory \nconst directoryPath = path.join(__dirname, 'Documents');\n//passsing directoryPath and callback function\nfs.readdir(directoryPath, function (err, files) {\n    //handling error\n    if (err) {\n        return console.log('Unable to scan directory: ' + err);\n    } \n    //listing all files using forEach\n    files.forEach(function (file) {\n        // Do whatever you want to do with the file\n        console.log(file); \n    });\n});", "date": "Jun 26 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "Clever Crane", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/2727167/how-do-you-get-a-list-of-the-names-of-all-files-present-in-a-directory-in-node-j"},
{"title": "node js get files in dir", "code": "const path = require('path');\nconst fs = require('fs');\n\nfs.readdir(\n  path.resolve(__dirname, 'MyFolder'),\n  (err, files) => {\n    if (err) throw err;\n    \n    for (let file of files) {\n      console.log(file);\n    }\n  }\n);", "date": "Sep 07 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "how to read all files in a folder in node js", "code": "fs.readdir('./', (err, files) => {\n        files.forEach(file => {\n        //   console.log(file);\n        }});", "date": "Feb 08 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Alien0w0", "source_name": null, "source_url": null},
{"title": "fs.writefile", "code": "const fs = require('fs');\n\nfs.writeFile(\"/tmp/test\", \"Hey there!\", function(err) {\n    if(err) {\n        return console.log(err);\n    }\n    console.log(\"The file was saved!\");\n}); \n\n// Or\nfs.writeFileSync('/tmp/test-sync', 'Hey there!');", "date": "Aug 08 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Jeff Spicoli", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/2496710/writing-files-in-node-js"},
{"title": "node js write file", "code": "// fs_write.js\n\nconst fs = require('fs');\n\n// specify the path to the file, and create a buffer with characters we want to write\nlet path = 'ghetto_gospel.txt';\nlet buffer = new Buffer('Those who wish to follow me\\nI welcome with my hands\\nAnd the red sun sinks at last');\n\n// open the file in writing mode, adding a callback function where we do the actual writing\nfs.open(path, 'w', function(err, fd) {\n    if (err) {\n        throw 'could not open file: ' + err;\n    }\n\n    // write the contents of the buffer, from position 0 to the end, to the file descriptor returned in opening our file\n    fs.write(fd, buffer, 0, buffer.length, null, function(err) {\n        if (err) throw 'error writing file: ' + err;\n        fs.close(fd, function() {\n            console.log('wrote the file successfully');\n        });\n    });\n});", "date": "Jun 24 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Xenophobic Xenomorph", "source_name": null, "source_url": null},
{"title": "fs writefile node", "code": "const fs = require('fs')\n\nconst content = 'Some content!'\n\nfs.writeFile('/Users/joe/test.txt', content, err => {\n  if (err) {\n    console.error(err)\n    return\n  }\n  //file written successfully\n})", "date": "Mar 15 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Testy Tamarin", "source_name": "nodejs.dev", "source_url": "https://nodejs.dev/writing-files-with-nodejs"},
{"title": "fs.readfile", "code": "fs.readFile('filename', function read(err, data) {\n    if (err) {\n        throw err;\n    }\n    var content = data;\n  \n    console.log(content);  \n   \n});", "date": "Apr 21 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "If-dev", "source_name": null, "source_url": null},
{"title": "writeFileSync", "code": "var fs = require('fs');\n\n// Save the string \"Hello world!\" in a file called \"hello.txt\" in\n// the directory \"/tmp\" using the default encoding (utf8).\n// This operation will be completed in background and the callback\n// will be called when it is either done or failed.\nfs.writeFile('/tmp/hello.txt', 'Hello world!', function(err) {\n  // If an error occurred, show it and return\n  if(err) return console.error(err);\n  // Successfully wrote to the file!\n});\n\n// Save binary data to a file called \"binary.txt\" in the current\n// directory. Again, the operation will be completed in background.\nvar buffer = new Buffer([ 0x48, 0x65, 0x6c, 0x6c, 0x6f ]);\nfs.writeFile('binary.txt', buffer, function(err) {\n  // If an error occurred, show it and return\n  if(err) return console.error(err);\n  // Successfully wrote binary contents to the file!\n});\n", "date": "May 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Donate ", "source_name": "riptutorial.com", "source_url": "https://riptutorial.com/es/node-js/example/1608/escribir-en-un-archivo-usando-writefile-o-writefilesync"},
{"title": "node express table view", "code": "<table>\n  <tr>\n    <th>id</th><th>Name</th>\n  </tr>\n\n  <% for (var i = 0; i < data.length; i++) { %>\n    <tr>\n      <td><%= data[i].id %></td>\n      <td><%= data[i].name %></td>\n    </tr>    \n  <% } %>\n</table>\n", "date": "Sep 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Panicky Panther", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/34809975/displaying-a-json-dataset-as-a-table-with-node-js-and-express"},
{"title": "node express start code", "code": "\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => {\n  res.send('Hello World!')\n})\n\napp.listen(port, () => {\n  console.log(`Example app listening at http://localhost:${port}`)\n})\n", "date": "Feb 28 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Rich Raven", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/hello-world.html"},
{"title": "node express server static files", "code": "var express = require('express');\nvar app = express();\nvar path = require('path');\n\n//app.use(express.static(__dirname)); // Current directory is root\napp.use(express.static(path.join(__dirname, 'public'))); //  \"public\" off of current is root\n\napp.listen(80);\nconsole.log('Listening on port 80');", "date": "May 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "JDog", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/10434001/static-files-with-express-js"},
{"title": "node express post request json", "code": "var express = require('express');\n\nvar app = express();\n\napp.use(express.json()); // built-in middleware for express\n\napp.post('/', function(request, response){\n \tlet myJson = request.body;      // your JSON\n\tlet myValue = request.body.myKey;\t// a value from your JSON\n\tresponse.send(myJson);\t // echo the result back\n});\n\napp.listen(3000);", "date": "Mar 29 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "just-saved-you-a-stackoverflow-visit", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/10005939/how-do-i-consume-the-json-post-data-in-an-express-application"},
{"title": "node file change event listener", "code": "fs.watch('foo', function (event, filename) {\n  if (event == 'change') {\n    // Load file content\n    // Compare to one previously loaded\n    // actualContent = newContent\n  }\n});", "date": "Feb 28 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Clever Centipede", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/31583276/event-handler-on-file-change-and-get-changes-in-file-using-nodejs-file-system"},
{"title": "node express mongo boilerplate with jwt", "code": "git clone https://github.com/hagopj13/node-express-mongoose-boilerplate.git", "date": "Nov 09 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Perfect Peccary", "source_name": null, "source_url": null},
{"title": "node express dynamic route and error handler", "code": "app.use(function (req, res, next) {\n  res.status(404).send(\"Sorry can't find that!\")\n})\n", "date": "Jan 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Defeated Dog", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/faq.html"},
{"title": "node express chat app", "code": "const app = require('express')();const http = require('http').createServer(app);app.get('/', (req, res) => {  res.send('<h1>Hello world</h1>');});http.listen(3000, () => {  console.log('listening on *:3000');});", "date": "Jan 21 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "TheProgrammer", "source_name": "socket.io", "source_url": "https://socket.io/get-started/chat/"},
{"title": "simple socket.io chat", "code": "npm install socket.io", "date": "Dec 02 2020", "vote": 0, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Real Reindeer", "source_name": "socket.io", "source_url": "https://socket.io/get-started/chat/"},
{"title": "express hello world", "code": "//to run : node filename.js\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))\n\n//visit localhost:3000\n// assuming you have done 1) npm init 2) npm install express", "date": "Jul 17 2020", "vote": 35, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "npm express", "code": "$\u00a0npm\u00a0install\u00a0express", "date": "Jul 31 2020", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Innocent Ibex", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/express"},
{"title": "express js server", "code": "const express = require('express');\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\napp.get('/', (req, res) => {\n  res.send('<h1>Some HTML</h1>');\n  res.send('<p>Even more HTML</p>');\n});\n\napp.listen(PORT, () => console.log(`Server is listening on port ${PORT}`));", "date": "Sep 29 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "amazingcoder444Rblx", "source_name": null, "source_url": null},
{"title": "node.js express", "code": "const express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))", "date": "Jun 05 2020", "vote": 15, "tags": ["javascript", "nodejs"], "posted_by": "Vincent Lab", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/hello-world.html"},
{"title": "express js", "code": "\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => {\n  res.send('Hello World!')\n})\n\napp.listen(port, () => {\n  console.log(`Example app listening at http://localhost:${port}`)\n})\n\n", "date": "Dec 18 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "The French Doctor", "source_name": "expressjs.com", "source_url": "https://expressjs.com/fr/starter/hello-world.html"},
{"title": "node express", "code": "npm install express --save", "date": "Jan 12 2021", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Almabek", "source_name": null, "source_url": null},
{"title": "node execute shell commands", "code": "const { exec } = require(\"child_process\");\nexec(\"cat index.js\", (error, data, getter) => {\n\tif(error){\n\t\tconsole.log(\"error\",error.message);\n\t\treturn;\n\t}\n\tif(getter){\n\t\tconsole.log(\"data\",data);\n\t\treturn;\n\t}\n\tconsole.log(\"data\",data);\n\n});\n", "date": "Apr 11 2020", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "If-dev", "source_name": null, "source_url": null},
{"title": "node downgrade windows", "code": "npm install -g node@<version>", "date": "Nov 25 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Dotch", "source_name": null, "source_url": null},
{"title": "node express cors headers", "code": "var express = require('express')\nvar cors = require('cors')\nvar app = express()\n\napp.use(cors())\n\napp.get('/products/:id', function (req, res, next) {\n  res.json({msg: 'This is CORS-enabled for all origins!'})\n})\n\napp.listen(80, function () {\n  console.log('CORS-enabled web server listening on port 80')\n})\n", "date": "Mar 24 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Adventurous Aardvark", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/resources/middleware/cors.html"},
{"title": "express js cors", "code": "var express = require('express')\nvar cors = require('cors')  //use this\nvar app = express()\n\napp.use(cors()) //and this\n\napp.get('/user/:id', function (req, res, next) {\n  res.json({user: 'CORS enabled'})\n})\n\napp.listen(5000, function () {\n  console.log('CORS-enabled web server listening on port 5000')\n})", "date": "Nov 13 2020", "vote": 20, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "allow cors express", "code": "app.use(function(req, res, next) {\n  res.header(\"Access-Control-Allow-Origin\", \"YOUR-DOMAIN.TLD\"); // update to match the domain you will make the request from\n  res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n  next();\n});", "date": "Jun 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Poised Penguin", "source_name": null, "source_url": null},
{"title": "node download s3 file", "code": "const AWS = require('aws-sdk');\nAWS.config.update(\n  {\n    accessKeyId: \"....\",\n    secretAccessKey: \"...\",\n    region: 'ap-southeast-1'\n  }\n);\nconst s3 = new AWS.S3();\nconst options = {\n  Bucket    : '/bucket-url',\n  Key    : fileKey,\n};\nconst fileStream = s3.getObject(options).createReadStream();\nfileStream.pipe(res);", "date": "Dec 11 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Cold Shower Coding", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/22143628/nodejs-how-do-i-download-a-file-to-disk-from-an-aws-s3-bucket"},
{"title": "colors in node js console", "code": "// Second argument is inserted in place of %s\n\nconsole.log('\\x1b[36m%s\\x1b[0m', 'I am cyan');  //cyan\nconsole.log('\\x1b[33m%s\\x1b[0m', stringToMakeYellow);  //yellow\n\nReset = \"\\x1b[0m\"\nBright = \"\\x1b[1m\"\nDim = \"\\x1b[2m\"\nUnderscore = \"\\x1b[4m\"\nBlink = \"\\x1b[5m\"\nReverse = \"\\x1b[7m\"\nHidden = \"\\x1b[8m\"\n\nFgBlack = \"\\x1b[30m\"\nFgRed = \"\\x1b[31m\"\nFgGreen = \"\\x1b[32m\"\nFgYellow = \"\\x1b[33m\"\nFgBlue = \"\\x1b[34m\"\nFgMagenta = \"\\x1b[35m\"\nFgCyan = \"\\x1b[36m\"\nFgWhite = \"\\x1b[37m\"\n\nBgBlack = \"\\x1b[40m\"\nBgRed = \"\\x1b[41m\"\nBgGreen = \"\\x1b[42m\"\nBgYellow = \"\\x1b[43m\"\nBgBlue = \"\\x1b[44m\"\nBgMagenta = \"\\x1b[45m\"\nBgCyan = \"\\x1b[46m\"\nBgWhite = \"\\x1b[47m\"", "date": "Jun 16 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "One Eyed Willy", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color"},
{"title": "node console color", "code": "Reset = \"\\x1b[0m\"\nBright = \"\\x1b[1m\"\nDim = \"\\x1b[2m\"\nUnderscore = \"\\x1b[4m\"\nBlink = \"\\x1b[5m\"\nReverse = \"\\x1b[7m\"\nHidden = \"\\x1b[8m\"\n\nFgBlack = \"\\x1b[30m\"\nFgRed = \"\\x1b[31m\"\nFgGreen = \"\\x1b[32m\"\nFgYellow = \"\\x1b[33m\"\nFgBlue = \"\\x1b[34m\"\nFgMagenta = \"\\x1b[35m\"\nFgCyan = \"\\x1b[36m\"\nFgWhite = \"\\x1b[37m\"\n\nBgBlack = \"\\x1b[40m\"\nBgRed = \"\\x1b[41m\"\nBgGreen = \"\\x1b[42m\"\nBgYellow = \"\\x1b[43m\"\nBgBlue = \"\\x1b[44m\"\nBgMagenta = \"\\x1b[45m\"\nBgCyan = \"\\x1b[46m\"\nBgWhite = \"\\x1b[47m\"", "date": "May 26 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "L", "source_name": null, "source_url": null},
{"title": "node console showing object object", "code": "const util = require('util')\n\nconsole.log(util.inspect(myObject, {showHidden: false, depth: null}))\n\n// alternative shortcut\nconsole.log(util.inspect(myObject, false, null, true /* enable colors */))", "date": "Aug 31 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Adventurous Albatross", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/10729276/how-can-i-get-the-full-object-in-node-jss-console-log-rather-than-object"},
{"title": "install express", "code": "$ npm install express --save\n", "date": "Mar 02 2021", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Almabek", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/installing.html"},
{"title": "install express", "code": "npm i express", "date": "Oct 03 2020", "vote": 3, "tags": ["javascript", "nodejs", "shell"], "posted_by": "amazingcoder444Rblx", "source_name": null, "source_url": null},
{"title": "setup node js express basic setup", "code": "npm init -y\nnpm i express\n", "date": "Jul 03 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "node express setup", "code": "yarn add express \nyarn add --dev @types/express", "date": "Mar 30 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Uninterested Unicorn", "source_name": null, "source_url": null},
{"title": "node cron every second", "code": "This worked for me -\n\n    cron.schedule(\"*/10 * * * * *\", function() {\n      console.log(\"running a task every 10 second\");\n    });\nHope this helps someone.\n\nReference - https://support.acquia.com/hc/en-us/articles/360004224494-Cron-time-string-format", "date": "Mar 09 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Santino", "source_name": null, "source_url": null},
{"title": "node command get to much time", "code": "OLDPATH=\"$PATH\"\nPATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\n", "date": "Oct 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "RvDev", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/36106343/super-slow-node-npm-commands"},
{"title": "node dotenv", "code": "require('dotenv').config();\n\nconsole.log(process.env.MY_ENV_VAR);", "date": "Oct 07 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "dotenv", "code": "\n$ npm install dotenv\n\n//--------------------\n\non file .env \n//--------------------\nDB_HOST=localhost\nDB_USER=root\nDB_PASS=s1mpl3\nDB_NAME=banco_de_dados\nDB_PORT=3306\n//--------------------\n\nimport the config from .env file \n//--------------------\n\nrequire('dotenv').config()\nmodule.exports = {\n    username:process.env.DB_USER,\n    password:process.env.DB_PASS,\n    database:process.env.DB_NAME,\n    host:process.env.DB_HOST,\n    dialect:\"mysql\"\n}\n", "date": "May 21 2020", "vote": 20, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "alessandrodev", "source_name": null, "source_url": null},
{"title": "install dotenv node js", "code": "npm install dotenv --save", "date": "Mar 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Good Grebe", "source_name": "medium.com", "source_url": "https://medium.com/@thejasonfile/using-dotenv-package-to-create-environment-variables-33da4ac4ea8f"},
{"title": ".env", "code": "require('dotenv').config()", "date": "Apr 16 2020", "vote": 4, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Blushing Bear", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/dotenv"},
{"title": ".env", "code": "npm\u00a0install\u00a0dotenv", "date": "Jun 06 2020", "vote": 1, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Evil Earthworm", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/dotenv"},
{"title": "nodejs dotenv path how to set", "code": "// when yours .env is in other place then default, you can set path to it\n\nconst path = require('path')\nrequire('dotenv').config({ path: path.resolve(__dirname, '../../.env') }); //use as many '../' as you need", "date": "Oct 14 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Scatterbrained Pennyduck", "source_name": null, "source_url": null},
{"title": "node code comment process real time", "code": "// Here is your comment...make one enter", "date": "Apr 29 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Excited Emu", "source_name": null, "source_url": null},
{"title": "node default version", "code": "# Install the version that you would like \nnvm install 6.1.0\n\n# Set 6.1.0 (or another version) as default\nnvm alias default 6.1.0\n", "date": "Apr 17 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Sparkling Spider", "source_name": "eric.blog", "source_url": "https://eric.blog/2016/08/23/set-default-node-version-with-nvm/"},
{"title": "node cluster", "code": "const cluster = require('cluster');\nconst http = require('http');\nconst numCPUs = require('os').cpus().length;\n\nif (cluster.isMaster) {\n  console.log(`Master ${process.pid} is running`);\n\n  // Fork workers.\n  for (let i = 0; i < numCPUs; i++) {\n    cluster.fork();\n  }\n\n  cluster.on('exit', (worker, code, signal) => {\n    console.log(`worker ${worker.process.pid} died`);\n  });\n} else {\n  // Workers can share any TCP connection\n  // In this case it is an HTTP server\n  http.createServer((req, res) => {\n    res.writeHead(200);\n    res.end('hello world\\n');\n  }).listen(8000);\n\n  console.log(`Worker ${process.pid} started`);\n}", "date": "Oct 22 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Frail Ferret", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/cluster.html"},
{"title": "nodejs cluster example", "code": "import http, { Server } from 'http'\nimport cluster, { Worker } from 'cluster'\nimport { cpus, CpuInfo } from 'os'\nimport consola from 'consola'\nimport chalk from 'chalk'\nimport app from './src/app'\n\nconst coreThread: CpuInfo[] = cpus()\n\nif (cluster.isMaster) {\n\tfor (let i = 0; i < coreThread.length; i++) {\n\t\tcluster.fork()\n\t}\n\n\tconst workersTread: any = []\n\tfor (const id in cluster.workers) {\n\t\tworkersTread.push(id)\n\t}\n\n\tworkersTread.forEach(\n\t\tasync (pid: number, _: number): Promise<void> => {\n\t\t\tawait cluster.workers[pid].send({\n\t\t\t\tfrom: 'isMaster',\n\t\t\t\ttype: 'SIGKILL',\n\t\t\t\tmessage: 'cleanup is worker dead and change to new worker'\n\t\t\t})\n\t\t}\n\t)\n\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tcluster.on('online', (worker: Worker): void => {\n\t\t\tif (worker.isConnected()) {\n\t\t\t\tconsole.info(`${chalk.greenBright('worker active pid')}: ${worker.process.pid}`)\n\t\t\t}\n\t\t})\n\n\t\tcluster.on('exit', (worker: Worker, code: number, signal: string): void => {\n\t\t\tif (worker.isDead()) {\n\t\t\t\tconsole.info(`${chalk.redBright('worker dead pid')}: ${worker.process.pid}`)\n\t\t\t}\n\t\t\tcluster.fork()\n\t\t})\n\t}\n} else {\n\tconst server = http.createServer(app) as Server\n\tconst host: any = process.env.HOST\n\tconst port: any = process.env.PORT\n\tserver.listen(port, host, (): void => consola.success(`server is running on ${port}`))\n}", "date": "Aug 29 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "node closes once you open app react-native", "code": "Open Your Project Folder in IDE like Visual Studio Code etc\n\nClick on node_modules folder\n\nClick on metro-config folder\n\nClick on src folder\n\nClick on default folder\n\nOpen blacklist.js file and replace the following code\n\nvar sharedBlacklist = [\n/node_modules[/\\\\]react[/\\\\]dist[/\\\\].*/,\n/website\\/node_modules\\/.*/,\n/heapCapture\\/bundle\\.js/,\n/.*\\/__tests__\\/.*/\n];\nwith\n\nvar sharedBlacklist = [\n/node_modules[\\/\\\\]react[\\/\\\\]dist[\\/\\\\].*/,\n/website\\/node_modules\\/.*/,\n/heapCapture\\/bundle\\.js/,\n/.*\\/__tests__\\/.*/\n];", "date": "Aug 12 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Ill Iguana", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/56919759/nodejs-server-opens-and-closes-quickly-after-react-native-run-android"},
{"title": "node close rabbitmq connection", "code": "  async sendMsg(msg) {\n    const channel = await this.initChannel();\n\n    const sendResult = channel.sendToQueue(this.queue, Buffer.from(msg), {\n      persistent: true,\n    });\n\n    if (!sendResult) {\n      await new Promise((resolve) => channel.once('drain', () => resolve));\n    }\n  }\n\n  async close() {\n    if (this.channel) await this.channel.close();\n    await this.conn.close();\n  }", "date": "May 20 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "tumulr", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/45698976/node-js-amqplib-when-to-close-connection"},
{"title": "node colors log", "code": "Reset = \"\\x1b[0m\"\nBright = \"\\x1b[1m\"\nDim = \"\\x1b[2m\"\nUnderscore = \"\\x1b[4m\"\nBlink = \"\\x1b[5m\"\nReverse = \"\\x1b[7m\"\nHidden = \"\\x1b[8m\"\n\nFgBlack = \"\\x1b[30m\"\nFgRed = \"\\x1b[31m\"\nFgGreen = \"\\x1b[32m\"\nFgYellow = \"\\x1b[33m\"\nFgBlue = \"\\x1b[34m\"\nFgMagenta = \"\\x1b[35m\"\nFgCyan = \"\\x1b[36m\"\nFgWhite = \"\\x1b[37m\"\n\nBgBlack = \"\\x1b[40m\"\nBgRed = \"\\x1b[41m\"\nBgGreen = \"\\x1b[42m\"\nBgYellow = \"\\x1b[43m\"\nBgBlue = \"\\x1b[44m\"\nBgMagenta = \"\\x1b[45m\"\nBgCyan = \"\\x1b[46m\"\nBgWhite = \"\\x1b[47m\"\n", "date": "Dec 09 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Important Ibex", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color"},
{"title": "eslint npm install", "code": "$ npm install eslint --save-dev\n$ ./node_modules/.bin/eslint --init", "date": "Jul 30 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Amused Aardvark", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/eslint"},
{"title": "node eslint", "code": "// package.json\n\"devDependencies\": {\n    \"eslint\": \"^7.2.0\",\n\t\"eslint-plugin-node\": \"^11.1.0\"\n}\n\n// .eslintrc.json\n{\n   \"extends\": [\n      \"eslint:recommended\",\n      \"plugin:node/recommended\"\n   ],\n   \"parserOptions\": {\n      // Only ESLint 6.2.0 and later support ES2020.\n      \"ecmaVersion\": 2020\n   },\n   \"rules\": {\n      \"node/exports-style\": [\"error\", \"module.exports\"],\n      \"node/file-extension-in-import\": [\"error\", \"always\"],\n      \"node/prefer-global/buffer\": [\"error\", \"always\"],\n      \"node/prefer-global/console\": [\"error\", \"always\"],\n      \"node/prefer-global/process\": [\"error\", \"always\"],\n      \"node/prefer-global/url-search-params\": [\"error\", \"always\"],\n      \"node/prefer-global/url\": [\"error\", \"always\"],\n      \"node/prefer-promises/dns\": \"error\",\n      \"node/prefer-promises/fs\": \"error\"\n   }\n}", "date": "Jun 07 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Graypes O'Wrathe", "source_name": null, "source_url": null},
{"title": "running eslint", "code": "\"lint\": \"eslint back/*.js && eslint backTest/*.js && eslint front/actions/*.js\"\n", "date": "Jan 13 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Poor Polecat", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/36307581/how-to-configure-package-json-to-run-eslint-script"},
{"title": "node check if running on localhost?", "code": "var os = require('os');\nvar database_uri;\n\nif(os.hostname().indexOf(\"local\") > -1)\n  // Server running on Localhost\n  database_uri = \"mongodb://localhost/database\";\nelse\n  // Server running on remote server\n  database_uri = \"mongodb://remotehost/database\";\n\n", "date": "Oct 21 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Calm Crossbill", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/21987311/check-is-nodejs-connection-come-from-localhost"},
{"title": "node check if file exists", "code": "const fs = require(\"fs\"); // Or `import fs from \"fs\";` with ESM\nif (fs.existsSync(path)) {\n    // Do something\n}", "date": "May 22 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Witty Worm", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/4482686/check-synchronously-if-file-directory-exists-in-node-js"},
{"title": "node if file exists", "code": "const fs = require(\"fs\"); // Or `import fs from \"fs\";` with ESM\nif (fs.existsSync(path)) {\n    // Do something\n}\n", "date": "Jan 13 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "gaz_edge", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/4482686/check-synchronously-if-file-directory-exists-in-node-js?answertab=active#tab-top"},
{"title": "node check if file exists", "code": "const fs = require('fs');\n\nlet file = '../path/to/chad_warden.mpeg';\n\n// async\nconst fileExists = (file) => {\n    return new Promise((resolve) => {\n        fs.access(file, fs.constants.F_OK, (err) => {\n            err ? resolve(false) : resolve(true)\n        });\n    })\n}\n\n// sync\nconst fileExistsSync = (file) => {\n    try {\n        fs.accessSync(file, fs.constants.R_OK | fs.constants.W_OK);\n        return true;\n      } catch (err) {\n        return false;\n      }\n}", "date": "Mar 16 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Charming Caterpillar", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/fs.html#fs_fs_access_path_mode_callback"},
{"title": "node biology definition", "code": " A point in a plant stem at which one or more leaves are attached", "date": "Aug 06 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Clumsy Cheetah", "source_name": null, "source_url": null},
{"title": "node app html generate", "code": "const generatePage = (name, github) => {\n  return `\n  <!DOCTYPE html> \n  <html lang=\"en\"> \n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Portfolio Demo</title>\n  </head>\n\n  <body>\n    <h1>${name}</h1>\n    <h2><a href=\"https://github.com/${github}\">Github</a></h2>\n  </body>\n  </html>\n  `;\n};", "date": "Apr 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "japan kid", "source_name": "courses.bootcampspot.com", "source_url": "https://courses.bootcampspot.com/courses/548/pages/9-dot-2-4-create-an-html-template?module_item_id=154975"},
{"title": "create node project", "code": "#1. server.js\nvar express = require('express');\nvar app = express();\n\napp.get('/', function (req, res) {\n  res.status(200).send('Hello World!');\n});\n\nvar port = process.env.PORT || 3000;\n\nvar server = app.listen(port, function() {\n  console.log('Express server listening on port ' + port);\n});\n\nopen cmd run server.js\n\"node server.js\"\nlog:Express server listening on port 3000\n\n& then\n\nopen link \"http://localhost:3000/\" in your browser and show result.", "date": "Apr 29 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Ankur", "source_name": "www.programmingquest.com", "source_url": "https://www.programmingquest.com/2018/10/node-js-express-server-hello-world.html"},
{"title": "node app create", "code": "using command line >>> \n\nnpm init\n\nopen text editor create a js file. for example like index.js and paste following code.\n\n>>> \n  \nconst http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('Hello World');\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});\n\n----\n\nrun using \nnode app.js", "date": "Mar 29 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Attractive Ape", "source_name": null, "source_url": null},
{"title": "node : The term 'node' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.", "code": "install node.js", "date": "Dec 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Super Snail", "source_name": null, "source_url": null},
{"title": "next js shared hosting without node js", "code": "const { createServer } = require(\"http\");\nconst { parse } = require(\"url\");\nconst next = require(\"next\");\nconst dev = process.env.NODE_ENV !== \"production\";\n\nconst port = !dev ? process.env.PORT : 3000;\n\n// Create the Express-Next App\nconst app = next({ dev });\nconst handle = app.getRequestHandler();\n\napp\n  .prepare()\n  .then(() => {\n    createServer((req, res) => {\n      const parsedUrl = parse(req.url, true);\n      const { pathname, query } = parsedUrl;\n      handle(req, res, parsedUrl);\n      console.log(\"pathname\", pathname);\n    }).listen(port, (err) => {\n      if (err) throw err;\n      console.log(`> Ready on http://localhost:${port}`);\n    });\n  })\n  .catch((ex) => {\n    console.error(ex.stack);\n    process.exit(1);\n  });", "date": "Nov 01 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Poised Peccary", "source_name": "github.com", "source_url": "https://github.com/vercel/next.js/discussions/12234"},
{"title": "mssql query node js", "code": "const sql = require('mssql')\nconst query=`select * from table`;\nconfig = {\n    database: \"dbname\",\n  // can keep these option required with latest version of mssql npm package\n    options: {\n      enableArithAbort: true,\n      encrypt: true,\n      rowCollectionOnRequestCompletion: false,\n    },\n    parseJSON: true,\n    password: \"password\",\n    port: port, // if youe database running on difrent port then 1433\n    server: \"server ip or name\",\n    user: \"usenme\",\n  };\n\n \nsql.on('error', err => {\n    // ... error handler\n})\n \nsql.connect(config).then(pool => {\n    return pool.request()\n        .query(query)\n}).then(result => {\n    console.log(result.recordset)\n}).catch(err => {\n    console.log(err)\n});\n", "date": "Nov 13 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Elated Echidna", "source_name": null, "source_url": null},
{"title": "move file from one folder to another in aws s3 nodejs", "code": "var AWS = require('aws-sdk');\nAWS.config.update({\n     accessKeyId: 'xxx',\n     secretAccessKey: 'xxx'\n    });\nvar s3 = new AWS.S3();\nvar params = {\n    Bucket : 'bucketname', /* Another bucket working fine */ \n    CopySource : 'bucketname/externall/1.txt', /* required */\n    Key : \"1.txt\", /* required */\n    ACL : 'public-read',\n};\ns3.copyObject(params, function(err, data) {\n    if (err)\n        console.log(err, err); // an error occurred\n    else {\n        console.log(data); // successful response\n    }\n});", "date": "Mar 02 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Alert Aardvark", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/32433948/copying-files-from-one-folder-to-another-folder-in-s3-of-same-bucket-node-js"},
{"title": "most popular company with nodejs", "code": "// Netflix", "date": "Oct 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Splendid Skipper", "source_name": null, "source_url": null},
{"title": "Mongoose node js", "code": "// getting-started.js\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/test', {useNewUrlParser: true});\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n});", "date": "Feb 23 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Distinct Dog", "source_name": null, "source_url": null},
{"title": "Mongoose node js", "code": "// getting-started.js\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/test', {useNewUrlParser: true});\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n});", "date": "Feb 23 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Distinct Dog", "source_name": null, "source_url": null},
{"title": "mongoose node js", "code": "// getting-started.js\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/test', {useNewUrlParser: true});", "date": "Jun 20 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Vivacious Vole", "source_name": "mongoosejs.com", "source_url": "https://mongoosejs.com/docs/"},
{"title": "Mongoose node js", "code": "// getting-started.js\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/test', {useNewUrlParser: true});\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n});", "date": "Feb 23 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Distinct Dog", "source_name": null, "source_url": null},
{"title": "mongoose node js", "code": "var db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n});", "date": "Jun 20 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Vivacious Vole", "source_name": "mongoosejs.com", "source_url": "https://mongoosejs.com/docs/"},
{"title": "Mongoose node js", "code": "// getting-started.js\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/test', {useNewUrlParser: true});\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n});", "date": "Feb 23 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Distinct Dog", "source_name": null, "source_url": null},
{"title": "Mongoose node js", "code": "// getting-started.js\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/test', {useNewUrlParser: true});\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n});", "date": "Feb 23 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Distinct Dog", "source_name": null, "source_url": null},
{"title": "Mongoose node js", "code": "// getting-started.js\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/test', {useNewUrlParser: true});\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n});", "date": "Feb 23 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Distinct Dog", "source_name": null, "source_url": null},
{"title": "nginx reverse proxy node js", "code": ". . .\n    location / {\n        proxy_pass http://localhost:8080;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_upgrade;\n    }\n}", "date": "Apr 24 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Amused Anteater", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-16-04"},
{"title": "Mongoose node js", "code": "// getting-started.js\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/test', {useNewUrlParser: true});\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n});", "date": "Feb 23 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Distinct Dog", "source_name": null, "source_url": null},
{"title": "Mongoose node js", "code": "// getting-started.js\nvar mongoose = require('mongoose');\nmongoose.connect('mongodb://localhost/test', {useNewUrlParser: true});\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n});", "date": "Feb 23 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Distinct Dog", "source_name": null, "source_url": null},
{"title": "mongoose connection nodejs", "code": "const mongoose = require('mongoose');\n\nconst connectDB = async () => {\n    mongoose\n        .connect('mongodb://localhost:27017/playground', {\n            useCreateIndex: true,\n            useNewUrlParser: true,\n            useUnifiedTopology: true,\n            useFindAndModify: false\n        })\n        .then(() => console.log('Connected Successfully'))\n        .catch((err) => console.error('Not Connected'));\n}\n\nmodule.exports = connectDB;", "date": "Feb 20 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Uptight Unicorn", "source_name": null, "source_url": null},
{"title": "new node js project vs code", "code": "npm install -g express-generator", "date": "Aug 06 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Panicky Pheasant", "source_name": "code.visualstudio.com", "source_url": "https://code.visualstudio.com/docs/nodejs/nodejs-tutorial"},
{"title": "mongoose connect", "code": "mongoose.connect('mongodb://localhost:27017/test', {\n  useMongoClient: true,\n  connectTimeoutMS: 1000\n})", "date": "Aug 07 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Yawning Yak", "source_name": null, "source_url": null},
{"title": "mongoose connection node", "code": "mongoose.connect('mongodb://localhost/myapp', { useNewUrlParser: true, useUnifiedTopology: true });\n", "date": "Aug 12 2020", "vote": 2, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Average Alpaca", "source_name": "mongoosejs.com", "source_url": "https://mongoosejs.com/docs/4.x/docs/connections.html"},
{"title": "mongoose connect", "code": "mongoose.connect('mongodb://username:password@host:port/database?options...', {useNewUrlParser: true});", "date": "Jul 09 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Unusual Unicorn", "source_name": "mongoosejs.com", "source_url": "https://mongoosejs.com/docs/connections.html"},
{"title": "updateone mongodb examples", "code": "const query = { \"name\": \"football\" };\nconst update = {\n  \"$push\": {\n    \"reviews\": {\n      \"username\": \"tombradyfan\",\n      \"comment\": \"I love football!!!\"\n    }\n  }\n};\nconst options = { \"upsert\": false };\n\nitemsCollection.updateOne(query, update, options)\n  .then(result => {\n    const { matchedCount, modifiedCount } = result;\n    if(matchedCount && modifiedCount) {\n      console.log(`Successfully added a new review.`)\n    }\n  })\n  .catch(err => console.error(`Failed to add review: ${err}`))\n", "date": "Feb 17 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Dark Dormouse", "source_name": "docs.mongodb.com", "source_url": "https://docs.mongodb.com/stitch/mongodb/actions/collection.updateOne/"},
{"title": "mongodb nodejs connect localhost", "code": "\"mongodb://localhost:27017/MyDb\"", "date": "Feb 01 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "raadu", "source_name": null, "source_url": null},
{"title": "mongodb bulkwrite nodejs", "code": "const { MongoClient } = require(\"mongodb\");\n// Replace the uri string with your MongoDB deployment's connection string.\nconst uri =\n  \"mongodb+srv://<user>:<password>@<cluster-url>?writeConcern=majority\";\nconst client = new MongoClient(uri);\nasync function run() {\n  try {\n    await client.connect();\n    const database = client.db(\"sample_mflix\");\n    const theaters = database.collection(\"theaters\");\n    const result = await theaters.bulkWrite([\n      { insertOne:\n        {\n          \"document\": {\n            location: {\n              address: { street1: '3 Main St.', city: 'Anchorage', state: 'AK', zipcode: '99501' },\n            }\n          }\n        }\n      },\n      { insertOne:\n        {\n          \"document\": {\n            location: {\n              address: { street1: '75 Penn Plaza', city: 'New York', state: 'NY', zipcode: '10001' },\n            }\n          }\n        }\n      },\n      { updateMany:\n        {\n          \"filter\": { \"location.address.zipcode\" : \"44011\" },\n          \"update\": { $set : { \"street2\" : \"25th Floor\" } },\n          \"upsert\": true\n        }\n      },\n      { deleteOne :\n        { \"filter\" : { \"location.address.street1\" : \"221b Baker St\"} }\n      },\n    ]);\n    console.log(result);\n  } finally {\n    await client.close();\n  }\n}\nrun().catch(console.dir)", "date": "Apr 26 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "North Bear", "source_name": "docs.mongodb.com", "source_url": "https://docs.mongodb.com/drivers/node/usage-examples/bulkWrite/"},
{"title": "mongodb atlas node js mongoose", "code": "try {\n    // Connect to the MongoDB cluster\n     mongoose.connect(\n      mongoAtlasUri,\n      { useNewUrlParser: true, useUnifiedTopology: true },\n      () => console.log(\" Mongoose is connected\")\n    );\n\n  } catch (e) {\n    console.log(\"could not connect\");\n  }\n", "date": "May 15 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Vivacious Vole", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/43394019/how-to-connect-to-mongodb-atlas-using-mongoose"},
{"title": "mongo query by object id node js", "code": "//declare ObjectId from mongodb module\nconst ObjectId = require('mongodb').ObjectId; \n\n//transform your param into an ObjectId\nvar id = req.params.id;       \nvar good_id = new ObjectId(id);\n\n//you can now query\nModel.find({_id: good_id})", "date": "Nov 09 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Cocaina777", "source_name": null, "source_url": null},
{"title": "mocha js", "code": "Mocha is a JavaScript test framework!\n\nvar assert = require('assert');\ndescribe('Array', function () {\n  describe('#indexOf()', function () {\n    it('should return -1 when the value is not present', function () {\n      assert.equal([1, 2, 3].indexOf(4), -1);\n    });\n  });\n});", "date": "Jun 15 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Frost Byte", "source_name": null, "source_url": null},
{"title": "mocha test cases in node js example", "code": "$ npm install --save mocha chai", "date": "Dec 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "RvDev", "source_name": "semaphoreci.com", "source_url": "https://semaphoreci.com/community/tutorials/getting-started-with-node-js-and-mocha"},
{"title": "mocha js", "code": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Mocha Tests</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/mocha/mocha.css\" />\n  </head>\n  <body>\n    <div id=\"mocha\"></div>\n\n    <script src=\"https://unpkg.com/chai/chai.js\"></script>\n    <script src=\"https://unpkg.com/mocha/mocha.js\"></script>\n\n    <script class=\"mocha-init\">\n      mocha.setup('bdd');\n      mocha.checkLeaks();\n    </script>\n    <script src=\"test.array.js\"></script>\n    <script src=\"test.object.js\"></script>\n    <script src=\"test.xhr.js\"></script>\n    <script class=\"mocha-exec\">\n      mocha.run();\n    </script>\n  </body>\n</html>\n", "date": "Nov 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Brave Booby", "source_name": "mochajs.org", "source_url": "https://mochajs.org/#running-mocha-in-the-browser"},
{"title": "MIME type Error CSS in nodejs Express", "code": "app.use(express.static(__dirname + '/public'));\n", "date": "May 02 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Colorful Cobra", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/48248832/stylesheet-not-loaded-because-of-mime-type"},
{"title": "middleware in node js", "code": "var express = require('express')\nvar app = express()\n\nvar myLogger = function (req, res, next) {\n  console.log('LOGGED')\n  next()\n}\n\napp.use(myLogger)\n\napp.get('/', function (req, res) {\n  res.send('Hello World!')\n})\n\napp.listen(3000)\n", "date": "Mar 18 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Hilarious Hummingbird", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/guide/writing-middleware.html"},
{"title": "what is middleware in node js", "code": "Notice the call above to next(). Calling this function invokes the next middleware function in the app. The next() function is not a part of the Node.js or Express API, but is the third argument that is passed to the middleware function. The next() function could be named anything, but by convention it is always named \u201cnext\u201d. To avoid confusion, always use this convention.\n", "date": "Jul 21 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Beautiful Badger", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/guide/writing-middleware.html"},
{"title": "what is app.use() used for", "code": "//app.get will see only exact match ex.> \"/book\" here app.get will not allow /book/1, etc \n//but app.use is different see below\n\n//what is difference between app.use and app.all\n//app.use takes only 1 callback while app.all takes multiple callbacks\n//app.use will only see whether url starts with specified path But, app.all() will match the complete path\n\napp.use( \"/book\" , middleware);\n// will match /book\n// will match /book/author\n// will match /book/subject\n\napp.all( \"/book\" , handler);\n// will match /book\n// won't match /book/author   \n// won't match /book/subject    \n\napp.all( \"/book/*\" , handler);\n// won't match /book        \n// will match /book/author\n// will match /book/subject", "date": "Jun 16 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Viraj", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/15601703/difference-between-app-use-and-app-get-in-express-js"},
{"title": "express router middleware", "code": "var express = require('express')\nvar app = express()\nvar router = express.Router()\n\n// a middleware function with no mount path. This code is executed for every request to the router\nrouter.use(function (req, res, next) {\n  console.log('Time:', Date.now())\n  next()\n})\n\n// a middleware sub-stack shows request info for any type of HTTP request to the /user/:id path\nrouter.use('/user/:id', function (req, res, next) {\n  console.log('Request URL:', req.originalUrl)\n  next()\n}, function (req, res, next) {\n  console.log('Request Type:', req.method)\n  next()\n})\n\n// a middleware sub-stack that handles GET requests to the /user/:id path\nrouter.get('/user/:id', function (req, res, next) {\n  // if the user ID is 0, skip to the next router\n  if (req.params.id === '0') next('route')\n  // otherwise pass control to the next middleware function in this stack\n  else next()\n}, function (req, res, next) {\n  // render a regular page\n  res.render('regular')\n})\n\n// handler for the /user/:id path, which renders a special page\nrouter.get('/user/:id', function (req, res, next) {\n  console.log(req.params.id)\n  res.render('special')\n})\n\n// mount the router on the app\napp.use('/', router)\n", "date": "Jan 10 2021", "vote": -2, "tags": ["javascript", "nodejs"], "posted_by": "Evil Eagle", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/guide/using-middleware.html"},
{"title": "nodejs make directory", "code": "var fs = require('fs');\nvar dir = './tmp';\nif (!fs.existsSync(dir)){\n    fs.mkdirSync(dir);\n}\n\n// or if complains about existence and nesting doesn't matter:\n\nvar shell = require('shelljs');\nshell.mkdir('-p', 'root/parent/tmp');", "date": "Mar 30 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Hobbes", "source_name": null, "source_url": null},
{"title": "login middleware node js jwt", "code": "const jwt = require('jsonwebtoken');\n\nmodule.exports = (req, res, next) => {\n  try {\n    const token = req.headers.authorization.split(' ')[1];\n    const decodedToken = jwt.verify(token, 'RANDOM_TOKEN_SECRET');\n    const userId = decodedToken.userId;\n    if (req.body.userId && req.body.userId !== userId) {\n      throw 'Invalid user ID';\n    } else {\n      next();\n    }\n  } catch {\n    res.status(401).json({\n      error: new Error('Invalid request!')\n    });\n  }\n};\nconst jwt = require('jsonwebtoken');\n\nmodule.exports = (req, res, next) => {\n  try {\n    const token = req.headers.authorization.split(' ')[1];\n    const decodedToken = jwt.verify(token, 'RANDOM_TOKEN_SECRET');\n    const userId = decodedToken.userId;\n    if (req.body.userId && req.body.userId !== userId) {\n      throw 'Invalid user ID';\n    } else {\n      next();\n    }\n  } catch {\n    res.status(401).json({\n      error: new Error('Invalid request!')\n    });\n  }\n};", "date": "May 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Dizzy Dotterel", "source_name": "openclassrooms.com", "source_url": "https://openclassrooms.com/en/courses/5614116-go-full-stack-with-node-js-express-and-mongodb/5656301-set-up-authentication-middleware"},
{"title": "mock sqs.sendMessage node js", "code": "import sendMessage from './';\nimport AWS from 'aws-sdk';\n\njest.mock('aws-sdk', () => {\n  const SQSMocked = {\n    sendMessage: jest.fn().mockReturnThis(),\n    promise: jest.fn()\n  };\n  return {\n    SQS: jest.fn(() => SQSMocked)\n  };\n});\n\nconst sqs = new AWS.SQS({\n  region: 'us-east-1'\n});\n\ndescribe.only('Test case for SQS SendMessage', () => {\n  beforeEach(() => {\n    (sqs.sendMessage().promise as jest.MockedFunction<any>).mockReset();\n  });\n  it('should return the UserEvent', async () => {\n    expect(jest.isMockFunction(sqs.sendMessage)).toBeTruthy();\n    expect(jest.isMockFunction(sqs.sendMessage().promise)).toBeTruthy();\n    (sqs.sendMessage().promise as jest.MockedFunction<any>).mockResolvedValueOnce('mocked data');\n    const actualValue = await sendMessage('testURL', 'data');\n    expect(actualValue).toEqual('mocked data');\n    expect(sqs.sendMessage).toBeCalledWith({ MessageBody: '\"testURL\"', QueueUrl: 'data' });\n    expect(sqs.sendMessage().promise).toBeCalledTimes(1);\n  });\n\n  it('should throw an error when send message error', async () => {\n    const sendMessageErrorMessage = 'network error';\n    (sqs.sendMessage().promise as jest.MockedFunction<any>).mockRejectedValueOnce(sendMessageErrorMessage);\n    await expect(sendMessage('testURL', 'data')).rejects.toThrowError(new Error(sendMessageErrorMessage));\n    expect(sqs.sendMessage).toBeCalledWith({ MessageBody: '\"testURL\"', QueueUrl: 'data' });\n    expect(sqs.sendMessage().promise).toBeCalledTimes(1);\n  });\n});", "date": "Jul 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Hurt Hawk", "source_name": null, "source_url": null},
{"title": "linkedin api nodejs tutorial", "code": "// paspport dependencies\n\nvar passport = require('passport');\nvar LinkedInStrategy = require('passport-linkedin-oauth2').Strategy;\n\n// linkedin app settings\nvar LINKEDIN_CLIENT_ID = \"CLIENT_ID_HERE\";\nvar LINKEDIN_CLIENT_SECRET = \"CLIENT_SECRET_HERE\";\nvar Linkedin = require('node-linkedin')(LINKEDIN_CLIENT_ID, LINKEDIN_CLIENT_SECRET);\n\npassport.serializeUser(function (user, done) {\n    done(null, user);\n});\n\npassport.deserializeUser(function (obj, done) {\n    done(null, obj);\n});\n\npassport.use(new LinkedInStrategy({\n    clientID: LINKEDIN_CLIENT_ID,\n    clientSecret: LINKEDIN_CLIENT_SECRET,\n    callbackURL: \"http://127.0.0.1:3000/auth/linkedin/callback\",\n    scope: ['r_emailaddress', 'r_basicprofile', 'rw_company_admin'],\n    passReqToCallback: true\n},\nfunction (req, accessToken, refreshToken, profile, done) {\n\treq.session.accessToken = accessToken;\n    process.nextTick(function () {\n        return done(null, profile);\n\t});\n}));\n\n// for auth\n\napp.get('/auth/linkedin',\n  passport.authenticate('linkedin', { state: 'SOME STATE'  }),\n  function(req, res){\n    // The request will be redirected to LinkedIn for authentication, so this\n    // function will not be called.\n});\n\n// for callback\n\napp.get('/auth/linkedin/callback', passport.authenticate('linkedin', { failureRedirect: '/' }),\nfunction (req, res) {\n    res.redirect('/');\n});\n", "date": "Feb 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Arjinoodles", "source_name": "vijayantkatyal.com", "source_url": "https://vijayantkatyal.com/blog/linkedin-api-calls.html"},
{"title": "libuv nodejs", "code": "Another important dependency is libuv, a C library that is used to abstract non-blocking I/O operations to a consistent interface across all supported platforms. It provides mechanisms to handle file system, DNS, network, child processes, pipes, signal handling, polling and streaming. It also includes a thread pool for offloading work for some things that can't be done asynchronously at the operating system level.", "date": "Aug 17 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Annoyed Alligator", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/56205620/why-is-libuv-needed-in-node-js"},
{"title": "learn and understand nodejs freetutorials", "code": "utserver -settingspath /opt/utorrent-server-alpha-v3_3/ &", "date": "May 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Ugliest Unicorn", "source_name": "ubuntuhandbook.org", "source_url": "http://ubuntuhandbook.org/index.php/2016/09/setup-%CE%BCtorrent-server-ubuntu-16-04/"},
{"title": "kick members node js", "code": "let kUser = message.guild.member(message.mentions.users.first() || message.guild.members.get(args[0]));\nif(!kUser) return message.channel.send(\"Please mention a user to kick!\")\nlet kReason = args.join(\" \").slice(22);\nif(!kReason) return message.channel.send (\"Please specify some reasons for the kick\")\nmessage.guild.member(kUser).kick(kReason);\nmessage.channel.send(`${kUser} has been kicked from the server`);\n", "date": "Nov 21 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Frightened Flamingo", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/56394211/how-to-run-the-kick-command-of-a-bot-via-node-js"},
{"title": "jwt token example in node js", "code": "function authenticateToken(req, res, next) {\n  // Gather the jwt access token from the request header\n  const authHeader = req.headers['authorization']\n  const token = authHeader && authHeader.split(' ')[1]\n  if (token == null) return res.sendStatus(401) // if there isn't any token\n\n  jwt.verify(token, process.env.ACCESS_TOKEN_SECRET as string, (err: any, user: any) => {\n    console.log(err)\n    if (err) return res.sendStatus(403)\n    req.user = user\n    next() // pass the execution off to whatever request the client intended\n  })\n}", "date": "Dec 29 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Concerned Cod", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/nodejs-jwt-expressjs"},
{"title": "jwt in node js", "code": "// index.js \n\nconst express = require('express');\nconst jwt = require('jsonwebtoken');\n\nconst app = express();\n\n// generate token for another API to use in req.header\napp.post('/login', (req, res) => {\n    const user = {\n        id: 1,\n        username: 'abhishek',\n        email: \"abhishek@gmail.com\"\n    }\n    let token = jwt.sign({ user: user }, 'shhhhh');\n    res.send(token);\n})\n\n// verifyToken is a function that is used for check in API that token exist or not\n// it can be put in between n number of API to check that authoriZed user loggedin or not.\napp.get('/api', verifyToken, (req, res) => {\n    try {\n        jwt.verify(req.token, 'shhhhh', (error, authData) => {\n            if (error) {\n                res.send(\"not logged in\")\n            }\n            res.json({\n                message: \"post Created\",\n                authData\n            })\n        })\n    } catch (error) {\n        res.send(error)\n    }\n})\n\n// This funtion is middleware. \nfunction verifyToken(req, res, next) {\n    try {\n        const bearerHeader = req.headers['authorization'];\n        if (typeof bearerHeader !== 'undefined') {\n            const bearerToken = bearerHeader.split(' ')[1];\n            req.token = bearerToken;\n            next();\n        }\n        else {\n            res.send(\"Not logged-in\")\n        }\n    }\n    catch {\n        res.send(\"something went wrong\")\n    }\n}\n\napp.listen(3000, () => {\n    console.log(\"server is runing\")\n})\n", "date": "Feb 18 2021", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "abhi", "source_name": null, "source_url": null},
{"title": "jwt implementation in node js", "code": "const jwt = require(\"jsonwebtoken\")\n\nconst jwtKey = \"my_secret_key\"\nconst jwtExpirySeconds = 300\n\nconst users = {\n\tuser1: \"password1\",\n\tuser2: \"password2\",\n}\n\nconst signIn = (req, res) => {\n\t// Get credentials from JSON body\n\tconst { username, password } = req.body\n\tif (!username || !password || users[username] !== password) {\n\t\t// return 401 error is username or password doesn't exist, or if password does\n\t\t// not match the password in our records\n\t\treturn res.status(401).end()\n\t}\n\n\t// Create a new token with the username in the payload\n\t// and which expires 300 seconds after issue\n\tconst token = jwt.sign({ username }, jwtKey, {\n\t\talgorithm: \"HS256\",\n\t\texpiresIn: jwtExpirySeconds,\n\t})\n\tconsole.log(\"token:\", token)\n\n\t// set the cookie as the token string, with a similar max age as the token\n\t// here, the max age is in milliseconds, so we multiply by 1000\n\tres.cookie(\"token\", token, { maxAge: jwtExpirySeconds * 1000 })\n\tres.end()\n}", "date": "Jul 12 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Bright Bear", "source_name": "www.sohamkamani.com", "source_url": "https://www.sohamkamani.com/blog/javascript/2019-03-29-node-jwt-authentication/"},
{"title": "json web token npm global", "code": "$\u00a0npm\u00a0install\u00a0jsonwebtoken", "date": "May 15 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Motionless Macaw", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/jsonwebtoken"},
{"title": "jwt token example in node js", "code": "function authenticateToken(req, res, next) {\n  // Gather the jwt access token from the request header\n  const authHeader = req.headers['authorization']\n  const token = authHeader && authHeader.split(' ')[1]\n  if (token == null) return res.sendStatus(401) // if there isn't any token\n\n  jwt.verify(token, process.env.ACCESS_TOKEN_SECRET as string, (err: any, user: any) => {\n    console.log(err)\n    if (err) return res.sendStatus(403)\n    req.user = user\n    next() // pass the execution off to whatever request the client intended\n  })\n}", "date": "Dec 29 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Concerned Cod", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/nodejs-jwt-expressjs"},
{"title": "npm package for jwt", "code": "$ npm install jwt-simple\n", "date": "May 05 2020", "vote": 1, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Ugly Unicorn", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/jwt-simple"},
{"title": "jsonwebtoken", "code": "jwt.sign({\u00a0\u00a0exp:\u00a0Math.floor(Date.now()\u00a0/\u00a01000)\u00a0+\u00a0(60\u00a0*\u00a060),\u00a0\u00a0data:\u00a0'foobar'},\u00a0'secret');", "date": "Jul 03 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Quaint Quail", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/jsonwebtoken"},
{"title": "jwt implementation in node js", "code": "const jwt = require(\"jsonwebtoken\")\n\nconst jwtKey = \"my_secret_key\"\nconst jwtExpirySeconds = 300\n\nconst users = {\n\tuser1: \"password1\",\n\tuser2: \"password2\",\n}\n\nconst signIn = (req, res) => {\n\t// Get credentials from JSON body\n\tconst { username, password } = req.body\n\tif (!username || !password || users[username] !== password) {\n\t\t// return 401 error is username or password doesn't exist, or if password does\n\t\t// not match the password in our records\n\t\treturn res.status(401).end()\n\t}\n\n\t// Create a new token with the username in the payload\n\t// and which expires 300 seconds after issue\n\tconst token = jwt.sign({ username }, jwtKey, {\n\t\talgorithm: \"HS256\",\n\t\texpiresIn: jwtExpirySeconds,\n\t})\n\tconsole.log(\"token:\", token)\n\n\t// set the cookie as the token string, with a similar max age as the token\n\t// here, the max age is in milliseconds, so we multiply by 1000\n\tres.cookie(\"token\", token, { maxAge: jwtExpirySeconds * 1000 })\n\tres.end()\n}", "date": "Jul 12 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Bright Bear", "source_name": "www.sohamkamani.com", "source_url": "https://www.sohamkamani.com/blog/javascript/2019-03-29-node-jwt-authentication/"},
{"title": "isodate mongodb nodejs", "code": "Ticket.aggregate([\n    {\n      $match: {\n        createdAt: {\n          $gte: new moment().startOf('month').toDate()\n        }\n      }\n    }\n  ]).then(results => {\n    // do something\n  })", "date": "Apr 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Krushn", "source_name": null, "source_url": null},
{"title": "is nodejs code visible client side", "code": "No, Nodejs code is not visible to the client. \n\nTo be precise Nodejs is a javascript run-time environment, \nwhich means it is an engine that executes javascript code. \n\nThe server code may contain endpoints, etc, which are callable by the client, \nand which return information from the server which is rendered in the \nbrowser, but the client cannot see the server-side code.", "date": "Jan 29 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Gifted Gull", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/52531245/is-node-js-node-js-code-visible-to-client-side"},
{"title": "is node js faster than python", "code": "Node. js is a better choice if your focus is on web applications and website \ndevelopment. Python is an ideal platform to do multiple things - web\napplications, integration with back-end applications, numerical computations,\nmachine learning, and network programming.\n\nBut all in all, Node is slightly faster than Python.", "date": "Apr 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Faithful Ferret", "source_name": "www.guru99.com", "source_url": "https://www.guru99.com/node-js-vs-python.html"},
{"title": "is knex built into node js", "code": "$ npm install knex --save\n\n# Then add one of the following (adding a --save) flag:\n$ npm install pg\n$ npm install sqlite3\n$ npm install mysql\n$ npm install mysql2\n$ npm install oracledb\n$ npm install mssql", "date": "Aug 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cheerful Crane", "source_name": "knexjs.org", "source_url": "http://knexjs.org/"},
{"title": "invoke lambda nodejs", "code": "var AWS = require('aws-sdk');\nAWS.config.region = 'eu-west-1';\nvar lambda = new AWS.Lambda();\n\nexports.handler = function(event, context) {\n  var params = {\n    FunctionName: 'Lambda_B', // the lambda function we are going to invoke\n    InvocationType: 'RequestResponse',\n    LogType: 'Tail',\n    Payload: '{ \"name\" : \"Alex\" }'\n  };\n\n  lambda.invoke(params, function(err, data) {\n    if (err) {\n      context.fail(err);\n    } else {\n      context.succeed('Lambda_B said '+ data.Payload);\n    }\n  })\n};\n", "date": "Nov 30 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Mushy Manx", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/35754766/nodejs-invoke-an-aws-lambda-function-from-within-another-lambda-function"},
{"title": "aws lambda function setup for node js", "code": "// first install serverless\n$  npm install -g serverless\n// create basic template\n$  serverless create --template aws-nodejs --name candidate\n// configure aws and genrate client id and client secret\nserverless config credentials --provider aws --key <your_access_key_id> --secret <your_access_key_secret>\n // deploy\n  serverless deploy", "date": "Jan 13 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bright Bee", "source_name": "www.serverless.com", "source_url": "https://www.serverless.com/blog/node-rest-api-with-serverless-lambda-and-dynamodb"},
{"title": "javascript farbige konsole in node", "code": "//make sure you have install colors, if not: npm install colors\n\nconst colors = require('colors');\nconsole.log('hello'.green); // green text\nconsole.log('I like cake and pies'.bold.red); // bold, red text \nconsole.log('All work and no play makes Jack a dull boy!'.rainbow); // rainbow", "date": "Jun 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fishi the fishy fish", "source_name": "www.ionos.de", "source_url": "https://www.ionos.de/digitalguide/websites/web-entwicklung/einfuehrung-in-nodejs/"},
{"title": "install nodejs ubuntu 20.04", "code": "sudo apt install nodejs\n", "date": "Dec 15 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Repulsive Raven", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-20-04"},
{"title": "ubuntu 20 lts install node 10", "code": "# install nodejs 10.x version \nsudo apt update\ncd ~\ncurl -sL https://deb.nodesource.com/setup_10.x -o nodesource_setup.sh\n# not important, but can be done\nnano nodesource_setup.sh\nsudo bash nodesource_setup.sh\nsudo apt install nodejs\nnode install npm -g\nnode --version\nnpm --version", "date": "Jan 18 2021", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Aggressive Anteater", "source_name": null, "source_url": null},
{"title": "npm install ubuntu 20.04", "code": "$ sudo apt install nodejs\n", "date": "Jul 05 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Testy Toad", "source_name": "linuxconfig.org", "source_url": "https://linuxconfig.org/how-to-install-node-js-on-ubuntu-20-04-lts-focal-fossa"},
{"title": "install nodejs ubuntu 19.04", "code": "sudo apt install curl\ncurl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -\nsudo apt-get update\nsudo apt-get install nodejs\nnodejs -v\nnpm -v", "date": "Apr 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Disgusted Dog", "source_name": "www.how2shout.com", "source_url": "https://www.how2shout.com/how-to/how-to-install-node-js-on-ubuntu-19-04.html"},
{"title": "install nodejs from ubuntu 18.04", "code": "sudo bash nodesource_setup.sh\n", "date": "Jun 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Inquisitive Impala", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-18-04"},
{"title": "install nodejs ubuntu 19.04", "code": "sudo apt install curl\ncurl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -\nsudo apt-get update\nsudo apt-get install nodejs\nnodejs -v\nnpm -v", "date": "Apr 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Disgusted Dog", "source_name": "www.how2shout.com", "source_url": "https://www.how2shout.com/how-to/how-to-install-node-js-on-ubuntu-19-04.html"},
{"title": "install node js lts ubuntu 18.04", "code": "// Enabling NodeSource Repository\n// replace %V% with desired major version\ncurl -sL https://deb.nodesource.com/setup_%V%.x | sudo bash -\n// Install using apt-get\nsudo apt-get install -y nodejs\n// check installed node version\nnode --version", "date": "Mar 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "abessrour", "source_name": null, "source_url": null},
{"title": "install nodejs from ubuntu 18.04", "code": "sudo bash nodesource_setup.sh\n", "date": "Jun 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Inquisitive Impala", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-18-04"},
{"title": "install nodejs from ubuntu 18.04", "code": "cd ~\ncurl -sL https://deb.nodesource.com/setup_10.x -o nodesource_setup.sh\n", "date": "Jun 11 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Inquisitive Impala", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-18-04"},
{"title": "install node js using nvm ubuntu", "code": "curl -sL https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh -o install_nvm.sh\n", "date": "Jun 15 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Inquisitive Impala", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-18-04"},
{"title": "install node js using nvm ubuntu", "code": "bash install_nvm.sh\n", "date": "Jun 15 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Inquisitive Impala", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-18-04"},
{"title": "install nodejs from ubuntu 18.04", "code": "sudo bash nodesource_setup.sh\n", "date": "Jun 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Inquisitive Impala", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-18-04"},
{"title": "install nodejs from ubuntu 18.04", "code": "cd ~\ncurl -sL https://deb.nodesource.com/setup_10.x -o nodesource_setup.sh\n", "date": "Jun 11 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Inquisitive Impala", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-18-04"},
{"title": "install nodejs command line to cpnel", "code": "# Make a new folder for node\nmkdir node\ncd node\n# Download and unzip node\ncurl -O https://nodejs.org/dist/v10.15.3/node-v10.15.3-linux-x64.tar.gz\ntar -xvzf node-v10.15.3-linux-x64.tar.gz --strip-components=1\n# Add node and npm it to PATH (and do so for future sessions too)\nexport PATH=$HOME/node/bin:$PATH\necho 'export PATH=$HOME/node/bin:$PATH' >> ~/.bashrc", "date": "Apr 20 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Faiz", "source_name": "medium.com", "source_url": "https://medium.com/@SimonEast/how-to-install-node-js-on-cpanel-shared-hosting-66b4ac3183cf"},
{"title": "install node js lts ubuntu 18.04", "code": "// Enabling NodeSource Repository\n// replace %V% with desired major version\ncurl -sL https://deb.nodesource.com/setup_%V%.x | sudo bash -\n// Install using apt-get\nsudo apt-get install -y nodejs\n// check installed node version\nnode --version", "date": "Mar 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "abessrour", "source_name": null, "source_url": null},
{"title": "install node js in manjaro", "code": "pacman -S nodejs npm", "date": "Dec 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Alive Alligator", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/download/package-manager/#arch-linux"},
{"title": "how to install nodejs on manjaro", "code": "pamac install nodejs", "date": "Feb 16 2021", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "install node js in manjaro", "code": "pacman -S nodejs npm\n", "date": "Apr 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Long Loris", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/download/package-manager/#arch-linux"},
{"title": "install node js 14", "code": "sudo apt update\ncurl -sL https://deb.nodesource.com/setup_14.x | sudo bash -\nsudo apt -y install nodejs\nnode  -v\n\n# Install Node Development tools\nsudo apt -y install gcc g++ make\n\n# Install Yarn\ncurl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\necho \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\nsudo apt update && sudo apt install yarn", "date": "Oct 29 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Anxious Anaconda", "source_name": null, "source_url": null},
{"title": "install node brew", "code": "brew update\n#As a safe measure you should run brew doctor to make sure your system is ready to brew. Run the command below and follow any recommendations from brew doctor.\n\nbrew doctor\n#Next, add Homebrew\u2019s location to your $PATH in your .bash_profile or .zshrc file.\n\necho 'export PATH=\"/usr/local/opt/icu4c/sbin:$PATH\"' >> ~/.profile\necho 'export PATH=\"/usr/local/opt/icu4c/bin:$PATH\"' >> ~/.profile\n#Next, install Node (npm will be installed with Node):\n\nbrew install node\nnode -v", "date": "Dec 17 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Energetic Echidna", "source_name": null, "source_url": null},
{"title": "install nodejs via homebrew", "code": "$ /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"", "date": "Apr 21 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Itchy Iguana", "source_name": "medium.com", "source_url": "https://medium.com/@hayasnc/how-to-install-nodejs-and-npm-on-mac-using-homebrew-b33780287d8f"},
{"title": "install node js on raspberry pi", "code": "curl -sL https://deb.nodesource.com/setup_10.x | sudo bash -", "date": "Dec 10 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Weary Wryneck", "source_name": "linuxize.com", "source_url": "https://linuxize.com/post/how-to-install-node-js-on-raspberry-pi/"},
{"title": "install node on raspberry pi", "code": "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash", "date": "Nov 24 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Attractive Ant", "source_name": "linuxize.com", "source_url": "https://linuxize.com/post/how-to-install-node-js-on-raspberry-pi/"},
{"title": "install node on raspberry pi", "code": "nvm install node", "date": "Nov 24 2020", "vote": -1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Attractive Ant", "source_name": "linuxize.com", "source_url": "https://linuxize.com/post/how-to-install-node-js-on-raspberry-pi/"},
{"title": "install node on raspberry pi", "code": "node --version", "date": "Nov 24 2020", "vote": -1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Attractive Ant", "source_name": "linuxize.com", "source_url": "https://linuxize.com/post/how-to-install-node-js-on-raspberry-pi/"},
{"title": "insert into mongodb node js", "code": "//CRUD\n\nconst mongodb = require('mongodb');\nconst MongoClient = mongodb.MongoClient;\n\nconst connectionURl = 'mongodb://127.0.0.1:27017';\nconst databaseName = 'task-manager';\n\nMongoClient.connect(\n\tconnectionURl,\n\t{ useNewUrlParser: true },\n\t(error, client) => {\n\t\tif (error) {\n\t\t\treturn console.log('unable to connect to database');\n\t\t}\n\n\t\tconst db = client.db(databaseName);\n\n\t\tdb.collection('users').insertOne({\n\t\t\tname: 'user',\n\t\t\tage: 24,\n\t\t});\n\t}\n);\n", "date": "Jul 03 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Jinkit", "source_name": null, "source_url": null},
{"title": "promp node js", "code": "const readline = require(\"readline\");\n\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question(\"What is your name ? \", function saveInput(name) {\n  console.log(`His name is ${name}`);\n  rl.close();\n});\n\nrl.on(\"close\", function saveInput() {\n    console.log(\"\\nBYE BYE !!!\");\n    process.exit(0);\n});", "date": "May 16 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "JoseHdez", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/command-line/how-to-prompt-for-command-line-input/"},
{"title": "input in node js", "code": "const readline = require('readline').createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n \nreadline.question('who are you: ', name => {\n\tconsole.log(`hello, hi there ${name}`);\n\treadline.close();\n})", "date": "Feb 18 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Poised Panda", "source_name": null, "source_url": null},
{"title": "node js ask for user input", "code": "const readline = require(\"readline\");\nconst rl = readline.createInterface({\n    input: process.stdin,\n    output: process.stdout\n});\n\nrl.question(\"What is your name ? \", function(name) {\n    rl.question(\"Where do you live ? \", function(country) {\n        console.log(`${name}, is a citizen of ${country}`);\n        rl.close();\n    });\n});\n\nrl.on(\"close\", function() {\n    console.log(\"\\nBYE BYE !!!\");\n    process.exit(0);\n});", "date": "Dec 23 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Lonely Lemur", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/command-line/how-to-prompt-for-command-line-input/"},
{"title": "how to get input from user in nodejs", "code": "const readline =\u00a0require('readline').createInterface({\u00a0\u00a0input: process.stdin,\u00a0\u00a0output: process.stdout}); readline.question('Who are you?', name => {\u00a0\u00a0console.log(`Hey there ${name}!`);\u00a0\u00a0readline.close();});", "date": "Mar 26 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Helpful Hyena", "source_name": "www.codecademy.com", "source_url": "https://www.codecademy.com/articles/getting-user-input-in-node-js"},
{"title": "get input from user in nodejs", "code": "const prompt =\u00a0require('prompt-sync')(); const name =\u00a0prompt('What is your name?');console.log(`Hey there ${name}`);", "date": "Jan 30 2021", "vote": -2, "tags": ["javascript", "nodejs"], "posted_by": "Dangerous Dugong", "source_name": "www.codecademy.com", "source_url": "https://www.codecademy.com/articles/getting-user-input-in-node-js"},
{"title": "index export in nodejs", "code": "// index.js\nmodule.exports = {\n  signIn: require('./signIn')\n, signOut: require('./signOut')\n};", "date": "Mar 04 2021", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Salo Hopeless", "source_name": null, "source_url": null},
{"title": "import path nodejs", "code": "const path = require('path')", "date": "Jul 12 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Deltanboi", "source_name": null, "source_url": null},
{"title": "infinite image slider with react and node js", "code": "git clone https://github.com/g787543/infinite-react-carousel.git\ncd infinite-react-carousel", "date": "Dec 07 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Hungry Hippopotamus", "source_name": "www.tutorialstuff.com", "source_url": "https://www.tutorialstuff.com/tutorials/infinite-carousel-for-react-2020"},
{"title": "image downloader extension in nodejs", "code": "const\u00a0download\u00a0=\u00a0require('image-downloader')\u00a0const\u00a0options\u00a0=\u00a0{\u00a0\u00a0url:\u00a0'http://someurl.com/image.jpg',\u00a0\u00a0dest:\u00a0'/path/to/dest'\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0will\u00a0be\u00a0saved\u00a0to\u00a0/path/to/dest/image.jpg}\u00a0download.image(options)\u00a0\u00a0.then(({\u00a0filename\u00a0})\u00a0=>\u00a0{\u00a0\u00a0\u00a0\u00a0console.log('Saved\u00a0to',\u00a0filename)\u00a0\u00a0//\u00a0saved\u00a0to\u00a0/path/to/dest/image.jpg\u00a0\u00a0})\u00a0\u00a0.catch((err)\u00a0=>\u00a0console.error(err))", "date": "Jul 29 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Hilarious Hamerkop", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/image-downloader"},
{"title": "image compression in nodejs", "code": "Install npm install browser-image-compression --save", "date": "Dec 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Victorious Vendace", "source_name": null, "source_url": null},
{"title": "install node js ubuntu", "code": "sudo apt-get install curl\ncurl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -\nsudo apt-get install nodejs\n# Check node version\nnode -v \n# v13.9.0\n# Also, check the npm version\nnpm -v \n# 6.13.7", "date": "Apr 08 2020", "vote": 38, "tags": ["javascript", "nodejs", "shell"], "posted_by": "SmokeFrog", "source_name": null, "source_url": null},
{"title": "install node js ubuntu", "code": "sudo apt-get install curl\ncurl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -\nsudo apt-get install nodejs\n# Check node version\nnode -v \n# v13.9.0\n# Also, check the npm version\nnpm -v \n# 6.13.7", "date": "Apr 08 2020", "vote": 38, "tags": ["javascript", "nodejs", "shell"], "posted_by": "SmokeFrog", "source_name": null, "source_url": null},
{"title": "install npm ubuntu", "code": "sudo apt update\nsudo apt install nodejs\nsudo apt install npm", "date": "Jan 03 2021", "vote": 2, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Flourish", "source_name": null, "source_url": null},
{"title": "how to install node js in ubuntu", "code": "//Author: Mohammad Arman Khan\n//How To Install Node.js on Ubuntu\n1: sudo apt-get update\n2: sudo apt-get install nodejs\n3: sudo apt-get install npm\n4: nodejs -v", "date": "Jan 07 2021", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Repulsive Ray", "source_name": null, "source_url": null},
{"title": "install nodejs latest version ubuntu", "code": "//STEP 1:install using curl (PPA)\nsudo apt update && sudo apt install curl -y\n//STEP 2:install latest version (replace 14.x with requird one(i.e 15.x))\ncurl -sL https://deb.nodesource.com/setup_15.x | sudo -E bash -\nsudo apt install nodejs\nnodejs -v\nv15.3.0", "date": "Dec 01 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Outlander", "source_name": "www.digitalocean.com", "source_url": "https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-18-04"},
{"title": "node install ubuntu", "code": "# Through nodesource\ncurl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -\nsudo apt install nodejs", "date": "May 14 2020", "vote": 8, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Awful Antelope", "source_name": null, "source_url": null},
{"title": "linux install node", "code": "curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -", "date": "Apr 28 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Light Loris", "source_name": "linuxize.com", "source_url": "https://linuxize.com/post/how-to-install-node-js-on-ubuntu-18.04/"},
{"title": "ubuntu install node js", "code": "curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -\nsudo apt install nodejs\nsudo apt install npm\nsudo apt update", "date": "Aug 17 2020", "vote": 7, "tags": ["javascript", "nodejs", "shell"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "install npm ubuntu", "code": "sudo apt update\nsudo apt install nodejs\nsudo apt install npm", "date": "Jan 03 2021", "vote": 2, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Flourish", "source_name": null, "source_url": null},
{"title": "how to install node js in ubuntu", "code": "//Author: Mohammad Arman Khan\n//How To Install Node.js on Ubuntu\n1: sudo apt-get update\n2: sudo apt-get install nodejs\n3: sudo apt-get install npm\n4: nodejs -v", "date": "Jan 15 2021", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Adorable Ape", "source_name": null, "source_url": null},
{"title": "linux install node", "code": "sudo apt install nodejs", "date": "Apr 28 2020", "vote": 10, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Light Loris", "source_name": "linuxize.com", "source_url": "https://linuxize.com/post/how-to-install-node-js-on-ubuntu-18.04/"},
{"title": "install nodejs ubuntu", "code": "curl -sL https://deb.nodesource.com/setup_15.x | sudo -E bash -\nsudo apt-get install nodejs", "date": "Mar 11 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Outrageous Octopus", "source_name": null, "source_url": null},
{"title": "icon api node js to browser", "code": "var connect = require('connect')\nvar favicon = require('serve-favicon')\nvar path = require('path')\n\nvar app = connect()\napp.use(favicon(path.join(__dirname, 'public', 'favicon.ico')))\n\n// Add your middleware here, etc.\n\napp.listen(3000)\n", "date": "Jan 24 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Motionless Monkey", "source_name": "expressjs.com", "source_url": "http://expressjs.com/en/resources/middleware/serve-favicon.html"},
{"title": "implementing node js app on server and runing npm", "code": "const http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('Hello World');\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});", "date": "Apr 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Blue Bear", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/getting-started-guide/"},
{"title": "https.get module in nodejs", "code": "const https = require('https')\nconst options = {\n  hostname: 'whatever.com',\n  port: 443,\n  path: '/todos',\n  method: 'GET'\n}\n\nconst req = https.request(options, res => {\n  console.log(`statusCode: ${res.statusCode}`)\n\n  res.on('data', d => {\n    process.stdout.write(d)\n  })\n})\n\nreq.on('error', error => {\n  console.error(error)\n})\n\nreq.end()", "date": "Dec 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Determined Dove", "source_name": "nodejs.dev", "source_url": "https://nodejs.dev/learn/making-http-requests-with-nodejs"},
{"title": "how to create node js server", "code": "/* ====== create node.js server with core 'http' module ====== */\n// dependencies\nconst http = require(\"http\");\n\n// PORT\nconst PORT = 3000;\n\n// server create\nconst server = http.createServer((req, res) => {\n   if (req.url === \"/\") {\n      res.write(\"This is home page.\");\n      res.end();\n   } else if (req.url === \"/about\" && req.method === \"GET\") {\n      res.write(\"This is about page.\");\n      res.end();\n   } else {\n      res.write(\"Not Found!\");\n      res.end();\n   }\n});\n\n// server listen port\nserver.listen(PORT);\n\nconsole.log(`Server is running on PORT: ${PORT}`);\n\n/* ========== *** ========== */\n\n/* ====== create node.js server with express.js framework ====== */\n// dependencies\nconst express = require(\"express\");\n\nconst app = express();\n\napp.get(\"/\", (req, res) => {\n   res.send(\"This is home page.\");\n});\n\napp.post(\"/\", (req, res) => {\n   res.send(\"This is home page with post request.\");\n});\n\n// PORT\nconst PORT = 3000;\n\napp.listen(PORT, () => {\n   console.log(`Server is running on PORT: ${PORT}`);\n});\n\n\n// ======== Instructions ========\n// save this as index.js\n// you have to download and install node.js on your machine\n// open terminal or command prompt\n// type node index.js\n// find your server at http://localhost:3000", "date": "Jan 09 2021", "vote": 34, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": null, "source_url": null},
{"title": "http module in nodejs", "code": "\n//HTTP MODULE NODE.JS\nvar http = require('http');\nvar server = http.createServer(function(req, res){\n  //write code here\n});\nserver.listen(5000); ", "date": "Jan 13 2021", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Repulsive Ray", "source_name": null, "source_url": null},
{"title": "how to write to a file with javascript without nodejs", "code": "function convertToJSON() {\n  var firstname = document.getElementById('firstname').value;\n  var lastname = document.getElementById('lastname').value;\n  var email = document.getElementById('email').value;\n\n  var jsonObject = {\n    \"FirstName\": firstname,\n    \"LastName\": lastname,\n    \"email\": email\n  }\n\n  document.getElementById('output').value = JSON.stringify(jsonObject)\n}\n\nfunction saveToFile() {\n  convertToJSON();\n  var jsonObjectAsString = document.getElementById('output').value;\n\n  var blob = new Blob([jsonObjectAsString], {\n    //type: 'application/json'\n    type: 'octet/stream'\n  });\n  console.log(blob);\n\n  var anchor = document.createElement('a')\n  anchor.download = \"user.json\";\n  anchor.href = window.URL.createObjectURL(blob);\n  anchor.innerHTML = \"download\"\n  anchor.click();\n\n  console.log(anchor);\n\n  document.getElementById('output').append(anchor)\n\n\n}", "date": "Dec 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Future games", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/48199781/without-node-js-or-running-a-server-is-it-possible-to-create-output-a-json-file?rq=1"},
{"title": "HOW WRITE AND SAVE JSON FILE IN NODEJS", "code": "'use strict';\n\nconst fs = require('fs');\n\nlet student = { \n    name: 'Mike',\n    age: 23, \n    gender: 'Male',\n    department: 'English',\n    car: 'Honda' \n};\n \nlet data = JSON.stringify(student, null, 2);\n\nfs.writeFile('student-3.json', data, (err) => {\n    if (err) throw err;\n    console.log('Data written to file');\n});\n\nconsole.log('This is after the write call');\n", "date": "Sep 30 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Handsome Hamerkop", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-json-files-with-node-js/"},
{"title": "how to wait for an exec command to fininsh in nodejs", "code": "const exec = require('child_process').exec;\n\nfunction os_func() {\n    this.execCommand = function(cmd, callback) {\n        exec(cmd, (error, stdout, stderr) => {\n            if (error) {\n                console.error(`exec error: ${error}`);\n                return;\n            }\n\n            callback(stdout);\n        });\n    }\n}\nvar os = new os_func();\n\nos.execCommand('SomeCommand', function (returnvalue) {\n    // Here you can get the return value\n});", "date": "Jun 29 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Outstanding Oystercatcher", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/41037042/nodejs-wait-for-exec-in-function"},
{"title": "write json file nodejs", "code": "const fs = require('fs');\nconst path = require('path');\n\nlet student = { \n    name: 'Mike',\n    age: 23, \n    gender: 'Male',\n    department: 'English',\n    car: 'Honda' \n};\n \nfs.writeFileSync(path.resolve(__dirname, 'student.json'), JSON.stringify(student));\n", "date": "Apr 13 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Victor Grk", "source_name": null, "source_url": null},
{"title": "access to static file nodejs", "code": "app.use(express.static(__dirname + '/public'));\n<link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\" />\n", "date": "May 14 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Amin :)", "source_name": null, "source_url": null},
{"title": "how to use static file node js", "code": "app.use(express.static('public'))\napp.use(express.static('files'))\n", "date": "Sep 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Energetic Eagle", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/static-files.html"},
{"title": "how to use static file node js", "code": "app.use('/static', express.static(path.join(__dirname, 'public')))\n", "date": "Sep 25 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Energetic Eagle", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/static-files.html"},
{"title": "how to use static file node js", "code": "app.use('/static', express.static('public'))\n", "date": "Sep 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Energetic Eagle", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/static-files.html"},
{"title": "install dotenv", "code": "# For python users only\npip install python-dotenv", "date": "Dec 20 2020", "vote": 2, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Random boi", "source_name": null, "source_url": null},
{"title": "node dotenv", "code": "require('dotenv').config();\n\nconsole.log(process.env.MY_ENV_VAR);", "date": "Oct 07 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "dotenv", "code": "\n$ npm install dotenv\n\n//--------------------\n\non file .env \n//--------------------\nDB_HOST=localhost\nDB_USER=root\nDB_PASS=s1mpl3\nDB_NAME=banco_de_dados\nDB_PORT=3306\n//--------------------\n\nimport the config from .env file \n//--------------------\n\nrequire('dotenv').config()\nmodule.exports = {\n    username:process.env.DB_USER,\n    password:process.env.DB_PASS,\n    database:process.env.DB_NAME,\n    host:process.env.DB_HOST,\n    dialect:\"mysql\"\n}\n", "date": "May 21 2020", "vote": 20, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "alessandrodev", "source_name": null, "source_url": null},
{"title": "how to install dotenv", "code": "# with npm \nnpm install dotenv\n \n# or with Yarn \nyarn add dotenv", "date": "Mar 09 2021", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "AKA_Mishra", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/dotenv"},
{"title": "install dotenv node js", "code": "npm install dotenv --save", "date": "Mar 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Good Grebe", "source_name": "medium.com", "source_url": "https://medium.com/@thejasonfile/using-dotenv-package-to-create-environment-variables-33da4ac4ea8f"},
{"title": ".env", "code": "require('dotenv').config()", "date": "Apr 16 2020", "vote": 4, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Blushing Bear", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/dotenv"},
{"title": "how to use request module in node js", "code": "const request = require('request');\nrequest('http://www.google.com', function (error, response, body) {\n  console.error('error:', error); // Print the error if one occurred\n  console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n  console.log('body:', body); // Print the HTML for the Google homepage.\n});", "date": "Aug 07 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Helpful Hedgehog", "source_name": null, "source_url": null},
{"title": "html to pdf node js background color", "code": "It works if you set printBackground: true to the options", "date": "May 10 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "florinrelea", "source_name": null, "source_url": null},
{"title": "how to manage a db connection in javascript", "code": "\n//put these lines in a seperate file\nconst mysql = require('mysql2');\n\nconst connection = mysql.createPool({\n    host: \"localhost\",\n    user: \"\",\n    password: \"\",\n    database: \"\"\n    // here you can set connection limits and so on\n});\n\nmodule.exports = connection;\n\n//put these on destination page\nconst connection = require('../util/connection');\n\nasync function getAll() {\n    const sql = \"SELECT * FROM tableName\";\n    const [rows] = await connection.promise().query(sql);\n    return rows;\n} \nexports.getAll = getAll;", "date": "May 09 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Alive Anaconda", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/49286687/managing-database-connections-in-node-js-best-practices"},
{"title": "how to use online mysql database with node js", "code": "Connected", "date": "Jan 10 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Joyous Jellyfish", "source_name": null, "source_url": null},
{"title": "how to use of socket io on a route in nodejs", "code": "//Using Express 4, in your app.js file you can use\napp.set('socketio', io);\n\n//then in your router you can access it like this\nrouter.post('/getRides', function(req, res, next) {\n    var io = req.app.get('socketio');\n\n    io.to(//socket.id//).emit(\"message\", data);\n\n    db.rides.find(function(err, docs) {\n        res.json(docs);\n    });\n};", "date": "Aug 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tame Teira", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/47249009/nodejs-socket-io-in-a-router-page/47252201"},
{"title": "how to use of socket io on a route in nodejs", "code": "router.post('/getRides', function(req, res, next) {\n    var io = req.app.get('socketio');\n\n    io.to(//socket.id//).emit(\"message\", data);\n\n    db.rides.find(function(err, docs) {\n        res.json(docs);\n    });\n};", "date": "Aug 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tame Teira", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/47249009/nodejs-socket-io-in-a-router-page/47252201"},
{"title": "read json file nodejs", "code": "const fs = require('fs');\nconst path = require('path');\n\nlet rawdata = fs.readFileSync(path.resolve(__dirname, 'student.json'));\nlet student = JSON.parse(rawdata);\nconsole.log(student);", "date": "Apr 13 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Victor Grk", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-json-files-with-node-js/"},
{"title": "how to use json file in nodejs", "code": "D:\\NodeJs>node readsync.js\n *START*\nOutput Content:\n /* content here */\n*EXIT*\n// Define JSON File\n var fs = require(\"fs\");\n console.log(\"\\n *STARTING* \\n\");\n// Get content from file\n var contents = fs.readFileSync(\"jsoncontent.json\");\n// Define to JSON type\n var jsonContent = JSON.parse(contents);\n// Get Value from JSON\n console.log(\"User Name:\", jsonContent.username);\n console.log(\"Email:\", jsonContent.email);\n console.log(\"Password:\", jsonContent.password);\nlog(\"\\n *EXIT* \\n\");\n", "date": "Dec 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Annoying Aardvark", "source_name": "www.codementor.io", "source_url": "https://www.codementor.io/@codementorteam/how-to-use-json-files-in-node-js-85hndqt32"},
{"title": "how to use json file in nodejs", "code": "// Read Synchrously\nvar fs = require(\"fs\");\nconsole.log(\"\\n *START* \\n\");\nvar content = fs.readFileSync(\"content.txt\");\nconsole.log(\"Output Content : \\n\"+ content);\nconsole.log(\"\\n *EXIT* \\n\");\n", "date": "Dec 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Annoying Aardvark", "source_name": "www.codementor.io", "source_url": "https://www.codementor.io/@codementorteam/how-to-use-json-files-in-node-js-85hndqt32"},
{"title": "how to validate email in node js", "code": "var emailRegex = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n\nfunction isEmailValid(email) {\n    if (!email)\n        return false;\n\n    if(email.length>254)\n        return false;\n\n    var valid = emailRegex.test(email);\n    if(!valid)\n        return false;\n\n    // Further checking of some things regex can't handle\n    var parts = email.split(\"@\");\n    if(parts[0].length>64)\n        return false;\n\n    var domainParts = parts[1].split(\".\");\n    if(domainParts.some(function(part) { return part.length>63; }))\n        return false;\n\n    return true;\n}\n", "date": "Jan 14 2021", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Worrisome Wolverine", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/52456065/how-to-format-and-validate-email-node-js"},
{"title": "setup node js express basic setup", "code": "npm init -y\nnpm i express\n", "date": "Jul 03 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "create node project", "code": "#1. server.js\nvar express = require('express');\nvar app = express();\n\napp.get('/', function (req, res) {\n  res.status(200).send('Hello World!');\n});\n\nvar port = process.env.PORT || 3000;\n\nvar server = app.listen(port, function() {\n  console.log('Express server listening on port ' + port);\n});\n\nopen cmd run server.js\n\"node server.js\"\nlog:Express server listening on port 3000\n\n& then\n\nopen link \"http://localhost:3000/\" in your browser and show result.", "date": "Apr 29 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Ankur", "source_name": "www.programmingquest.com", "source_url": "https://www.programmingquest.com/2018/10/node-js-express-server-hello-world.html"},
{"title": "how to use http in development mode for nodejs", "code": "var   fs = require(\"fs\"),\n      http = require(\"https\");\n\nvar privateKey = fs.readFileSync('sslcert/server.key').toString();\nvar certificate = fs.readFileSync('sslcert/server.crt').toString();\n\nvar credentials = {key: privateKey, cert: certificate};\n\nvar server = http.createServer(credentials,function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end('Hello World\\n');\n});\n\nserver.listen(8000);", "date": "Jul 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/11744975/enabling-https-on-express-js"},
{"title": "how to use a fixed time zone in nodejs", "code": "const nDate = new Date().toLocaleString('en-US', {\n  timeZone: 'Asia/Calcutta'\n});\n\nconsole.log(nDate);", "date": "May 02 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Funny Fox", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/8083410/how-can-i-set-the-default-timezone-in-node-js"},
{"title": "how to upload file to s3 nodejs", "code": "const fs = require('fs');\nconst AWS = require('aws-sdk');\n\nconst s3 = new AWS.S3({\n    accessKeyId: process.env.AWS_ACCESS_KEY,\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY\n});\n\nconst fileName = 'contacts.csv';\n\nconst uploadFile = () => {\n  fs.readFile(fileName, (err, data) => {\n     if (err) throw err;\n     const params = {\n         Bucket: 'testBucket', // pass your bucket name\n         Key: 'contacts.csv', // file will be saved as testBucket/contacts.csv\n         Body: JSON.stringify(data, null, 2)\n     };\n     s3.upload(params, function(s3Err, data) {\n         if (s3Err) throw s3Err\n         console.log(`File uploaded successfully at ${data.Location}`)\n     });\n  });\n};\n\nuploadFile();\n\n", "date": "Feb 03 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Encouraging Elk", "source_name": "www.zeolearn.com", "source_url": "https://www.zeolearn.com/magazine/uploading-files-to-aws-s3-using-nodejs"},
{"title": "update nodejs", "code": "//First, clear the npm cache:\n\tnpm cache clean -f\n\n//Install n, Node\u2019s version manager:\n\tnpm install -g n\n    \n//With the n module installed, you can use it to:\n\tInstall the latest stable version: n stable\n\tInstall the latest release: n latest", "date": "Apr 30 2020", "vote": 21, "tags": ["javascript", "nodejs"], "posted_by": "D@RK$T@R", "source_name": null, "source_url": null},
{"title": "how to update node js version", "code": "//check node version\n>node -v\n// let's install a program called n that will let us easily switch \n//between Node versions.\n>npm install -g n\n//Upgrading to the latest stable version\n>n stable \n//Changing to a specific version\n>n 10.16.0\n", "date": "Jul 14 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Volcano", "source_name": null, "source_url": null},
{"title": "update version of node gyp", "code": "In cmd,\n  \nwhere node\n \n$ cd \"C:\\Program Files\\nodejs\\node_modules\\npm\"\n\n$ npm install -g node-gyp@latest", "date": "Jun 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Grotesque Grasshopper", "source_name": "github.com", "source_url": "https://github.com/nodejs/node-gyp/wiki/Updating-npm's-bundled-node-gyp"},
{"title": "upgrade node version", "code": "nvm install v12.16.2", "date": "Apr 25 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Wicked Walrus", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/10075990/upgrading-node-js-to-latest-version"},
{"title": "node updaten", "code": "npm cache clean -f\nnpm install -g n\nn stable", "date": "Oct 15 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Dead Deer", "source_name": null, "source_url": null},
{"title": "how to upgrade node.js", "code": "#linux\nsudo npm install n -g\nsudo n stable\n#windows\n#install the .msi from https://nodejs.org/en/download/", "date": "Dec 20 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Pigi", "source_name": null, "source_url": null},
{"title": "How to uninstall npm modules in node js?", "code": "The command is simply npm uninstall <name>\n// Here are different options:\n// - removes the module from node_modules but \n//   does NOT update package.json\nnpm uninstall <name>\n\n// - removes it from dependencies in package.json aswell\nnpm uninstall <name> --save\n\n// - removes it from devDependencies in package.json aswell\nnpm uninstall <name> --save-dev\n\n// -  also removes it globally \nnpm uninstall -g <name> --save \n\n//    If you're removing a global package, however, any applications \n//    referencing it will crash.\n\n// A local install will be in the node_modules/ directory of your \n//  application. This won't affect the application if a module remains\n//  there with no references to it.\n\n// The Node.js documents https://npmjs.org/doc/ have all the commands\n// that you need to know with npm.", "date": "Apr 16 2020", "vote": 37, "tags": ["javascript", "nodejs"], "posted_by": "tsboh", "source_name": null, "source_url": null},
{"title": "how to uninstall nodejs web server", "code": "sudo rm -rf ~/.npm ~/.nvm ~/node_modules ~/.node-gyp ~/.npmrc ~/.node_repl_history", "date": "Feb 05 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Ugly Unicorn", "source_name": "www.codegrepper.com", "source_url": "https://www.codegrepper.com/code-examples/typescript/How+do+I+completely+uninstall+Node.js%2C+and+reinstall+from+beginning+%28Mac+OS+X%29"},
{"title": "how to store and delete s3 image using node js", "code": "const s3 = new AWS.S3(\n  {  accessKeyId: IAM_USER_KEY,  /* required */# Put your iam user key \n   secretAccessKey: IAM_USER_SECRET, /* required */  # Put your iam user secret key\n   Bucket: BUCKET_NAME     /* required */     # Put your bucket name\n  }\n);\n\ns3.deleteObject({\n  Bucket: MY_BUCKET,\n  Key: 'some/subfolders/nameofthefile1.extension'\n},function (err,data){})\n\n   s3.createBucket({\n            Bucket: BUCKET_NAME        /* Put your bucket name */\n        }, function () {\n            s3.putObject(params, function (err, data) {});\n        });", "date": "Oct 02 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Annoyed Alligator", "source_name": "medium.com", "source_url": "https://medium.com/@rajputankit22/read-write-and-delete-file-from-s3-bucket-via-nodejs-2e17047d2178"},
{"title": "how to split index.js to routes nodejs", "code": "var express = require('express');\nvar router = express.Router();\n\n// middleware that is specific to this router\nrouter.use(function timeLog (req, res, next) {\n  console.log('Time: ', Date.now());\n  next();\n});\n// define the home page route\nrouter.get('/', function (req, res) {\n  res.send('Birds home page');\n});\n// define the about route\nrouter.get('/about', function (req, res) {\n  res.send('About birds');\n});\n\nmodule.exports = router;", "date": "Feb 18 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Alive Angelfish", "source_name": null, "source_url": null},
{"title": "how to split a string into chunks nodejs", "code": "function chunkString(str, length) {\n  return str.match(new RegExp('.{1,' + length + '}', 'g'));\n}\n", "date": "Mar 05 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Uptight Unicorn", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/7033639/split-large-string-in-n-size-chunks-in-javascript"},
{"title": "how to set expire time of jwt token in node js", "code": "var token = jwt.sign({email_id:'123@gmail.com'}, \"Stack\", {\n\n                        expiresIn: '24h' // expires in 24 hours\n\n                         });", "date": "Jul 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fine Fly", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/45207104/how-to-set-jwt-token-expiry-time-to-maximum-in-nodejs"},
{"title": "how to set time with jwt token in node js", "code": " var token = jwt.sign({email_id:'123@gmail.com'}, \"Stack\", {\n        expiresIn: \"10h\" // it will be expired after 10 hours\n        //expiresIn: \"20d\" // it will be expired after 20 days\n       //expiresIn: 120 // it will be expired after 120ms\n });", "date": "Jul 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fine Fly", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/45207104/how-to-set-jwt-token-expiry-time-to-maximum-in-nodejs"},
{"title": "how to send message to specific client using ws node js", "code": "var Server = require('ws').Server;\nvar port = process.env.PORT || 9030;\nvar ws = new Server({port: port});\n\nvar sockets = [];\nws.on('connection', function(w){\n  \n  var id = w.upgradeReq.headers['sec-websocket-key'];\n  console.log('New Connection id :: ', id);\n  w.send(id);\n  w.on('message', function(msg){\n    var id = w.upgradeReq.headers['sec-websocket-key'];\n    var message = JSON.parse(msg);\n    \n    sockets[message.to].send(message.message);\n\n    console.log('Message on :: ', id);\n    console.log('On message :: ', msg);\n  });\n  \n  w.on('close', function() {\n    var id = w.upgradeReq.headers['sec-websocket-key'];\n    console.log('Closing :: ', id);\n  });\n\n  sockets[id] = w;\n});\n\n", "date": "Jul 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "amnesiac dev", "source_name": "blog.revathskumar.com", "source_url": "https://blog.revathskumar.com/2015/08/websockets-simple-client-and-server.html"},
{"title": "how to understand if nodejs is out of memory", "code": "const used = process.memoryUsage().heapUsed / 1024 / 1024;\nconsole.log(`The script uses approximately ${Math.round(used * 100) / 100} MB`);", "date": "May 17 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Difficult Dormouse", "source_name": "www.valentinog.com", "source_url": "https://www.valentinog.com/blog/node-usage/"},
{"title": "how to sanitize request body in node js", "code": "export const registrationSchema = {\n\u00a0\u00a0\u00a0\u00a0\"email\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0notEmpty: true,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0isEmail: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0errorMessage: \"Invalid Email\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0\"password\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0notEmpty: true,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0isLength: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0options: [{min: 12}],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0errorMessage: \"Must be at least 12 characters\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0matches: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0options: [\"(?=.*[a-zA-Z])(?=.*[0-9]+).*\", \"g\"],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0errorMessage: \"Password must be alphanumeric.\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0errorMessage: \"Invalid password\"\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0\"firstName\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0notEmpty: false,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0isLength: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0options: [{max: 200}],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0errorMessage: \"The first name must be under 200 characters\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0matches: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0options: [\"^[a-z ,.'-]+$\", \"i\"],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0errorMessage: \"The first name can only contain letters and the characters (,.'-)\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0\"lastName\": {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0notEmpty: false,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0isLength: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0options: [{max: 200}],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0errorMessage: \"The last name must be under 200 characters\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0},\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0matches: {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0options: [\"^[a-z ,.'-]+$\", \"i\"],\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0errorMessage: \"The last name can only contain letters and the characters (,.'-)\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n};\n", "date": "Nov 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Friendly Fly", "source_name": "lockmedown.com", "source_url": "https://lockmedown.com/5-steps-handling-untrusted-node-js-data/"},
{"title": "how to run node js with proxy", "code": "$ npm config set proxy http://localhost:3128\n$ npm config set https-proxy http://localhost:3128\n", "date": "Apr 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Adventurous Addax", "source_name": "gist.github.com", "source_url": "https://gist.github.com/alienlebarge/10260853"},
{"title": "how to run node js with proxy", "code": "$ npm config delete http-proxy\n$ npm config delete https-proxy\n", "date": "Apr 24 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Adventurous Addax", "source_name": "gist.github.com", "source_url": "https://gist.github.com/alienlebarge/10260853"},
{"title": "npm handlebars", "code": "$\u00a0npm\u00a0install\u00a0express-handlebars", "date": "Feb 28 2020", "vote": 1, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Shiny Shark", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/express-handlebars"},
{"title": "how to use handlebars in node js", "code": "$ npm install --save express express-handlebars\n", "date": "Mar 25 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cute Crab", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/guide-to-handlebars-templating-engine-for-node/"},
{"title": "how to run node js on mac", "code": "node test-node.js", "date": "Dec 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Hungry Hedgehog", "source_name": "www.webucator.com", "source_url": "https://www.webucator.com/how-to/how-run-nodejs-application-on-mac.cfm"},
{"title": "how to run a js file in node", "code": "Save your .js file in the same folder as node.js,\nFor windows , Usually location is- \"C:\\Program Files\\nodejs\"\nOpen 'Command prompt and locate node.js folder' OR directly open 'Node.js command prompt' and type \n>> node (file_name).js", "date": "Dec 07 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cruel Crab", "source_name": null, "source_url": null},
{"title": "javascript running at node", "code": "const inNode = new Function('try{return this===global;}catch(err){return false;}')();", "date": "Jun 07 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "adriancmiranda", "source_name": null, "source_url": null},
{"title": "how to right plain text format file in node js", "code": "var fs = require('fs')\nvar logger = fs.createWriteStream('log.txt', {\n  flags: 'a' // 'a' means appending (old data will be preserved)\n})\n\nlogger.write('some data') // append string to your file\nlogger.write('more data') // again\nlogger.write('and more') // again", "date": "Aug 09 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Blue-eyed Batfish", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/33418777/node-js-write-a-line-into-a-txt-file"},
{"title": "how to right plain text format file in node js", "code": "var fs = require('fs')\nfs.appendFile('log.txt', 'new data', function (err) {\n  if (err) {\n    // append failed\n  } else {\n    // done\n  }\n})", "date": "Aug 09 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Blue-eyed Batfish", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/33418777/node-js-write-a-line-into-a-txt-file"},
{"title": "how to return when child process is complete in node js", "code": "var child = require('child_process').exec('python celulas.py')\nchild.stdout.pipe(process.stdout)\nchild.on('exit', function() {\n  process.exit()\n})", "date": "Jun 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Misty Manatee", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/22337446/how-to-wait-for-a-child-process-to-finish-in-node-js"},
{"title": "how to return when child process is complete in node js", "code": "var execSync = require('exec-sync');\n\nvar user = execSync('python celulas.py');", "date": "Jun 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Misty Manatee", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/22337446/how-to-wait-for-a-child-process-to-finish-in-node-js"},
{"title": "how to remove only green background from video using ffmeg nodejs", "code": "ffmpeg -i bg.jpg -i input.mp4 -filter_complex \"[1:v]chromakey=0x3BBD1E:0.1:0.2[ckout];[0:v][ckout]overlay[o]\" -map [o] -map 1:a output.mp4\n", "date": "Aug 12 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Super Seahorse", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/53618488/chromakey-ffmpeg-green-color-video-removal"},
{"title": "how to read file extension in a folder in node js", "code": "fs.readdir('./', (err, files) => {\n        files.forEach(file => {\n        //   console.log(file);\n         // read extension\n          const extension = file.split(\".\").pop();\n          });\n      })", "date": "Feb 08 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Alien0w0", "source_name": null, "source_url": null},
{"title": "how to read environment variable in node js", "code": "var myEnvVariable = process.env.ENV_VARIABLE_NAME", "date": "Feb 11 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Anxious Alligator", "source_name": null, "source_url": null},
{"title": "how to read all files in a folder in node js", "code": "fs.readdir('./', (err, files) => {\n        files.forEach(file => {\n        //   console.log(file);\n        }});", "date": "Feb 08 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Alien0w0", "source_name": null, "source_url": null},
{"title": "create csv file nodejs", "code": "const csv = require('csv-parser');\nconst fs = require('fs');\n\nfs.createReadStream('data.csv')\n  .pipe(csv())\n  .on('data', (row) => {\n    console.log(row);\n  })\n  .on('end', () => {\n    console.log('CSV file successfully processed');\n  });\n", "date": "Apr 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Suspect Camel", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-csv-files-with-node-js/"},
{"title": "create csv file nodejs", "code": "const createCsvWriter = require('csv-writer').createObjectCsvWriter;\nconst csvWriter = createCsvWriter({\n  path: 'out.csv',\n  header: [\n    {id: 'name', title: 'Name'},\n    {id: 'surname', title: 'Surname'},\n    {id: 'age', title: 'Age'},\n    {id: 'gender', title: 'Gender'},\n  ]\n});\n\nconst data = [\n  {\n    name: 'John',\n    surname: 'Snow',\n    age: 26,\n    gender: 'M'\n  }, {\n    name: 'Clair',\n    surname: 'White',\n    age: 33,\n    gender: 'F',\n  }, {\n    name: 'Fancy',\n    surname: 'Brown',\n    age: 78,\n    gender: 'F'\n  }\n];\n\ncsvWriter\n  .writeRecords(data)\n  .then(()=> console.log('The CSV file was written successfully'));\n", "date": "Apr 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Suspect Camel", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-csv-files-with-node-js/"},
{"title": "how to read a csv file in nodejs", "code": "$ npm i -s csv-parse\n", "date": "Dec 22 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Busy Badger", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-csv-files-with-node-js/"},
{"title": "how to read a csv file in nodejs", "code": "$ npm i -s csv-parser\n", "date": "Dec 22 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Busy Badger", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-csv-files-with-node-js/"},
{"title": "how to rename zip file nodejs", "code": "var AdmZip = require('adm-zip');\n\n//create a zip object to hold the new zip files\nvar newZip = new AdmZip();\n\n// reading archives\nvar zip = new AdmZip('somePath/download.zip');\nvar zipEntries = zip.getEntries(); // an array of ZipEntry records\n\nzipEntries.forEach(function(zipEntry) {\n    var fileName = zipEntry.entryName;\n    var fileContent = zip.readAsText(fileName)\n    //Here remove the top level directory\n    var newFileName = fileName.substring(fileName.indexOf(\"/\") + 1);\n\n    newZip.addFile(newFileName, fileContent, '', 0644 << 16);        \n});\n\nnewZip.writeZip('somePath/upload.zip');  //write the new zip \n", "date": "Oct 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "RvDev", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/37731780/rename-files-inside-zip-archive-in-nodejs"},
{"title": "how to proxy enable in server nodejs", "code": "proxy=http://username:password@host:port\nhttps-proxy=http://username:password@host:port\nhttps_proxy=http://username:password@host:port\nno_proxy=127.0.0.1,localhost.*.mtn.co.za\n", "date": "Jun 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Nutty Narwhal", "source_name": "www.jhipster.tech", "source_url": "https://www.jhipster.tech/configuring-a-corporate-proxy/"},
{"title": "how to play around with backend node js and frontend react", "code": "//add this at the end of your players.js :\nmodule.exports = router\n//To make this url work without problem\nhttp://localhost:3001/players/list", "date": "Dec 23 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Xanthous Xenomorph", "source_name": "www.techomoro.com", "source_url": "https://www.techomoro.com/how-to-create-a-react-frontend-express-backend-and-connect-them-together/"},
{"title": "how to play around with backend node js and frontend react", "code": " http://localhost:3001/players/list/3", "date": "Dec 23 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Xanthous Xenomorph", "source_name": "www.techomoro.com", "source_url": "https://www.techomoro.com/how-to-create-a-react-frontend-express-backend-and-connect-them-together/"},
{"title": "How to parse POST requests with express nodejs", "code": "const express = require('express');\nconst bodyParser = require('body-parser');\n\nconst app = express();\napp.use(bodyParser.urlencoded({ extended: true }));\n\napp.post('/post-test', (req, res) => {\n    console.log('Got body:', req.body);\n    res.sendStatus(200);\n});\n\napp.listen(8080, () => console.log(`Started server at http://localhost:8080!`));", "date": "May 17 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "m1ke510a", "source_name": null, "source_url": null},
{"title": "how to manage logging using winston for production and development in node js \"github\"", "code": "const winston = require('winston');\nconst { createLogger, format, transports } = require('winston');\n\nconst dotenv = require('dotenv');\ndotenv.config();\n\nvar logger = createLogger({\n    level: 'info',\n    format: format.combine(\n        format.timestamp({\n            format: 'YYYY-MM-DD HH:mm:ss',\n        }),\n        format.printf((info) =>\n            JSON.stringify({\n                t: info.timestamp,\n                l: info.level,\n                m: info.message,\n                s: info.splat !== undefined ? `${info.splat}` : '',\n            }) + ','\n        )\n    ),\n});\n\nif (process.env.NODE_ENV !== 'PRODUCTION') {\n    logger.add(new transports.Console({ format: winston.format.cli() }));\n\n    // Turn these on to create logs as if it were production\n    // logger.add(new transports.File({ filename: 'log/output/error.log', level: 'error' }));\n    // logger.add(new transports.File({ filename: 'log/output/warn.log', level: 'warn' }));\n    // logger.add(new transports.File({ filename: 'log/output/info.log', level: 'info' }));\n} else {\n    logger.add(new transports.File({ filename: 'log/output/error.log', level: 'error' }));\n    logger.add(new transports.File({ filename: 'log/output/warn.log', level: 'warn' }));\n    logger.add(new transports.File({ filename: 'log/output/info.log', level: 'info' }));\n}\n\nmodule.exports = {\n    logger,\n};\n", "date": "Feb 24 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Alive Angelfish", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/10271373/how-can-i-add-timestamp-to-logs-using-node-js-library-winston"},
{"title": "how to make use of nodejs single thread to read files and attach data", "code": "var mailer = require('nodemailer');\nmailer.SMTP = {\n    host: 'host.com', \n    port:587,\n    use_authentication: true, \n    user: 'you@example.com', \n    pass: 'xxxxxx'\n};\n\nThen read a file and send an email :\n\nfs.readFile(\"./attachment.txt\", function (err, data) {\n\n    mailer.send_mail({       \n        sender: 'sender@sender.com',\n        to: 'dest@dest.com',\n        subject: 'Attachment!',\n        body: 'mail content...',\n        attachments: [{'filename': 'attachment.txt', 'content': data}]\n    }), function(err, success) {\n        if (err) {\n            // Handle error\n        }\n\n    }\n});", "date": "Aug 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Pleasant Pintail", "source_name": null, "source_url": null},
{"title": "how to make an image like canvas in node js", "code": "const { createCanvas, loadImage } = require('canvas')\nconst canvas = createCanvas(200, 200)\nconst ctx = canvas.getContext('2d')\n\n// Write \"Awesome!\"\nctx.font = '30px Impact'\nctx.rotate(0.1)\nctx.fillText('Awesome!', 50, 100)\n\n// Draw line under text\nvar text = ctx.measureText('Awesome!')\nctx.strokeStyle = 'rgba(0,0,0,0.5)'\nctx.beginPath()\nctx.lineTo(50, 102)\nctx.lineTo(50 + text.width, 102)\nctx.stroke()\n\n// Draw cat with lime helmet\nloadImage('examples/images/lime-cat.jpg').then((image) => {\n  ctx.drawImage(image, 50, 0, 70, 70)\n\n  console.log('<img src=\"' + canvas.toDataURL() + '\" />')\n})", "date": "Sep 17 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Testy Toad", "source_name": "github.com", "source_url": "https://github.com/Automattic/node-canvas"},
{"title": "how to load image from dir nodejs", "code": "\nvar fs = require('fs');\nfunction(req,res){\n  fs.readFile('image.jpg', function(err, data) {\n    if (err) throw err; // Fail if the file can't be read.\n      res.writeHead(200, {'Content-Type': 'image/jpeg'});\n      res.end(data); // Send the file data to the browser.\n  });\n}", "date": "Apr 03 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "how to list all collections from a database in mongodb node js", "code": "var mongo = require('mongodb').MongoClient;\n\nasync function connect(){\n    /**\n     * Connection URI. Update <username>, <password>, and <your-cluster-url> to reflect your cluster.\n     * See https://docs.mongodb.com/ecosystem/drivers/node/ for more details\n     */\n    const uri = \"yourUri\";\n \n\n    const client = new mongo(uri);\n \n    try {\n        // Connect to the MongoDB cluster\n        await client.connect();\n        \n        // Make the appropriate DB calls\n        const db = client.db(\"testDatabase\");\n       \n        const collections = await db.collections();\n        collections.forEach (c=>console.log(c.collectionName));\n        \n \n       \n       \n \n    } catch (e) {\n        console.error(e);\n    } finally {\n        await client.close();\n    }\n}\n\nconnect().catch(console.error);\n", "date": "Mar 19 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Fierce Flatworm", "source_name": null, "source_url": null},
{"title": "how to integrate vuejs with nodejs and express", "code": "const Joi = require('joi');\nconst db = require('./connection');\n\u00a0\nconst schema = Joi.object().keys({\n\u00a0\u00a0\u00a0\u00a0username: Joi.string().alphanum().required(),\n\u00a0\u00a0\u00a0\u00a0subject: Joi.string().required(),\n\u00a0\u00a0\u00a0\u00a0message: Joi.string().max(500).required(),\n\u00a0\u00a0\u00a0\u00a0imageURL: Joi.string().uri({\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0scheme: [\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/https?/\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0\u00a0\u00a0})\n});\n\u00a0\nconst messages = db.get('messages');\n\u00a0\nfunction getAll() {\n\u00a0\u00a0\u00a0\u00a0return messages.find();\n}\n\u00a0\nfunction create(message) {\n\u00a0\u00a0\u00a0\u00a0if (!message.username) message.username = 'Anonymous';\n\u00a0\n\u00a0\u00a0\u00a0\u00a0const result = Joi.validate(message, schema);\n\u00a0\u00a0\u00a0\u00a0if (result.error == null) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0message.created = new Date();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return messages.insert(message);\n\u00a0\u00a0\u00a0\u00a0} else {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return Promise.reject(result.error);\n\u00a0\u00a0\u00a0\u00a0}\n}\n\u00a0\nmodule.exports = {\n\u00a0\u00a0\u00a0\u00a0create,\n\u00a0\u00a0\u00a0\u00a0getAll\n};\n", "date": "Feb 10 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Ugliest Unicorn", "source_name": "vegibit.com", "source_url": "https://vegibit.com/vue-js-express-tutorial/"},
{"title": "how to create a package.json file in npm", "code": "  npm init\n", "date": "Oct 03 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Frightened Flamingo", "source_name": "docs.npmjs.com", "source_url": "https://docs.npmjs.com/creating-a-package-json-file"},
{"title": "install node modules from package.json", "code": "npm install (with no args, in package dir)\nnpm install [<@scope>/]<name>\nnpm install [<@scope>/]<name>@<tag>\nnpm install [<@scope>/]<name>@<version>\nnpm install [<@scope>/]<name>@<version range>\nnpm install <git-host>:<git-user>/<repo-name>\nnpm install <git repo url>\nnpm install <tarball file>\nnpm install <tarball url>\nnpm install <folder>\n\naliases: npm i, npm add\ncommon options: [-P|--save-prod|-D|--save-dev|-O|--save-optional] [-E|--save-exact] [-B|--save-bundle] [--no-save] [--dry-run]\n", "date": "May 28 2020", "vote": 2, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Ashamed Anteater", "source_name": "docs.npmjs.com", "source_url": "https://docs.npmjs.com/cli/install"},
{"title": "how to install package.json in node js", "code": "cd /path/to/package\nnpm init", "date": "Apr 01 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Blue-eyed Bee", "source_name": "docs.npmjs.com", "source_url": "https://docs.npmjs.com/creating-a-package-json-file"},
{"title": "how to make pages from list in nodejs", "code": "function paginate(array, page_size, page_number) {\n  // human-readable page numbers usually start with 1, so we reduce 1 in the first argument\n  return array.slice((page_number - 1) * page_size, page_number * page_size);\n}\n\nconsole.log(paginate([1, 2, 3, 4, 5, 6], 2, 2));\nconsole.log(paginate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 4, 1));", "date": "Aug 06 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Plain Peafowl", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/42761068/paginate-javascript-array"},
{"title": "how to install node js in plesk", "code": "HRESULT: 0x2\nHTTP status: 500\nHTTP subStatus: 1001\nHTTP reason: Internal Server Error", "date": "Apr 23 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bad Baboon", "source_name": "nodejs.selimrezaswadhin.com", "source_url": "https://nodejs.selimrezaswadhin.com/"},
{"title": "how to install node js in plesk", "code": "(node:7464) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.\n", "date": "Apr 23 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bad Baboon", "source_name": "nodejs.selimrezaswadhin.com", "source_url": "https://nodejs.selimrezaswadhin.com/"},
{"title": "how to install chalk in node js", "code": "npm install chalk", "date": "Dec 07 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cruel Crab", "source_name": null, "source_url": null},
{"title": "npm installl chalk", "code": "const\u00a0chalk\u00a0=\u00a0require('chalk');const\u00a0log\u00a0=\u00a0console.log;\u00a0//\u00a0Combine\u00a0styled\u00a0and\u00a0normal\u00a0stringslog(chalk.blue('Hello')\u00a0+\u00a0'\u00a0World'\u00a0+\u00a0chalk.red('!'));\u00a0//\u00a0Compose\u00a0multiple\u00a0styles\u00a0using\u00a0the\u00a0chainable\u00a0APIlog(chalk.blue.bgRed.bold('Hello\u00a0world!'));\u00a0//\u00a0Pass\u00a0in\u00a0multiple\u00a0argumentslog(chalk.blue('Hello',\u00a0'World!',\u00a0'Foo',\u00a0'bar',\u00a0'biz',\u00a0'baz'));\u00a0//\u00a0Nest\u00a0styleslog(chalk.red('Hello',\u00a0chalk.underline.bgBlue('world')\u00a0+\u00a0'!'));\u00a0//\u00a0Nest\u00a0styles\u00a0of\u00a0the\u00a0same\u00a0type\u00a0even\u00a0(color,\u00a0underline,\u00a0background)log(chalk.green(\u00a0\u00a0\u00a0\u00a0'I\u00a0am\u00a0a\u00a0green\u00a0line\u00a0'\u00a0+\u00a0\u00a0\u00a0\u00a0chalk.blue.underline.bold('with\u00a0a\u00a0blue\u00a0substring')\u00a0+\u00a0\u00a0\u00a0\u00a0'\u00a0that\u00a0becomes\u00a0green\u00a0again!'));\u00a0//\u00a0ES2015\u00a0template\u00a0literallog(`CPU:\u00a0${chalk.red('90%')}RAM:\u00a0${chalk.green('40%')}DISK:\u00a0${chalk.yellow('70%')}`);\u00a0//\u00a0ES2015\u00a0tagged\u00a0template\u00a0literallog(chalk`CPU:\u00a0{red\u00a0${cpu.totalPercent}%}RAM:\u00a0{green\u00a0${ram.used\u00a0/\u00a0ram.total\u00a0*\u00a0100}%}DISK:\u00a0{rgb(255,131,0)\u00a0${disk.used\u00a0/\u00a0disk.total\u00a0*\u00a0100}%}`);\u00a0//\u00a0Use\u00a0RGB\u00a0colors\u00a0in\u00a0terminal\u00a0emulators\u00a0that\u00a0support\u00a0it.log(chalk.keyword('orange')('Yay\u00a0for\u00a0orange\u00a0colored\u00a0text!'));log(chalk.rgb(123,\u00a045,\u00a067).underline('Underlined\u00a0reddish\u00a0color'));log(chalk.hex('#DEADED').bold('Bold\u00a0gray!'));", "date": "Nov 28 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Amused Angelfish", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/chalk"},
{"title": "how to include build script in node js", "code": "{\n      \"name\": \"to-do-app\",\n      \"version\": \"1.0.0\",\n      \"description\": \"A basic to-do app created using JavaScript.\",\n      \"main\": \"index.js\",\n      \"scripts\": {\n        \"test\": \"put test command here\",  // example \"test\": \"mocha test.js\"\n         \"build\" : \"put build command here\"\n      },\n      \"author\": \"Sahil Silare\",\n      \"license\": \"MIT\",\n      \"dependencies\": {\n        \"body-parser\": \"^1.19.0\",\n        \"build\": \"^0.1.4\",\n        \"ejs\": \"^2.7.1\",\n        \"express\": \"^4.17.1\",\n        \"npm-build\": \"0.0.1\"\n      },\n      \"devDependencies\": {},\n      \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"git+https://github.com/sahil9001/to-do-app.git\"\n      },\n      \"keywords\": [\n        \"todo\",\n        \"app\"\n      ],\n      \"bugs\": {\n        \"url\": \"https://github.com/sahil9001/to-do-app/issues\"\n      },\n      \"homepage\": \"https://github.com/sahil9001/to-do-app#readme\"\n    }\n", "date": "Oct 26 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "devops unicorn", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/58330038/how-to-add-build-script-and-tests-in-nodejs-project"},
{"title": "import npm module node.js", "code": "import _ from 'lodash';", "date": "Jan 03 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Blushing Bison", "source_name": null, "source_url": null},
{"title": "how to import in node", "code": "const http = require('http');\nconst { router } = require('./routes');", "date": "Nov 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Foolish Frog", "source_name": null, "source_url": null},
{"title": "how to host node js application on godaddy", "code": "Yes this is possible. Somehow I have never seen anyone actually answer this question correctly. This works with the most basic shared hosting plans. I have successfully been able to set it up a couple different ways. I think the second is probably what you want :\n\n1. cgi-node http://www.cgi-node.org/home\n\nBasically this replaces PHP on the lamp stack. You can run javascript through node like you would run PHP. This has all the same functionality of node js but is only really geared towards template rendering.\n\n    <html>\n    <body>\n     <?\n       var helloWorld = 'Hello World!'; \n       write(helloWorld + '<br/>'); \n     ?>\n     <?= helloWorld ?>\n    <br/>\n    <b>I can count to 10: </b>\n\n    <?\n      for (var index= 0; index <= 10; index++) write(index + ' ');  \n    ?>\n      <br/>\n      <b>Or even this: </b>\n    <?  \n      for (var index= 0; index <= 10; index++) { \n    ?>\n        <?= index ?> \n    <? } ?>\n\n    </body>\n</html>\nOR\n\n2. Standalone Server (this works with NameCheap hosting and GoDaddy shared hosting)\n\nIn your shared hosting account you will need SSH in order to do this. So you may need to upgrade or request SSH access from their customer support. Download the latest NodeJS https://nodejs.org/en/download/. The shared hosting is probably in linux 64 bit. You can check this on linux or unix by running :\n\nuname -a\nDownload the Linux binaries and put the bin/node (and the bin/npm file if you want to use npm on the server) file from the download in /home/username/bin/ (create the bin folder if it doesn't exist) on the server. Put permissions 755 on the node binary. So you should have a new file here :\n\n/home/username/bin/node\n\nOpen up the .htaccess file in /home/username/public_html and add the following lines :\n\nRewriteEngine on\nRewriteRule  (.*)  http://localhost:3000/$1  [P,L] \nCreate a file in /home/username/public_html and just call it app.js. Add the following lines in that file :\n\nconst http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('NodeJS server running on Shared Hosting\\n');\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});\nSSH into the server run these commands :\n\ncd /home/username/public_html\nwhich node # this should return ~/bin/node\nnode app.js & # This will create a background process with the server running\nIf you can get this set up right this will save you a ton of money in the long run as opposed to using something like AWS or Heroku etc.", "date": "Mar 23 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Santino", "source_name": null, "source_url": null},
{"title": "how to hash password in node js", "code": "npm i bcrypt\n\nconst bcrypt = require('bcrypt');\nasync function hashIt(password){\n  const salt = await bcrypt.genSalt(6);\n  const hashed = await bcrypt.hash(password, salt);\n}\nhashIt(password);\n// compare the password user entered with hashed pass.\nasync function compareIt(password){\n  const validPassword = await bcrypt.compare(password, hashedPassword);\n}\ncompareIt(password);", "date": "Oct 02 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "VeNOM", "source_name": null, "source_url": null},
{"title": "node js server", "code": "const express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))", "date": "Apr 01 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Encouraging Elk", "source_name": null, "source_url": null},
{"title": "how to get started with nodejs", "code": "const http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 3000;\n\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end('Hello World');\n});\n\nserver.listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});", "date": "Dec 17 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Unknown dev", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/getting-started-guide/"},
{"title": "run node app locally", "code": "// Run this command in your terminal to start your node application.\n// Replace the tag with your applications main file name (ex index.js, main.js etc). \n// Add alternative a relative or absolute path before the name.\n\nnode <filename>.js", "date": "Oct 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Helpful Fox", "source_name": null, "source_url": null},
{"title": "javascript running at node", "code": "const inNode = new Function('try{return this===global;}catch(err){return false;}')();", "date": "Jun 07 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "adriancmiranda", "source_name": null, "source_url": null},
{"title": "mongodb select fields", "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1 } )", "date": "Sep 24 2020", "vote": 5, "tags": ["javascript", "nodejs", "whatever"], "posted_by": "Annoying Ant", "source_name": "docs.mongodb.com", "source_url": "https://docs.mongodb.com/manual/tutorial/project-fields-from-query-results"},
{"title": "how to project specific field mongodb nodejs", "code": "db.inventory.find( { status: \"A\" }, { item: 1, status: 1 } )\n//1 to show and 0 to hide\n//_id always included need to be set to 0 if not needed\n", "date": "Dec 19 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Helpful Horse", "source_name": null, "source_url": null},
{"title": "get custom fields in result of mongodb query", "code": "db.inventory.find( { age: \"10\" }, { _id: 0 ,  age: 1, user: { name: 1 } } )", "date": "Dec 08 2020", "vote": 0, "tags": ["javascript", "nodejs", "shell"], "posted_by": "F4RH4D", "source_name": "docs.mongodb.com", "source_url": "https://docs.mongodb.com"},
{"title": "How to get unix timestamp from tomorrow nodejs", "code": "var d = new Date();\nd.setDate(d.getDay() - 1);\nd.setHours(0, 0, 0);\nd.setMilliseconds(0);\nconsole.log(d/1000|0)", "date": "Nov 18 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Dr. iterations", "source_name": null, "source_url": null},
{"title": "how to get input from user in nodejs", "code": "const readline =\u00a0require('readline').createInterface({\u00a0\u00a0input: process.stdin,\u00a0\u00a0output: process.stdout}); readline.question('Who are you?', name => {\u00a0\u00a0console.log(`Hey there ${name}!`);\u00a0\u00a0readline.close();});", "date": "Mar 26 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Helpful Hyena", "source_name": "www.codecademy.com", "source_url": "https://www.codecademy.com/articles/getting-user-input-in-node-js"},
{"title": "get input from user in nodejs", "code": "const prompt =\u00a0require('prompt-sync')(); const name =\u00a0prompt('What is your name?');console.log(`Hey there ${name}`);", "date": "Jan 30 2021", "vote": -2, "tags": ["javascript", "nodejs"], "posted_by": "Dangerous Dugong", "source_name": "www.codecademy.com", "source_url": "https://www.codecademy.com/articles/getting-user-input-in-node-js"},
{"title": "how to implement redis pub sub model using nodejs", "code": "var redis = require(\u201credis\u201d);var subscriber = redis.createClient();subscriber.on(\u201cmessage\u201d, function (channel, message) { console.log(\u201cMessage: \u201c + message + \u201c on channel: \u201c + channel + \u201c is arrive!\u201d);});subscriber.subscribe(\u201cnotification\u201d);", "date": "Feb 04 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Shy Spider", "source_name": "medium.com", "source_url": "https://medium.com/@ridwanfajar/using-redis-pub-sub-with-node-js-its-quite-easy-c9c8b4dae79f"},
{"title": "how to implement redis pub sub model using nodejs", "code": "var redis = require(\u201credis\u201d);var publisher = redis.createClient();publisher.publish(\u201cnotification\u201d, \u201c{\\\u201dmessage\\\u201d:\\\u201dHello world from Asgardian!\\\u201d}\u201d, function(){ process.exit(0);});", "date": "Feb 04 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Shy Spider", "source_name": "medium.com", "source_url": "https://medium.com/@ridwanfajar/using-redis-pub-sub-with-node-js-its-quite-easy-c9c8b4dae79f"},
{"title": "nodejs get file size", "code": "var fs = require(\"fs\"); //Load the filesystem module\nvar stats = fs.statSync(\"myfile.txt\")\nvar fileSizeInBytes = stats[\"size\"]\n//Convert the file size to megabytes (optional)\nvar fileSizeInMegabytes = fileSizeInBytes / 1000000.0", "date": "Aug 06 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Old Knight", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/42363140/how-to-find-the-size-of-the-file-in-node-js"},
{"title": "how to get file size in node js", "code": "var fs = require(\"fs\"); //Load the filesystem module\nvar stats = fs.statSync(\"myfile.txt\")\nvar fileSizeInBytes = stats.size;\n// Convert the file size to megabytes (optional)\nvar fileSizeInMegabytes = fileSizeInBytes / (1024*1024);\n", "date": "Apr 09 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Unusual Unicorn", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/42363140/how-to-find-the-size-of-the-file-in-node-js"},
{"title": "install node js ubuntu", "code": "sudo apt-get install curl\ncurl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -\nsudo apt-get install nodejs\n# Check node version\nnode -v \n# v13.9.0\n# Also, check the npm version\nnpm -v \n# 6.13.7", "date": "Apr 08 2020", "vote": 38, "tags": ["javascript", "nodejs", "shell"], "posted_by": "SmokeFrog", "source_name": null, "source_url": null},
{"title": "ubuntu install node js", "code": "curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -\nsudo apt install nodejs\nsudo apt install npm\nsudo apt update", "date": "Aug 17 2020", "vote": 7, "tags": ["javascript", "nodejs", "shell"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "how to install node js in ubuntu", "code": "//Author: Mohammad Arman Khan\n//How To Install Node.js on Ubuntu\n1: sudo apt-get update\n2: sudo apt-get install nodejs\n3: sudo apt-get install npm\n4: nodejs -v", "date": "Jan 15 2021", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Adorable Ape", "source_name": null, "source_url": null},
{"title": "how to install node js in ubuntu", "code": "//Author: Mohammad Arman Khan\n//How To Install Node.js on Ubuntu\n1: sudo apt-get update\n2: sudo apt-get install nodejs\n3: sudo apt-get install npm\n4: nodejs -v", "date": "Jan 07 2021", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Repulsive Ray", "source_name": null, "source_url": null},
{"title": "linux install node", "code": "sudo apt install nodejs", "date": "Apr 28 2020", "vote": 10, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Light Loris", "source_name": "linuxize.com", "source_url": "https://linuxize.com/post/how-to-install-node-js-on-ubuntu-18.04/"},
{"title": "node ubutun", "code": "wget -qO- https://deb.nodesource.com/setup_14.x | sudo -E bash -\nsudo apt install -y nodejs", "date": "Dec 23 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Elegant Elk", "source_name": "doc.ubuntu-fr.org", "source_url": "https://doc.ubuntu-fr.org/nodejs"},
{"title": "npm install mongodb", "code": "npm\u00a0install\u00a0mongodb\u00a0--save", "date": "Oct 24 2020", "vote": 3, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Glamorous Giraffe", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/mongodb"},
{"title": "mongodb npm", "code": "npm install -g mongodb\n\nnpm install -g mongoose", "date": "Apr 14 2020", "vote": 3, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Fylls", "source_name": null, "source_url": null},
{"title": "how to install mongodb in node js", "code": "npm install mongodb --save", "date": "Apr 15 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Ashamed Ant", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/mongodb"},
{"title": "how to get datetime in nodejs", "code": "// new Date object\nlet date_ob = new Date();\n", "date": "Aug 05 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Graceful Gibbon", "source_name": "usefulangle.com", "source_url": "https://usefulangle.com/post/187/nodejs-get-date-time"},
{"title": "how to get cwd nodejs", "code": "process.cwd()", "date": "Apr 21 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "The little dog", "source_name": null, "source_url": null},
{"title": "npm install package globally", "code": "#Syntex\nnpm install packagename -g\n\n#example\nnpm install express -g\n", "date": "Jun 15 2020", "vote": 4, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Mr. Samy", "source_name": null, "source_url": null},
{"title": "how to install any package in node.js", "code": "#how to install any specific package in nodejs Application\n# Syntex\nnpm install packagename\n\n# example:\nnpm install express\nnpm i express\n\n#if you install globally then type \nnpm install express -g", "date": "Jun 15 2020", "vote": 2, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Mr. Samy", "source_name": null, "source_url": null},
{"title": "how to install all needed modules in node", "code": "npm install\n", "date": "Jan 14 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Undefined", "source_name": null, "source_url": null},
{"title": "how to get a particular line from a file in nodejs", "code": "$ npm install --save line-reader\n", "date": "Jun 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Outstanding Oystercatcher", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-a-file-line-by-line-in-node-js/"},
{"title": "how to get a particular line from a file in nodejs", "code": "lineReader.open('/path/to/file', function(reader) {\n    if (reader.hasNextLine()) {\n        reader.nextLine(function(line) {\n            console.log(line);\n        });\n    }\n});\n", "date": "Jun 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Outstanding Oystercatcher", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-a-file-line-by-line-in-node-js/"},
{"title": "how to get a particular line from a file in nodejs", "code": "lineReader.eachLine('path/to/file', function(line) {\n    console.log(line);\n    if (line.includes('STOP') {\n        return false; // stop reading\n    }\n});\n", "date": "Jun 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Outstanding Oystercatcher", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-a-file-line-by-line-in-node-js/"},
{"title": "javascript get random string", "code": "function getRandomString(length) {\r\n    var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var result = '';\r\n    for ( var i = 0; i < length; i++ ) {\r\n        result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\r\n    }\r\n    return result;\r\n}\r\n\r\n//usage: getRandomString(20); // pass desired length of random string", "date": "Jul 23 2019", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "random string js", "code": "const string_length = 10\n[...Array(string_length)].map(i=>(~~(Math.random()*36)).toString(36)).join('')", "date": "Sep 04 2020", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Yoyo Bu", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript"},
{"title": "how to generate random string in node js", "code": "var crypto = require(\"crypto\");\nvar id = crypto.randomBytes(20).toString('hex');\n\n// \"bb5dc8842ca31d4603d6aa11448d1654\"", "date": "Jul 23 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Fine Fly", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript"},
{"title": "how to generate a random salt in nodejs", "code": "var buf = crypto.randomBytes(16);", "date": "Jun 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Black Bird", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/11520126/how-to-create-random-salt-hash-with-crypto"},
{"title": "how to filter array objesct in express node js", "code": "var data = [\n  // the array to be filtered\n];\n\nvar filteredArray = data.filter(item => (item.name === req.query.q));\n", "date": "Feb 24 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Sparkling Skimmer", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/36875934/filter-object-array-via-nodejs"},
{"title": "how to get file name in directory node js", "code": "const fs = require('fs')\n\nconst dir = '/Users/flavio/folder'\nconst files = fs.readdirSync(dir)\n\nfor (const file of files) {\n  console.log(file)\n}\n", "date": "Oct 16 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Quaint Quail", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/how-to-get-files-names/"},
{"title": "how to get file name in directory node js", "code": "const path = require('path')\n\n//...\n\n//inside the `for` loop\nconst stat = fs.lstatSync(path.join(dir, file))\n", "date": "Oct 16 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Quaint Quail", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/how-to-get-files-names/"},
{"title": "how to fetch first 10 characters of a string in node js", "code": "var str = '12345678value';\nvar strshortened = str.slice(0,8);", "date": "Feb 20 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "shravani", "source_name": null, "source_url": null},
{"title": "Javascript get current year", "code": "var currentYear= new Date().getFullYear(); ", "date": "Jul 25 2019", "vote": 27, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "how to get current year in nodejs", "code": "const todaysDate = new Date()\nconst currentYear = todaysDate.getFullYear()\n// 2020", "date": "Jan 14 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Cute Cicada", "source_name": "coderrocketfuel.com", "source_url": "https://coderrocketfuel.com/article/get-the-current-year-using-node-js"},
{"title": "how to export a class in node js", "code": "class TestClass {\n  \n}\n\nmodule.exports.TestClass = TestClass;\n", "date": "Feb 05 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Embarrassed Earthworm", "source_name": null, "source_url": null},
{"title": "node js module export class", "code": "module.exports = class Person {\n\tconstructor(firstName, lastName) {\n\t\tthis.firstName = firstName;\n\t\tthis.lastName = lastName;\n\t}\n\n\tdisplay() {\n\t\tconsole.log(this.firstName + \" \" + this.lastName);\n\t}\n}", "date": "Oct 04 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Silly Seahorse", "source_name": null, "source_url": null},
{"title": "how to export module in node js", "code": "module.exports ={\n //functions\n}", "date": "May 30 2020", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "Arqa", "source_name": null, "source_url": null},
{"title": "node js crud operation", "code": "npm install --save express body-parser mongoose", "date": "May 09 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bright Baboon", "source_name": "codeburst.io", "source_url": "https://codeburst.io/writing-a-crud-app-with-node-js-and-mongodb-e0827cbbdafb"},
{"title": "how to do crud operation in node js", "code": "// Update a note identified by the noteId in the request\nexports.update = (req, res) => {\n    // Validate Request\n    if(!req.body.content) {\n        return res.status(400).send({\n            message: \"Note content can not be empty\"\n        });\n    }\n\n    // Find note and update it with the request body\n    Note.findByIdAndUpdate(req.params.noteId, {\n        title: req.body.title || \"Untitled Note\",\n        content: req.body.content\n    }, {new: true})\n    .then(note => {\n        if(!note) {\n            return res.status(404).send({\n                message: \"Note not found with id \" + req.params.noteId\n            });\n        }\n        res.send(note);\n    }).catch(err => {\n        if(err.kind === 'ObjectId') {\n            return res.status(404).send({\n                message: \"Note not found with id \" + req.params.noteId\n            });                \n        }\n        return res.status(500).send({\n            message: \"Error updating note with id \" + req.params.noteId\n        });\n    });\n};\n", "date": "Mar 11 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Spotless Snake", "source_name": "www.callicoder.com", "source_url": "https://www.callicoder.com/node-js-express-mongodb-restful-crud-api-tutorial/"},
{"title": "how to delete all json files in a directory nodejs", "code": "// delete all json files in same directory as nodejs script, or subdirectory.\n\nconst directoryPath = path.join(__dirname, \"sub_directory_if_needed\");\n\nfunction DeleteFiles() {\n    //passsing directoryPath and callback function\n    fs.readdir(directoryPath, function (err, files) {\n        //handling error\n        if (err) {\n            return console.log('Unable to scan directory: ' + err);\n        } \n        //listing all files using forEach\n        files.forEach(function (file) {\n            // Do whatever you want to do with the file\n            if (file !== \"package.json\") { // Making sure not to delete package.json, as it should not be deleted\n                if (file.endsWith(\".json\")) {\n                    fs.unlink(`${directoryPath}/${file}`, function(err) {\n                        if (err) throw err\n                        console.log(file, \"deleted\")\n                    })\n                }\n            }\n        });\n    });\n}\n\nDeleteFiles()", "date": "Aug 05 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Graceful Gibbon", "source_name": null, "source_url": null},
{"title": "how to delete the last part of a string in node js", "code": "str = \"hello I'm McDown...\";\nnewStr = str.substring(0, str.length - 3); // Returns \"hello I'm McDown\"", "date": "Jan 24 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "McDown", "source_name": null, "source_url": null},
{"title": "how to delete cookie node js", "code": "cookies.set('testtoken', {expires: Date.now()});", "date": "Dec 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Unusual Unicorn", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/27978868/destroy-cookie-nodejs"},
{"title": "delete dir nodejs", "code": "fs.rmdirSync(dir, { recursive: true });", "date": "Aug 06 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bloody Boar", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/18052762/remove-directory-which-is-not-empty"},
{"title": "how to delete a folder using node js", "code": "fs.unlink('./node/myText.txt',function(){\n    fs.rmdir('node');\n});", "date": "Feb 12 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Alive Addax", "source_name": "iq.opengenus.org", "source_url": "https://iq.opengenus.org/create-delete-files-directory-js/"},
{"title": "how to debug node js file in webpack", "code": "\"debugthis\": \"node --inspect --inspect-brk <name of your file>\"\n\n\n\"\"angle brackets are just for showing name \ndo not  use it in command pallette..\"\"\n  ", "date": "Feb 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Homeless Hornet", "source_name": null, "source_url": null},
{"title": "how to create response time router node js", "code": "const app = require('express')();\n const bodyParser = require('body-parser');\n const { EventEmitter } = require('events');\n \n // Aggregate all profiler results into an event emitter to make\n // handling the results generic\n const profiles = new EventEmitter();\n \n profiles.on('middleware', ({ req, name, elapsedMS }) => {\n  \u00a0console.log(req.method, req.url, ':', name, `${elapsedMS}ms`);\n });\n \n app.use(wrap(function block(req, res, next) {\n  \u00a0setTimeout(() => next(), 1000);\n }));\n \n app.use(wrap(bodyParser.json()));\n \n app.post('*', function(req, res) {\n  \u00a0res.send('Hello, world!');\n });\n \n app.listen(3000);\n \n function wrap(fn) {\n  \u00a0return function(req, res, next) {\n  \u00a0\u00a0\u00a0const start = Date.now();\n  \u00a0\u00a0\u00a0fn(req, res, function() {\n  \u00a0\u00a0\u00a0\u00a0\u00a0profiles.emit('middleware', {\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0req,\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name: fn.name,\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0elapsedMS: Date.now() - start\n  \u00a0\u00a0\u00a0\u00a0\u00a0});\n \n  \u00a0\u00a0\u00a0\u00a0\u00a0next.apply(this, arguments);\n  \u00a0\u00a0\u00a0});\n  \u00a0};\n }", "date": "Apr 26 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": "www.lunchbadger.com", "source_url": "https://www.lunchbadger.com/blog/tracking-the-performance-of-express-js-routes-and-middleware/"},
{"title": "how to create response time router node js", "code": "module.exports = function responseTime(){\n  return function(req, res, next){\n    var start = new Date;\n\n    if (res._responseTime) return next();\n    res._responseTime = true;\n\n    res.on('header', function(){\n      var duration = new Date - start;\n      res.setHeader('X-Response-Time', duration + 'ms');\n    });\n\n    next();\n  };\n};", "date": "Apr 26 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": "www.senchalabs.org", "source_url": "http://www.senchalabs.org/connect/responseTime.html"},
{"title": "how to create node js server", "code": "/* ====== create node.js server with core 'http' module ====== */\n// dependencies\nconst http = require(\"http\");\n\n// PORT\nconst PORT = 3000;\n\n// server create\nconst server = http.createServer((req, res) => {\n   if (req.url === \"/\") {\n      res.write(\"This is home page.\");\n      res.end();\n   } else if (req.url === \"/about\" && req.method === \"GET\") {\n      res.write(\"This is about page.\");\n      res.end();\n   } else {\n      res.write(\"Not Found!\");\n      res.end();\n   }\n});\n\n// server listen port\nserver.listen(PORT);\n\nconsole.log(`Server is running on PORT: ${PORT}`);\n\n/* ========== *** ========== */\n\n/* ====== create node.js server with express.js framework ====== */\n// dependencies\nconst express = require(\"express\");\n\nconst app = express();\n\napp.get(\"/\", (req, res) => {\n   res.send(\"This is home page.\");\n});\n\napp.post(\"/\", (req, res) => {\n   res.send(\"This is home page with post request.\");\n});\n\n// PORT\nconst PORT = 3000;\n\napp.listen(PORT, () => {\n   console.log(`Server is running on PORT: ${PORT}`);\n});\n\n\n// ======== Instructions ========\n// save this as index.js\n// you have to download and install node.js on your machine\n// open terminal or command prompt\n// type node index.js\n// find your server at http://localhost:3000", "date": "Jan 09 2021", "vote": 34, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": null, "source_url": null},
{"title": "simple node server", "code": "// content of index.js\nconst http = require('http')\nconst port = 3000\n\nconst requestHandler = (request, response) => {\n  console.log(request.url)\n  response.end('Hello Node.js Server!')\n}\n\nconst server = http.createServer(requestHandler)\n\nserver.listen(port, (err) => {\n  if (err) {\n    return console.log('something bad happened', err)\n  }\n\n  console.log(`server is listening on ${port}`)\n})\n", "date": "May 08 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Cruel Chipmunk", "source_name": "blog.risingstack.com", "source_url": "https://blog.risingstack.com/your-first-node-js-http-server/"},
{"title": "node js server", "code": "const express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))", "date": "Apr 01 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Encouraging Elk", "source_name": null, "source_url": null},
{"title": "how to create a server in node js", "code": "// code by VARSHITH REDDY SATTI\n// to create a server in node.js you should.\nvar http = require('http');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(\"write html code to display you test\")\n  res.end();\n}).listen(8080);\n// save this as httpServer.js\n// run this by typing node httpServer.js in the command line\n// to acess your server got to http://localhost:8080", "date": "Dec 28 2019", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Crown Of Thorns Starfish", "source_name": null, "source_url": null},
{"title": "what does http.createserver do", "code": "var http = require('http'); // Import Node.js core module\n\nvar server = http.createServer(function (req, res) {   //create web server\n    if (req.url == '/') { //check the URL of the current request\n        \n        // set response header\n        res.writeHead(200, { 'Content-Type': 'text/html' }); \n        \n        // set response content    \n        res.write('<html><body><p>This is home Page.</p></body></html>');\n        res.end();\n    \n    }\n    else if (req.url == \"/student\") {\n        \n        res.writeHead(200, { 'Content-Type': 'text/html' });\n        res.write('<html><body><p>This is student Page.</p></body></html>');\n        res.end();\n    \n    }\n    else if (req.url == \"/admin\") {\n        \n        res.writeHead(200, { 'Content-Type': 'text/html' });\n        res.write('<html><body><p>This is admin Page.</p></body></html>');\n        res.end();\n    \n    }\n    else\n        res.end('Invalid Request!');\n\n});\n\nserver.listen(5000); //6 - listen for any incoming requests\n\nconsole.log('Node.js web server at port 5000 is running..')\n", "date": "Dec 04 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Jolly Jellyfish", "source_name": "www.tutorialsteacher.com", "source_url": "https://www.tutorialsteacher.com/nodejs/create-nodejs-web-server"},
{"title": "how to create node js server", "code": "//HTTP MODULE NODE.JS\nvar http = require('http');\nvar server = http.createServer(function(req, res){\n  //write code here\n});\nserver.listen(5000); ", "date": "Jan 13 2021", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Repulsive Ray", "source_name": null, "source_url": null},
{"title": "how to create multiple folders at once in node js", "code": "'use strict';\n\nconst { mkdir } = require('fs').promises;\n\n(async function main() {\n  try {\n    const parent = '.';\n    const dirnames  = ['pdfs', 'fonts', 'err/or', 'users'];\n\n    await Promise.all(\n      dirnames.map(dirname => mkdir(`${parent}/${dirname}`).catch(console.error))\n    );\n\n    // All dirs are created here or errors reported.\n  } catch (err) {\n    console.error(err);\n  }\n})();", "date": "Sep 02 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Super Starling", "source_name": "github.com", "source_url": "https://github.com/nodejs/help/issues/1840"},
{"title": "how to delay execution in nodejs", "code": "function sayHello() {\n  console.log(\"hello\");\n}\n\n// calls the sayHello function after 1000 milisecends\nsetTimeout(sayHello, 1000);\n", "date": "May 20 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Pixel Freak", "source_name": null, "source_url": null},
{"title": "how to download array of files from aws s3 using aws sdk in nodejs", "code": "const exec = require('child_process').exec;\nexec('aws s3 sync s3://yourbucket .', (err, stdout, stderr) => {});", "date": "Aug 06 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Outstanding Oystercatcher", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/27253102/aws-s3-node-js-sdk-need-to-download-all-files-from-one-bucket-at-once"},
{"title": "node scripts delay", "code": "\"scripts\": {  \"test:system\": \"npm-run-all build -p -r serve test\",  \"build\": \"webpack\",  \"serve\": \"serve -p 8000\",  \"test\": \"wait-on http://localhost:8001 && npm run test:codecept\",  \"test:codecept\": \"codecept\",}", "date": "Jul 21 2020", "vote": -1, "tags": ["javascript", "nodejs", "typescript"], "posted_by": "Easy Eagle", "source_name": "medium.com", "source_url": "https://medium.com/netscape/npm-task-running-techniques-15fe5b697f15"},
{"title": "how to download array of files from aws s3 using aws sdk in nodejs", "code": "function listFiles(cb) {\n    s3.stuff(params, cb);\n}\nfunction downlaodFile(key, cb) {\n    s3.stuff(key, cb);\n}\nlistFiles(function (err, fileKeys) {\n    if (err) {\n        throw err;//don't really but this is just an example\n    }\n    async.each(fileKeys, downloadFile, function done(err) {\n        if (err) {\n            throw err;\n        }\n    });\n});", "date": "Aug 06 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Outstanding Oystercatcher", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/27253102/aws-s3-node-js-sdk-need-to-download-all-files-from-one-bucket-at-once"},
{"title": "how to create alias in populate moongoose + nodejs", "code": "var countrySchema = new mongoose.Schema({\n    capitalId: {type:String}\n});\n\ncountrySchema.virtual('capital',{\n    ref: 'City',\n    localField: 'capitalId',\n    foreignField: '_id',\n    justOne: true\n});\n\ncountrySchema.set('toObject', { virtuals: true });\ncountrySchema.set('toJSON', { virtuals: true });", "date": "Dec 21 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Concerned Cod", "source_name": "github.com", "source_url": "https://github.com/Automattic/mongoose/issues/3225"},
{"title": "how to create node js server", "code": "/* ====== create node.js server with core 'http' module ====== */\n// dependencies\nconst http = require(\"http\");\n\n// PORT\nconst PORT = 3000;\n\n// server create\nconst server = http.createServer((req, res) => {\n   if (req.url === \"/\") {\n      res.write(\"This is home page.\");\n      res.end();\n   } else if (req.url === \"/about\" && req.method === \"GET\") {\n      res.write(\"This is about page.\");\n      res.end();\n   } else {\n      res.write(\"Not Found!\");\n      res.end();\n   }\n});\n\n// server listen port\nserver.listen(PORT);\n\nconsole.log(`Server is running on PORT: ${PORT}`);\n\n/* ========== *** ========== */\n\n/* ====== create node.js server with express.js framework ====== */\n// dependencies\nconst express = require(\"express\");\n\nconst app = express();\n\napp.get(\"/\", (req, res) => {\n   res.send(\"This is home page.\");\n});\n\napp.post(\"/\", (req, res) => {\n   res.send(\"This is home page with post request.\");\n});\n\n// PORT\nconst PORT = 3000;\n\napp.listen(PORT, () => {\n   console.log(`Server is running on PORT: ${PORT}`);\n});\n\n\n// ======== Instructions ========\n// save this as index.js\n// you have to download and install node.js on your machine\n// open terminal or command prompt\n// type node index.js\n// find your server at http://localhost:3000", "date": "Jan 09 2021", "vote": 34, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": null, "source_url": null},
{"title": "how to create a server in node js", "code": "// code by VARSHITH REDDY SATTI\n// to create a server in node.js you should.\nvar http = require('http');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(\"write html code to display you test\")\n  res.end();\n}).listen(8080);\n// save this as httpServer.js\n// run this by typing node httpServer.js in the command line\n// to acess your server got to http://localhost:8080", "date": "Dec 28 2019", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Crown Of Thorns Starfish", "source_name": null, "source_url": null},
{"title": "how to create node js server", "code": "//HTTP MODULE NODE.JS\nvar http = require('http');\nvar server = http.createServer(function(req, res){\n  //write code here\n});\nserver.listen(5000); ", "date": "Jan 13 2021", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Repulsive Ray", "source_name": null, "source_url": null},
{"title": "create node js server", "code": "import express from 'express';\nconst server = express();\n\nconst port = 8080;\n\nserver.get('/', (req, res) => {\n  return res.send('Hello, Express.js!');\n})\n\nserver.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});", "date": "Mar 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mysterious Monkey", "source_name": "learn.coderslang.com", "source_url": "https://learn.coderslang.com/0047-node.js-create-your-first-express-server/"},
{"title": "node js create folder", "code": "var fs = require('fs');\n\nconst dir = './database/temp';\nif (!fs.existsSync(dir)) {\n\tfs.mkdirSync(dir, {\n\t\trecursive: true\n\t});\n}", "date": "Jun 23 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "nodejs make directory", "code": "var fs = require('fs');\nvar dir = './tmp';\nif (!fs.existsSync(dir)){\n    fs.mkdirSync(dir);\n}\n\n// or if complains about existence and nesting doesn't matter:\n\nvar shell = require('shelljs');\nshell.mkdir('-p', 'root/parent/tmp');", "date": "Mar 30 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Hobbes", "source_name": null, "source_url": null},
{"title": "how to create a folder using fs in node js", "code": "//Include fs module\nconst fs = require('fs');\n\nconst dir = './dir'\nfs.mkdir(dir);", "date": "Jul 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "metiu19", "source_name": null, "source_url": null},
{"title": "how to craete a shopping cart  in node js", "code": "// run this as nod.js\nvar http = require('http');\nvar url = require('url');\nvar MongoClient = require('mongodb').MongoClient;\nvar mongourl = \"mongodb://localhost:27017/\";\n\nhttp.createServer(function (req, res) {\n    res.writeHead(200, { 'Content-Type': 'text/html' });\n    var urlQuery = url.parse(req.url, true).query;\n    addItem(urlQuery.itemToAdd);\n    removeItem(urlQuery.itemToRemove);\n    res.end();\n}).listen(8080);\n\n\n\nfunction removeItem(remove) {\n    if (remove !== undefined) {\n        MongoClient.connect(mongourl, function (err, db) {\n            if (err) throw err;\n            var dbo = db.db(\"mydb\");\n            var myquery = { itemName: remove };\n            dbo.collection(\"shoppingCart\").deleteOne(myquery, function (err, obj) {\n                if (err) throw err;\n                console.log(\"deleted:\" + myquery);\n                db.close();\n            });\n        });\n    }\n}\n\nfunction addItem(create) {\n    if (create !== undefined) {\n        MongoClient.connect(mongourl, function (err, db) {\n            if (err) throw err;\n            var dbo = db.db(\"mydb\");\n            var myobj = { itemName: create };\n            dbo.collection(\"shoppingCart\").insertOne(myobj, function (err, res) {\n                if (err) throw err;\n                console.log(\"document inserted:\" + myobj);\n                db.close();\n            });\n        });\n    }\n}", "date": "Jan 02 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Crown Of Thorns Starfish", "source_name": null, "source_url": null},
{"title": "how to create an array in node js", "code": "// Don't need to provide elements directly, but you can\n\n// FIRST OPTION\nvar myArray = new Array(/*elements1, elements2*/);\n\n// SECOND OPTION\nvar mySecondArray = [/*element1, element2*/];", "date": "Jan 24 2021", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "McDown", "source_name": null, "source_url": null},
{"title": "js array", "code": "var colors = [ \"red\", \"orange\", \"yellow\", \"green\", \"blue\" ]; //Array\n\nconsole.log(colors); //Should give the whole array\nconsole.log(colors[0]); //should say \"red\"\nconsole.log(colors[1]); //should say \"orange\"\nconsole.log(colors[4]); //should say \"blue\"\n\ncolors[4] = \"dark blue\" //changes \"blue\" value to \"dark blue\"\nconsole.log(colors[4]); //should say \"dark blue\"\n//I hope this helped :)", "date": "Jun 21 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Determined Programmer", "source_name": null, "source_url": null},
{"title": "access index of array javascript", "code": "let first = fruits[0]\n// Apple\n\nlet last = fruits[fruits.length - 1]\n// Banana\n", "date": "Feb 17 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Magnificent Mole", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"},
{"title": "how to connect local mongoDb to node", "code": "//with mongoose \n\nconst mongoose = require('mongoose');\n\nmongoose.connect(\n    mongoURI,\n    {\n        useNewUrlParser: true,\n        useUnifiedTopology: true\n    },\n    (err) => {\n        if (err) console.log(err);\n        app.listen(3000);\n    }\n);\n/********************************************************************/\n// with mongodb lib\nconst mongodb = require('mongodb');\n\nconst MongoClient = mongodb.MongoClient;\n\nlet _db;\n// you can replace test with any database name that you want\nconst mongoConnect = (cb) => {\n  MongoClient.connect('mongodb://127.0.0.1:27017/test')\n    .then((client) => {\n      _db = client.db();\n      cb()\n      console.log('Connected to MongoDb');\n    }).catch((err) => {\n      console.log(err);\n    });\n}\n//after your server started you can use getDb to access mongo Database\nconst getDb = () => {\n  if (_db) return _db;\n  throw 'No database found';\n}\n\nexports.mongoConnect = mongoConnect;\nexports.getDb = getDb;", "date": "Aug 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "codeAesthetic", "source_name": null, "source_url": null},
{"title": "how to connect mongodb with node js", "code": "async function main(){\n    /**\n     * Connection URI. Update <username>, <password>, and <your-cluster-url> to reflect your cluster.\n     * See https://docs.mongodb.com/ecosystem/drivers/node/ for more details\n     */\n    const uri = \"mongodb+srv://<username>:<password>@<your-cluster-url>/test?retryWrites=true&w=majority\";\n \n\n    const client = new MongoClient(uri);\n \n    try {\n        // Connect to the MongoDB cluster\n        await client.connect();\n \n        // Make the appropriate DB calls\n        await  listDatabases(client);\n \n    } catch (e) {\n        console.error(e);\n    } finally {\n        await client.close();\n    }\n}\n\nmain().catch(console.error);\n", "date": "Jul 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fine Fly", "source_name": "www.mongodb.com", "source_url": "https://www.mongodb.com/blog/post/quick-start-nodejs-mongodb--how-to-get-connected-to-your-database"},
{"title": "how to connect mongodb and nodejs", "code": "const {MongoClient} = require('mongodb');\n", "date": "Dec 21 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Creepy Crayfish", "source_name": "www.mongodb.com", "source_url": "https://www.mongodb.com/blog/post/quick-start-nodejs-mongodb--how-to-get-connected-to-your-database"},
{"title": "how to clear nodejs terminal in vs code", "code": "for PC, use ctrl + l", "date": "Aug 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Excited Emu", "source_name": null, "source_url": null},
{"title": "import js in html", "code": "<script type=\"text/javascript\" src=\"yourfile.js\"></script>", "date": "Feb 23 2020", "vote": 53, "tags": ["javascript", "nodejs", "html"], "posted_by": "SteDeus", "source_name": null, "source_url": null},
{"title": "how to create a server in node js", "code": "// code by VARSHITH REDDY SATTI\n// to create a server in node.js you should.\nvar http = require('http');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(\"write html code to display you test\")\n  res.end();\n}).listen(8080);\n// save this as httpServer.js\n// run this by typing node httpServer.js in the command line\n// to acess your server got to http://localhost:8080", "date": "Dec 28 2019", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Crown Of Thorns Starfish", "source_name": null, "source_url": null},
{"title": "What is the syntax to export a function from a module in Node.js", "code": "function foo() {}\nfunction bar() {}\n\n// To export above functions:\nmodule.exports = foo;\nmodule.exports = bar;\n\n// And in the file you want to use these functions,\n// import them like this:\nconst foo = require('./module/path');\nconst bar = require('./module/path');\n\n", "date": "Jan 26 2020", "vote": 21, "tags": ["javascript", "nodejs"], "posted_by": "QuietHumility", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/45171890/what-is-the-syntax-to-export-a-function-from-a-module-in-node-js"},
{"title": "how to export module in node js", "code": "module.exports ={\n //functions\n}", "date": "May 30 2020", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "Arqa", "source_name": null, "source_url": null},
{"title": "how to check version of node js in cmd", "code": "node -v", "date": "Jun 09 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Panicky Pigeon", "source_name": null, "source_url": null},
{"title": "how to check record successfully delete in mongodb node js", "code": "Model.remove({ _id: req.body.id }, function(err) {\n    if (!err) {\n            message.type = 'notification!';\n    }\n    else {\n            message.type = 'error';\n    }\n});\n", "date": "Jan 12 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Depressed Dotterel", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/5809788/how-do-i-remove-documents-using-node-js-mongoose"},
{"title": "how to check platform in nodejs", "code": "var isWin = process.platform === \"win32\";\n", "date": "Nov 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Emmanuel Mahuni", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/8683895/how-do-i-determine-the-current-operating-system-with-node-js"},
{"title": "how to connect local mongoDb to node", "code": "//with mongoose \n\nconst mongoose = require('mongoose');\n\nmongoose.connect(\n    mongoURI,\n    {\n        useNewUrlParser: true,\n        useUnifiedTopology: true\n    },\n    (err) => {\n        if (err) console.log(err);\n        app.listen(3000);\n    }\n);\n/********************************************************************/\n// with mongodb lib\nconst mongodb = require('mongodb');\n\nconst MongoClient = mongodb.MongoClient;\n\nlet _db;\n// you can replace test with any database name that you want\nconst mongoConnect = (cb) => {\n  MongoClient.connect('mongodb://127.0.0.1:27017/test')\n    .then((client) => {\n      _db = client.db();\n      cb()\n      console.log('Connected to MongoDb');\n    }).catch((err) => {\n      console.log(err);\n    });\n}\n//after your server started you can use getDb to access mongo Database\nconst getDb = () => {\n  if (_db) return _db;\n  throw 'No database found';\n}\n\nexports.mongoConnect = mongoConnect;\nexports.getDb = getDb;", "date": "Aug 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "codeAesthetic", "source_name": null, "source_url": null},
{"title": "how to check file extension in node js", "code": "\n  var path = require('path');\n\nvar ext = path.extname('/Users/Refsnes/demo_path.js');\n\n  console.log(ext); ", "date": "Jul 27 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Super Starling", "source_name": "www.staroceans.org.s3-website-us-east-1.amazonaws.com", "source_url": "http://www.staroceans.org.s3-website-us-east-1.amazonaws.com/w3c/met_path_extname.asp.html"},
{"title": "how to check if a folder exists in node js", "code": "const fs = require(\"fs\")\n\nfs.access(\"./directory-name\", function(error) {\n  if (error) {\n    console.log(\"Directory does not exist.\")\n  } else {\n    console.log(\"Directory exists.\")\n  }\n})", "date": "Oct 08 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Calm Crocodile", "source_name": "coderrocketfuel.com", "source_url": "https://coderrocketfuel.com/article/check-if-a-directory-exists-in-node-js"},
{"title": "node js connect to mongodb using mongoose", "code": "\n//connect with mongodb\nmongoose.connect('mongodb://localhost:27017/your_db_name', {useNewUrlParser: true});\n//you can also specify with user and pass\nmongoose.connect('mongodb://username:password@host:port/database?options...', {useNewUrlParser: true});\n//or goto docs https://mongoosejs.com/docs/connections.html", "date": "Sep 18 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "kepl3r", "source_name": "mongoosejs.com", "source_url": "https://mongoosejs.com/docs/connections.html"},
{"title": "how to connect mongodb with node js", "code": "async function main(){\n    /**\n     * Connection URI. Update <username>, <password>, and <your-cluster-url> to reflect your cluster.\n     * See https://docs.mongodb.com/ecosystem/drivers/node/ for more details\n     */\n    const uri = \"mongodb+srv://<username>:<password>@<your-cluster-url>/test?retryWrites=true&w=majority\";\n \n\n    const client = new MongoClient(uri);\n \n    try {\n        // Connect to the MongoDB cluster\n        await client.connect();\n \n        // Make the appropriate DB calls\n        await  listDatabases(client);\n \n    } catch (e) {\n        console.error(e);\n    } finally {\n        await client.close();\n    }\n}\n\nmain().catch(console.error);\n", "date": "Jul 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fine Fly", "source_name": "www.mongodb.com", "source_url": "https://www.mongodb.com/blog/post/quick-start-nodejs-mongodb--how-to-get-connected-to-your-database"},
{"title": "mongodb connection node", "code": "// create folder config and create two files below mentioned...\n\n// default.json \n{\n  \"mongoURI\": \"add_your_key =_here\"\n}\n\n/// db.js\nconst mongoose = require(\"mongoose\");\nconst config = require(\"config\");\nconst db = config.get(\"mongoURI\");\n\nconst connectDB = async () => {\n  try {\n    await mongoose.connect(db, {\n      useNewUrlParser: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n    });\n    console.log(\"MongoDB connected...\");\n  } catch (err) {\n    console.log(err.message);\n    process.exit(1);\n  }\n};\n\n# DONE \u2705\n\n// dependencies\n  npm i express bcryptjs jsonwebtoken config express-validator mongoose\n\n// dev-dependencies\n  npm i -D nodemon concurrently", "date": "May 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "paramjeetdhiman", "source_name": null, "source_url": null},
{"title": "how to connect mongodb and nodejs", "code": "const {MongoClient} = require('mongodb');\n", "date": "Dec 21 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Creepy Crayfish", "source_name": "www.mongodb.com", "source_url": "https://www.mongodb.com/blog/post/quick-start-nodejs-mongodb--how-to-get-connected-to-your-database"},
{"title": "How to change htm h1 from nodejs", "code": "<html>\n<head></head>\n<body>  \n    <h1></h1>\n<script src='test.js'></script>     \n</body>\n</html>\n", "date": "Apr 22 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Horrible Horse", "source_name": "teamtreehouse.com", "source_url": "https://teamtreehouse.com/community/why-cant-i-change-h1-inner-html-using-documentgetelementsbytagname"},
{"title": "How to change htm h1 from nodejs", "code": "let h1 = document.getElementsByTagName('h1')[0];\nh1.innerHTML = \"Hello\";\n", "date": "Apr 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Horrible Horse", "source_name": "teamtreehouse.com", "source_url": "https://teamtreehouse.com/community/why-cant-i-change-h1-inner-html-using-documentgetelementsbytagname"},
{"title": "how to change function name while exporting in node", "code": "function doSomthing(){\n  console.log('Hello Word')\n}\n// do is the name which you want to use in other files \nmodule.exports = { do:doSomthing }", "date": "May 06 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Ugly Unicorn", "source_name": null, "source_url": null},
{"title": "how ot send user agent in nodejs https header", "code": "const options = {\n  hostname: 'www.panda.tv',\n  path: 'ajax_chatinfo?roomid=89757',\n  headers: { 'User-Agent': 'Mozilla/5.0' }\n};\n\nhttp.get(options, function(res) {\n  res.on('data', function(chunk) { console.log(chunk) });\n});", "date": "Jul 16 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Vast Vulture", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/38788873/how-to-set-user-agent-in-nodejs"},
{"title": "how ot send user agent in nodejs https header", "code": "http.get({ url: 'http://www.panda.tv/ajax_chatinfo?roomid=89757',\n    agent: 'Mozilla/5.0' }, function(res) {\n    res.on('data', function(chunk) {\n        doSomething();\n    });\n});", "date": "Jul 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Vast Vulture", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/38788873/how-to-set-user-agent-in-nodejs"},
{"title": "how to add shadow to text in canvas nodejs", "code": "const { createCanvas } = require('canvas')\nconst width = 400\nconst height = 400\nconst canvas = createCanvas(width, height);\n\nvar context = canvas.getContext('2d');\n\tcontext.shadowColor = \"black\";\n    context.shadowBlur = 5;\n    context.shadowOffsetX = 3;\n    context.shadowOffsetY = 3;\n    context.font = '20px Arial'\n    context.fillStyle = '#fff'\n    context.fillText('Awesome! I did it.', width / 2 , 100)\n\n", "date": "Aug 26 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Red Giant", "source_name": "csuitemind.com", "source_url": "https://csuitemind.com"},
{"title": "how many threads does node js use", "code": "Example 2: Partitioned average, each of the n asynchronous steps costs O(1).\n\nfunction asyncAvg(n, avgCB) {\n  // Save ongoing sum in JS closure.\n  var sum = 0;\n  function help(i, cb) {\n    sum += i;\n    if (i == n) {\n      cb(sum);\n      return;\n    }\n\n    // \"Asynchronous recursion\".\n    // Schedule next operation asynchronously.\n    setImmediate(help.bind(null, i+1, cb));\n  }\n\n  // Start the helper, with CB to call avgCB.\n  help(1, function(sum){\n      var avg = sum/n;\n      avgCB(avg);\n  });\n}\n\nasyncAvg(n, function(avg){\n  console.log('avg of 1-n: ' + avg);\n});\nYou can apply this principle to array iterations and so forth.", "date": "Nov 18 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Calm Capybara", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/dont-block-the-event-loop/"},
{"title": "how many threads does node js use", "code": "Node.js runs JavaScript code in the Event Loop (initialization and callbacks), and offers a Worker Pool to handle expensive tasks like file I/O. Node.js scales well, sometimes better than more heavyweight approaches like Apache. The secret to the scalability of Node.js is that it uses a small number of threads to handle many clients. If Node.js can make do with fewer threads, then it can spend more of your system's time and memory working on clients rather than on paying space and time overheads for threads (memory, context-switching). But because Node.js has only a few threads, you must structure your application to use them wisely.\n\nHere's a good rule of thumb for keeping your Node.js server speedy: Node.js is fast when the work associated with each client at any given time is \"small\".\n\nThis applies to callbacks on the Event Loop and tasks on the Worker Pool.", "date": "Nov 18 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Calm Capybara", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/dont-block-the-event-loop/"},
{"title": "how to use static file node js", "code": "app.use(express.static('public'))\napp.use(express.static('files'))\n", "date": "Sep 25 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Energetic Eagle", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/static-files.html"},
{"title": "how to use static file node js", "code": "app.use('/static', express.static(path.join(__dirname, 'public')))\n", "date": "Sep 25 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Energetic Eagle", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/static-files.html"},
{"title": "how can node js file be serve", "code": "var fs = require('fs'),\n    http = require('http');\n\nhttp.createServer(function (req, res) {\n  fs.readFile(__dirname + req.url, function (err,data) {\n    if (err) {\n      res.writeHead(404);\n      res.end(JSON.stringify(err));\n      return;\n    }\n    res.writeHead(200);\n    res.end(data);\n  });\n}).listen(8080);", "date": "Sep 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Repulsive Raccoon", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/knowledge/HTTP/servers/how-to-serve-static-files/"},
{"title": "How can I check whether a variable is defined in Node Js", "code": "if (query){\n   doStuff();\n}", "date": "May 22 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Concerned Chipmunk", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/13335873/how-can-i-check-whether-a-variable-is-defined-in-node-js"},
{"title": "heroku node js h21 backend connection refused", "code": "2010-10-06T21:51:07-07:00 heroku[router]: at=error code=H21 desc=\"Backend connection refused\" method=GET path=\"/\" host=myapp.herokuapp.com fwd=17.17.17.17 dyno=web.1 connect=1ms service= status=503 bytes=\n", "date": "Jan 08 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Smiling Shrew", "source_name": "devcenter.heroku.com", "source_url": "https://devcenter.heroku.com/articles/error-codes#h21-backend-connection-refused"},
{"title": "heroku failed to run files from static folder in node", "code": "{\n    \"name\": \"bla\",\n    \"version\": \"0.0.1\",\n    \"dependencies\": {\n        \"express\": \"3.2.6\"\n    },\n    \"engines\": {\n        \"node\": \"0.10.11\",\n        \"npm\": \"1.2.25\"\n    } \n}", "date": "Jun 13 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Funny Fowl", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/17212624/deploy-nodejs-on-heroku-fails-serving-static-files-located-in-subfolders"},
{"title": "gps nodejs", "code": "var\u00a0gps\u00a0=\u00a0require(\"gps-tracking\");\u00a0var\u00a0options\u00a0=\u00a0{\u00a0\u00a0\u00a0\u00a0'debug'\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0true,\u00a0\u00a0\u00a0\u00a0'port'\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a08090,\u00a0\u00a0\u00a0\u00a0'device_adapter'\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0\"TK103\"}\u00a0var\u00a0server\u00a0=\u00a0gps.server(options,function(device,connection){\u00a0\u00a0\u00a0\u00a0\u00a0device.on(\"login_request\",function(device_id,msg_parts){\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Some\u00a0devices\u00a0sends\u00a0a\u00a0login\u00a0request\u00a0before\u00a0transmitting\u00a0their\u00a0position\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Do\u00a0some\u00a0stuff\u00a0before\u00a0authenticate\u00a0the\u00a0device...\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0Accept\u00a0the\u00a0login\u00a0request.\u00a0You\u00a0can\u00a0set\u00a0false\u00a0to\u00a0reject\u00a0the\u00a0device.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.login_authorized(true);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//PING\u00a0->\u00a0When\u00a0the\u00a0gps\u00a0sends\u00a0their\u00a0position\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0device.on(\"ping\",function(data){\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//After\u00a0the\u00a0ping\u00a0is\u00a0received,\u00a0but\u00a0before\u00a0the\u00a0data\u00a0is\u00a0saved\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//console.log(data);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return\u00a0data;\u00a0\u00a0\u00a0\u00a0\u00a0});\u00a0});", "date": "Dec 13 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tender Tarsier", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/gps-tracking"},
{"title": "how create array with names of files in folder nodejs", "code": "var fs = require('fs');   \nvar fileNames = fs.readdirSync(dirPath);\n//Do something with fileNames here\n", "date": "Dec 01 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Gifted Helper", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/33786558/node-js-how-can-i-create-an-array-of-strings-based-on-the-file-names-in-a-direct"},
{"title": "google-api-nodejs-client", "code": "const {google} = require('googleapis');\n\n// Each API may support multiple version. With this sample, we're getting\n// v3 of the blogger API, and using an API key to authenticate.\nconst blogger = google.blogger({\n  version: 'v3',\n  auth: 'YOUR API KEY'\n});\n\nconst params = {\n  blogId: '3213900'\n};\n\n// get the blog details\nblogger.blogs.get(params, (err, res) => {\n  if (err) {\n    console.error(err);\n    throw err;\n  }\n  console.log(`The blog url is ${res.data.url}`);\n});", "date": "Dec 16 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Mystic Dev", "source_name": "github.com", "source_url": "https://github.com/googleapis/google-api-nodejs-client"},
{"title": "get value from path variable node js", "code": "exports.doIt = function(req, res, next) {\n    var group = new Group(req.body);\n\n    console.log(req.params);\n\n    group.userId = req.params.userId;\n\n    group.save(new dataCallbacks(req, res, next, \"Group\").insert());\n});", "date": "Jul 10 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Brave Badger", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/31055347/how-to-get-path-variable-in-expressnode-js"},
{"title": "get query string javascript nodejs", "code": "const querystring = require('querystring');\nconst url = \"http://example.com/index.html?code=string&key=12&id=false\";\nconst qs = \"code=string&key=12&id=false\";\n\nconsole.log(querystring.parse(qs));\n// > { code: 'string', key: '12', id: 'false' }\n\nconsole.log(querystring.parse(url));", "date": "May 12 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Amin :)", "source_name": null, "source_url": null},
{"title": "get parameter from url server side node js", "code": "const express = require(\"express\");\n//create express app\nconst app = express();\n//port at which the server will run\nconst port = 4000;\n//create end point\napp.get(\"/\", (request, response) => {\n  //send 'Hi, from Node server' to client\n  var city = request.param(\"city\");\n  var country = request.param(\"country\");\n  response.send(city);\n  \n});\n\n//start server and listen for the request\napp.listen(port, () =>\n  //a callback that will be called as soon as server start listening\n  console.log(`server is listening at http://localhost:${port}`)\n);\n ", "date": "Apr 04 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Puzzled Peafowl", "source_name": "www.codeleaks.io", "source_url": "https://www.codeleaks.io/get-url-parameter-javascript/"},
{"title": "get lines as list from file node js", "code": "const fs = require('fs');\n\nfs.readFile('file.txt', function(err, data) {\n    if(err) throw err;\n\n    const arr = data.toString().replace(/\\r\\n/g,'\\n').split('\\n');\n\n    for(let i of arr) {\n        console.log(i);\n    }\n});\n", "date": "Nov 06 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Dark Dolphin", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/6831918/node-js-read-a-text-file-into-an-array-each-line-an-item-in-the-array"},
{"title": "get ip of user in node js", "code": "//In your request object there is a property called connection, \n//which is a net.Socket object. The net.Socket object has a property \n//remoteAddress, therefore you should be able to get the IP with this call:\n\nrequest.connection.remoteAddress", "date": "Aug 04 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Now, Get Back To Coding", "source_name": null, "source_url": null},
{"title": "user input node javascript", "code": "const readline =\u00a0require('readline').createInterface({\u00a0\u00a0input: process.stdin,\u00a0\u00a0output: process.stdout}); readline.question('Who are you?', name => {\u00a0\u00a0console.log(`Hey there ${name}!`);\u00a0\u00a0readline.close();});", "date": "Dec 16 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Real Raccoon", "source_name": "www.codecademy.com", "source_url": "https://www.codecademy.com/articles/getting-user-input-in-node-js"},
{"title": "get input from user in nodejs", "code": "const prompt =\u00a0require('prompt-sync')(); const name =\u00a0prompt('What is your name?');console.log(`Hey there ${name}`);", "date": "Jan 30 2021", "vote": -2, "tags": ["javascript", "nodejs"], "posted_by": "Dangerous Dugong", "source_name": "www.codecademy.com", "source_url": "https://www.codecademy.com/articles/getting-user-input-in-node-js"},
{"title": "get file name nodejs", "code": "var path = require('path');\nvar scriptName = path.basename(__filename);\n", "date": "Oct 18 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Thoughtful Tamarin", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/14201475/node-js-getting-current-filename/32310412"},
{"title": "how to get file name in directory node js", "code": "const path = require('path')\n\n//...\n\n//inside the `for` loop\nconst stat = fs.lstatSync(path.join(dir, file))\n", "date": "Oct 16 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Quaint Quail", "source_name": "flaviocopes.com", "source_url": "https://flaviocopes.com/how-to-get-files-names/"},
{"title": "get data from mongodb node js using mongoose", "code": "// find all athletes that play tennis\nvar query = Athlete.find({ 'sport': 'Tennis' });\n\n// selecting the 'name' and 'age' fields\nquery.select('name age');\n\n// limit our results to 5 items\nquery.limit(5);\n\n// sort by age\nquery.sort({ age: -1 });\n\n// execute the query at a later time\nquery.exec(function (err, athletes) {\n  if (err) return handleError(err);\n  // athletes contains an ordered list of 5 athletes who play Tennis\n})", "date": "May 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mystic Dev", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose"},
{"title": "get data from mongodb node js using mongoose", "code": "Athlete.\n  find().\n  where('sport').equals('Tennis').\n  where('age').gt(17).lt(50).  //Additional where query\n  limit(5).\n  sort({ age: -1 }).\n  select('name age').\n  exec(callback); // where callback is the name of our callback function.", "date": "May 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mystic Dev", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose"},
{"title": "get data from mongodb node js using mongoose", "code": "var schema = new Schema(\n{\n  name: String,\n  binary: Buffer,\n  living: Boolean,\n  updated: { type: Date, default: Date.now() },\n  age: { type: Number, min: 18, max: 65, required: true },\n  mixed: Schema.Types.Mixed,\n  _someId: Schema.Types.ObjectId,\n  array: [],\n  ofString: [String], // You can also have an array of each of the other types too.\n  nested: { stuff: { type: String, lowercase: true, trim: true } }\n})", "date": "May 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mystic Dev", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose"},
{"title": "get data from mongodb node js using mongoose", "code": "// Define schema\nvar Schema = mongoose.Schema;\n\nvar SomeModelSchema = new Schema({\n  a_string: String,\n  a_date: Date\n});\n\n// Compile model from schema\nvar SomeModel = mongoose.model('SomeModel', SomeModelSchema );", "date": "May 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mystic Dev", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose"},
{"title": "get data from mongodb node js using mongoose", "code": "//Require Mongoose\nvar mongoose = require('mongoose');\n\n//Define a schema\nvar Schema = mongoose.Schema;\n\nvar SomeModelSchema = new Schema({\n  a_string: String,\n  a_date: Date\n});\n", "date": "May 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mystic Dev", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose"},
{"title": "get if there is a value in an array node js", "code": "myArray = Array(/*element1, element2, etc...*/);\n\n// If the array 'myArray' contains the element 'valueWeSearch'\nif(myArray.includes(valueWeSearch))\n{\n \t// Do something\n}", "date": "Jan 31 2021", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "McDown", "source_name": null, "source_url": null},
{"title": "express get full url", "code": "var fullUrl = req.protocol + '://' + req.get('host') + req.originalUrl;", "date": "Jun 10 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Doubtful Dog", "source_name": null, "source_url": null},
{"title": "get full url nodejs", "code": "var fullUrl = req.protocol + '://' + req.get('host') + req.originalUrl;  ", "date": "Jul 03 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "geolib nodejs", "code": "getDistance(\u00a0\u00a0\u00a0\u00a0{\u00a0latitude:\u00a051.5103,\u00a0longitude:\u00a07.49347\u00a0},\u00a0\u00a0\u00a0\u00a0{\u00a0latitude:\u00a0\"51\u00b0\u00a031'\u00a0N\",\u00a0longitude:\u00a0\"7\u00b0\u00a028'\u00a0E\"\u00a0});", "date": "Mar 20 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Itchy Ibis", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/geolib"},
{"title": "generate random number nodejs", "code": "function getRandomNumberBetween(min,max){\n    return Math.floor(Math.random()*(max-min+1)+min);\n}", "date": "Feb 08 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "adriendums", "source_name": null, "source_url": null},
{"title": "typescript random number", "code": "/**\n* Gets random int\n* @param min \n* @param max \n* @returns random int - min & max inclusive\n*/\ngetRandomInt(min, max) : number{\n\tmin = Math.ceil(min);\n\tmax = Math.floor(max);\n\treturn Math.floor(Math.random() * (max - min + 1)) + min; \n}", "date": "Jul 18 2020", "vote": 0, "tags": ["javascript", "nodejs", "typescript"], "posted_by": "SecretServiceBob", "source_name": null, "source_url": null},
{"title": "get image center pixels nodejs", "code": "mdasdfsfsfasdfasdfaf", "date": "Feb 14 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Victorious Vulture", "source_name": null, "source_url": null},
{"title": "function and returns node js", "code": "\nfunction hello(name) {\n     console.log(\"hello \" + name);\n}\nhello(\"CSS\");\n//hello CSS", "date": "May 12 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Delightful Dormouse", "source_name": "www.java2s.com", "source_url": "http://www.java2s.com/Tutorials/Javascript/Node.js_Tutorial/0100__Node.js_Functions.htm"},
{"title": "front end display data frmo database nodejs html", "code": "<!doctype html>\n<html ng-app>\n  <head>\n    <title>My AngularJS App</title>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.5.6/angular.min.js\"></script>\n  </head>\n  <body>\n  <div ng-controller=\"MyCtrl\">\n    <table>\n      <thead>\n        <tr>\n          <th>\n            <p>Name</p>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr ng-repeat=\"user in users\">\n          <td> \n            <p>{{user}}</p>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n   </div>\n    <script>\n     var myApp = angular.module('myApp',[]);\n     function MyCtrl($scope, $http) {\n     //This method will call your server, with the GET method and the url /show\n     $http.get(\"http://localhost:3000/show\").then(function(success){\n      if(success.data.length>0)\n      {\n         $scope.users=success.data;\n      }\n     });\n     }\n   </script>\n  </body>\n </html>\n", "date": "Apr 19 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mysterious Meerkat", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/44911700/display-data-in-html-js-file-using-nodejs-from-mysql-database"},
{"title": "formidable form node js", "code": "const\u00a0http\u00a0=\u00a0require('http');const\u00a0formidable\u00a0=\u00a0require('formidable');\u00a0const\u00a0server\u00a0=\u00a0http.createServer((req,\u00a0res)\u00a0=>\u00a0{\u00a0\u00a0if\u00a0(req.url\u00a0===\u00a0'/api/upload'\u00a0&&\u00a0req.method.toLowerCase()\u00a0===\u00a0'post')\u00a0{\u00a0\u00a0\u00a0\u00a0//\u00a0parse\u00a0a\u00a0file\u00a0upload\u00a0\u00a0\u00a0\u00a0const\u00a0form\u00a0=\u00a0formidable({\u00a0multiples:\u00a0true\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0form.parse(req,\u00a0(err,\u00a0fields,\u00a0files)\u00a0=>\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res.writeHead(200,\u00a0{\u00a0'content-type':\u00a0'application/json'\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res.end(JSON.stringify({\u00a0fields,\u00a0files\u00a0},\u00a0null,\u00a02));\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0return;\u00a0\u00a0}\u00a0\u00a0\u00a0//\u00a0show\u00a0a\u00a0file\u00a0upload\u00a0form\u00a0\u00a0res.writeHead(200,\u00a0{\u00a0'content-type':\u00a0'text/html'\u00a0});\u00a0\u00a0res.end(`\u00a0\u00a0\u00a0\u00a0<h2>With\u00a0Node.js\u00a0<code>\"http\"</code>\u00a0module</h2>\u00a0\u00a0\u00a0\u00a0<form\u00a0action=\"/api/upload\"\u00a0enctype=\"multipart/form-data\"\u00a0method=\"post\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div>Text\u00a0field\u00a0title:\u00a0<input\u00a0type=\"text\"\u00a0name=\"title\"\u00a0/></div>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div>File:\u00a0<input\u00a0type=\"file\"\u00a0name=\"multipleFiles\"\u00a0multiple=\"multiple\"\u00a0/></div>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input\u00a0type=\"submit\"\u00a0value=\"Upload\"\u00a0/>\u00a0\u00a0\u00a0\u00a0</form>\u00a0\u00a0`);});\u00a0server.listen(8080,\u00a0()\u00a0=>\u00a0{\u00a0\u00a0console.log('Server\u00a0listening\u00a0on\u00a0http://localhost:8080/\u00a0...');});", "date": "Nov 15 2020", "vote": -2, "tags": ["javascript", "nodejs"], "posted_by": "Brainy Bug", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/formidable"},
{"title": "forget mot de passe api nodejs mongodb example", "code": "const mongoose = require('mongoose');\n\n\nconst resettokenSchema = new mongoose.Schema({\n_userId: { type: mongoose.Schema.Types.ObjectId, required: true, ref: 'User' },\nresettoken: { type: String, required: true },\ncreatedAt: { type: Date, required: true, default: Date.now, expires: 43200 },\n});\n\n\nmodule.exports = mongoose.model('passwordResetToken', resettokenSchema);", "date": "Mar 13 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fierce Fish", "source_name": "hackernoon.com", "source_url": "https://hackernoon.com/how-to-reset-password-with-nodejs-and-angular-part-1-2e2632oc"},
{"title": "javascript for loop", "code": "var colors=[\"red\",\"blue\",\"green\"];\nfor (let i = 0; i < colors.length; i++) { \n  console.log(colors[i]);\n}", "date": "Jun 17 2019", "vote": 129, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "js for loop", "code": "var i; //defines i\nfor (i = 0; i < 5; i++) { //starts loop\n  console.log(\"The Number Is: \" + i); //What ever you want\n}; //ends loop\n//Or:\nconsole.log(\"The Number Is: \" + 0);\nconsole.log(\"The Number Is: \" + 1);\nconsole.log(\"The Number Is: \" + 2);\nconsole.log(\"The Number Is: \" + 3);\nconsole.log(\"The Number Is: \" + 4);\n//They do the same thing!\n//Hope I helped!", "date": "Jun 21 2020", "vote": 15, "tags": ["javascript", "nodejs"], "posted_by": "Determined Programmer", "source_name": null, "source_url": null},
{"title": "for loop in node js", "code": "var i;\nfor (i = 0; i < cars.length; i++) {\n  text += cars[i] + \"<br>\";\n}", "date": "Jan 27 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Breakable Beetle", "source_name": null, "source_url": null},
{"title": "javascript loop", "code": "let array = ['Item 1', 'Item 2', 'Item 3'];\n\narray.forEach(item => {\n\tconsole.log(item); // Logs each 'Item #'\n});", "date": "Feb 20 2020", "vote": 27, "tags": ["javascript", "nodejs"], "posted_by": "Clumsy Cheetah", "source_name": null, "source_url": null},
{"title": "javascript loop", "code": "let array = ['Item 1', 'Item 2', 'Item 3'];\n\nfor (let index = 0; index < array.length; index++) {\n  console.log(\"index\", index);\n  console.log(\"array item\", array[index]);\n}", "date": "Mar 04 2020", "vote": 11, "tags": ["javascript", "nodejs"], "posted_by": "Smiling Starling", "source_name": null, "source_url": null},
{"title": "for of loop javascript", "code": "const array1 = ['a', 'b', 'c'];\n\nfor (const element of array1) {\n  console.log(element);\n}\n\n// expected output: \"a\"\n// expected output: \"b\"\n// expected output: \"c\"\n", "date": "Mar 02 2020", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "Kaotik", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/for...of"},
{"title": "follow and unfollow node js button", "code": "<% if(isLoggedIn) { %>\n                       <% if(user && user._id != currentUser._id) { %>\n                       <% const following = user.following;\n                          const action = following.includes(currentUser._id) ? 'unfollow' : 'follow';\n                       %>\n                        <button class=\"btn btn-primary ml-4\" data-action=\"<%= action %>\" data-follower=\"<%= user._id %>\" data-following=\"<%= currentUser._id %>\" id=\"follow-btn\">Follow</button>\n                       <% } %>  \n                    <% } %> \n", "date": "Feb 16 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Blue-eyed Bison", "source_name": "gabrieleromanato.name", "source_url": "https://gabrieleromanato.name/nodejs-create-a-simple-social-network-with-expressjs"},
{"title": "get last element of array javascript", "code": "arr.slice(-1)[0] ", "date": "Aug 11 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Saan", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/3216013/get-the-last-item-in-an-array"},
{"title": "find last element in array nodejs", "code": "var a = loc_array.slice(-1)[0]", "date": "Aug 13 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Bewildered Badger", "source_name": null, "source_url": null},
{"title": "javascript get last element in array", "code": "//why was this a ad", "date": "Aug 08 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Distinct Dolphin", "source_name": null, "source_url": null},
{"title": "get last element of array javascript", "code": "if (loc_array[loc_array.length - 1] === 'index.html') {\n   // do something\n} else {\n   // something else\n}", "date": "Jul 30 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Quaint Quail", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/3216013/get-the-last-item-in-an-array"},
{"title": "File type node js", "code": "const FileType = require('file-type');\n\n(async () => {\n\tconsole.log(await FileType.fromFile('Unicorn.png'));\n\t//=> {ext: 'png', mime: 'image/png'}\n})();", "date": "Apr 18 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Plain Piranha", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/file-type"},
{"title": "fetch data from external url nodejs", "code": "const fetch   = require('node-fetch');\n \napp.get('/', function (req, res) {\n    var url = 'https://api.darksky.net/forecast/<API KEY>/37.8267,-122.4233';\n     \n    fetch(url)\n    .then(res => res.json())\n    .then(data => {\n        res.send({ data });\n    })\n    .catch(err => {\n        res.send(err);\n    });\n});", "date": "Sep 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Brave Bee", "source_name": null, "source_url": null},
{"title": "fetch api based on id nodejs and mongodb", "code": "// contactController.js// Import contact modelContact = require('./contactModel');// Handle index actionsexports.index = function (req, res) {    Contact.get(function (err, contacts) {        if (err) {            res.json({                status: \"error\",                message: err,            });        }        res.json({            status: \"success\",            message: \"Contacts retrieved successfully\",            data: contacts        });    });};// Handle create contact actionsexports.new = function (req, res) {    var contact = new Contact();    contact.name = req.body.name ? req.body.name : contact.name;    contact.gender = req.body.gender;    contact.email = req.body.email;    contact.phone = req.body.phone;// save the contact and check for errors    contact.save(function (err) {        // if (err)        //     res.json(err);res.json({            message: 'New contact created!',            data: contact        });    });};// Handle view contact infoexports.view = function (req, res) {    Contact.findById(req.params.contact_id, function (err, contact) {        if (err)            res.send(err);        res.json({            message: 'Contact details loading..',            data: contact        });    });};// Handle update contact infoexports.update = function (req, res) {Contact.findById(req.params.contact_id, function (err, contact) {        if (err)            res.send(err);contact.name = req.body.name ? req.body.name : contact.name;        contact.gender = req.body.gender;        contact.email = req.body.email;        contact.phone = req.body.phone;// save the contact and check for errors        contact.save(function (err) {            if (err)                res.json(err);            res.json({                message: 'Contact Info updated',                data: contact            });        });    });};// Handle delete contactexports.delete = function (req, res) {    Contact.remove({        _id: req.params.contact_id    }, function (err, contact) {        if (err)            res.send(err);res.json({            status: \"success\",            message: 'Contact deleted'        });    });};", "date": "Feb 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Dark Dormouse", "source_name": "medium.com", "source_url": "https://medium.com/@dinyangetoh/how-to-build-simple-restful-api-with-nodejs-expressjs-and-mongodb-99348012925d"},
{"title": "fetch api based on id nodejs and mongodb", "code": "// contactModel.jsvar mongoose = require('mongoose');// Setup schemavar contactSchema = mongoose.Schema({    name: {        type: String,        required: true    },    email: {        type: String,        required: true    },    gender: String,    phone: String,    create_date: {        type: Date,        default: Date.now    }});// Export Contact modelvar Contact = module.exports = mongoose.model('contact', contactSchema);module.exports.get = function (callback, limit) {    Contact.find(callback).limit(limit);}", "date": "Feb 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Dark Dormouse", "source_name": "medium.com", "source_url": "https://medium.com/@dinyangetoh/how-to-build-simple-restful-api-with-nodejs-expressjs-and-mongodb-99348012925d"},
{"title": "fetch api based on id nodejs and mongodb", "code": "// Import expresslet express = require('express');// Import Body parserlet bodyParser = require('body-parser');// Import Mongooselet mongoose = require('mongoose');// Initialise the applet app = express();// Import routeslet apiRoutes = require(\"./api-routes\");// Configure bodyparser to handle post requestsapp.use(bodyParser.urlencoded({    extended: true}));app.use(bodyParser.json());// Connect to Mongoose and set connection variablemongoose.connect('mongodb://localhost/resthub', { useNewUrlParser: true});var db = mongoose.connection;// Added check for DB connectionif(!db)    console.log(\"Error connecting db\")else    console.log(\"Db connected successfully\")// Setup server portvar port = process.env.PORT || 8080;// Send message for default URLapp.get('/', (req, res) => res.send('Hello World with Express'));// Use Api routes in the Appapp.use('/api', apiRoutes);// Launch app to listen to specified portapp.listen(port, function () {    console.log(\"Running RestHub on port \" + port);});", "date": "Feb 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Dark Dormouse", "source_name": "medium.com", "source_url": "https://medium.com/@dinyangetoh/how-to-build-simple-restful-api-with-nodejs-expressjs-and-mongodb-99348012925d"},
{"title": "extract uppercase words nodejs", "code": "const str = \"HERE'S AN UPPERCASE PART of the string\";\nconst upperCaseWords = str.match(/(\\b[A-Z][A-Z]+|\\b[A-Z]\\b)/g);\n\nconsole.log(upperCaseWords);", "date": "May 04 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Hiren Reshamwala", "source_name": "www.techighness.com", "source_url": "https://www.techighness.com/post/how-to-get-all-uppercase-words-from-a-string-in-javascript/"},
{"title": "firebase admin node js", "code": "npm install firebase-admin --save\n...\nvar admin = require('firebase-admin');", "date": "Apr 14 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "GutoTrosla", "source_name": "firebase.google.com", "source_url": "https://firebase.google.com/docs/admin/setup#add-sdk"},
{"title": "extract data from pdf nodejs", "code": "// Installation\n// npm install pdf-parse\n\n// Basic Usage\nconst\u00a0fs\u00a0=\u00a0require('fs');\nconst\u00a0pdf\u00a0=\u00a0require('pdf-parse');\u00a0\nlet\u00a0dataBuffer\u00a0=\u00a0fs.readFileSync('path\u00a0to\u00a0PDF\u00a0file...');\u00a0\npdf(dataBuffer).then(function(data)\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0/* \u00a0number\u00a0of\u00a0pages\u00a0\u00a0\u00a0\u00a0\n\tconsole.log(data.numpages);\u00a0\u00a0\u00a0\u00a0\u00a0\n\tnumber\u00a0of\u00a0rendered\u00a0pages\u00a0\u00a0\u00a0\u00a0\n\tconsole.log(data.numrender);\u00a0\u00a0\u00a0\u00a0\u00a0\n\tPDF\u00a0info\u00a0\u00a0\u00a0\u00a0\n\tconsole.log(data.info);\u00a0\u00a0\u00a0\u00a0\u00a0\n\tPDF\u00a0metadata\u00a0\u00a0\u00a0\u00a0\n\tconsole.log(data.metadata);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\tPDF.js\u00a0version\u00a0\u00a0\u00a0\u00a0\u00a0\n\tcheck\u00a0https://mozilla.github.io/pdf.js/getting_started/\u00a0\u00a0\u00a0\u00a0\n\tconsole.log(data.version);\u00a0\u00a0\u00a0\u00a0\u00a0PDF\u00a0text\u00a0\u00a0\u00a0\u00a0console.log(data.text);\u00a0 */\u00a0\n});", "date": "Feb 14 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/pdf-parse"},
{"title": "express.js server", "code": "/* ====== create node.js server with express.js framework ====== */\n// dependencies\nconst express = require(\"express\");\n\nconst app = express();\n\napp.get(\"/\", (req, res) => {\n   res.send(\"This is home page.\");\n});\n\napp.post(\"/\", (req, res) => {\n   res.send(\"This is home page with post request.\");\n});\n\n// PORT\nconst PORT = 3000;\n\napp.listen(PORT, () => {\n   console.log(`Server is running on PORT: ${PORT}`);\n});\n\n\n// ======== Instructions ========\n// save this as index.js\n// you have to download and install node.js on your machine\n// open terminal or command prompt\n// type node index.js\n// find your server at http://localhost:3000", "date": "Jan 13 2021", "vote": 48, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": null, "source_url": null},
{"title": "express hello world", "code": "//to run : node filename.js\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))\n\n//visit localhost:3000\n// assuming you have done 1) npm init 2) npm install express", "date": "Jul 17 2020", "vote": 35, "tags": ["javascript", "nodejs"], "posted_by": "Batman", "source_name": null, "source_url": null},
{"title": "npm express", "code": "$\u00a0npm\u00a0install\u00a0express", "date": "Jul 31 2020", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Innocent Ibex", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/express"},
{"title": "express js server", "code": "const express = require('express');\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\napp.get('/', (req, res) => {\n  res.send('<h1>Some HTML</h1>');\n  res.send('<p>Even more HTML</p>');\n});\n\napp.listen(PORT, () => console.log(`Server is listening on port ${PORT}`));", "date": "Sep 29 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "amazingcoder444Rblx", "source_name": null, "source_url": null},
{"title": "node.js express", "code": "const express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))", "date": "Jun 05 2020", "vote": 15, "tags": ["javascript", "nodejs"], "posted_by": "Vincent Lab", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/starter/hello-world.html"},
{"title": "express nodejs", "code": "Fast, unopinionated, minimalist web framework for Node.js", "date": "Jan 29 2021", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "DevLorenzo", "source_name": null, "source_url": null},
{"title": "exit application node js", "code": "process.exit(this);", "date": "Mar 09 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Sore Shark", "source_name": null, "source_url": null},
{"title": "formidable nodejs example", "code": "// make this a middleware function, \n// then put it on the route like you used jwt,\n// then get the value with req.users.\n\nconst { IncomingForm } = require('formidable')\nconst { resolve } = require('path')\nconst { existsSync, writeFileSync } = require('fs')\n\nmodule.exports = (req, res, next) => {\n  const form = new IncomingForm({\n    maxFileSize: 1 * 1024 * 1024,\n    keepExtensions: true\n  })\n\n  form.parse(req, (error, fields, file) => {\n    if (error) return next(error)\n    const patternFile = /\\.(jpg|jpeg|png|svg|gif|raw|webp)$/gi.test(file.productImage.name)\n\n    if (patternFile) {\n      const pathFile = resolve(process.cwd(), 'servers/uploads/', file.productImage.name)\n      const fileExits = existsSync(pathFile)\n      if (!fileExits) {\n        writeFileSync(pathFile)\n        req.users = JSON.parse(JSON.stringify({ fields, file }))\n        return next()\n      }\n      req.users = JSON.parse(JSON.stringify({ fields, file }))\n      return next()\n    }\n  })\n}\n", "date": "Nov 24 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Restu Wahyu Saputra", "source_name": null, "source_url": null},
{"title": "formidable form node js", "code": "const\u00a0http\u00a0=\u00a0require('http');const\u00a0formidable\u00a0=\u00a0require('formidable');\u00a0const\u00a0server\u00a0=\u00a0http.createServer((req,\u00a0res)\u00a0=>\u00a0{\u00a0\u00a0if\u00a0(req.url\u00a0===\u00a0'/api/upload'\u00a0&&\u00a0req.method.toLowerCase()\u00a0===\u00a0'post')\u00a0{\u00a0\u00a0\u00a0\u00a0//\u00a0parse\u00a0a\u00a0file\u00a0upload\u00a0\u00a0\u00a0\u00a0const\u00a0form\u00a0=\u00a0formidable({\u00a0multiples:\u00a0true\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0form.parse(req,\u00a0(err,\u00a0fields,\u00a0files)\u00a0=>\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res.writeHead(200,\u00a0{\u00a0'content-type':\u00a0'application/json'\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0res.end(JSON.stringify({\u00a0fields,\u00a0files\u00a0},\u00a0null,\u00a02));\u00a0\u00a0\u00a0\u00a0});\u00a0\u00a0\u00a0\u00a0\u00a0return;\u00a0\u00a0}\u00a0\u00a0\u00a0//\u00a0show\u00a0a\u00a0file\u00a0upload\u00a0form\u00a0\u00a0res.writeHead(200,\u00a0{\u00a0'content-type':\u00a0'text/html'\u00a0});\u00a0\u00a0res.end(`\u00a0\u00a0\u00a0\u00a0<h2>With\u00a0Node.js\u00a0<code>\"http\"</code>\u00a0module</h2>\u00a0\u00a0\u00a0\u00a0<form\u00a0action=\"/api/upload\"\u00a0enctype=\"multipart/form-data\"\u00a0method=\"post\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div>Text\u00a0field\u00a0title:\u00a0<input\u00a0type=\"text\"\u00a0name=\"title\"\u00a0/></div>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<div>File:\u00a0<input\u00a0type=\"file\"\u00a0name=\"multipleFiles\"\u00a0multiple=\"multiple\"\u00a0/></div>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<input\u00a0type=\"submit\"\u00a0value=\"Upload\"\u00a0/>\u00a0\u00a0\u00a0\u00a0</form>\u00a0\u00a0`);});\u00a0server.listen(8080,\u00a0()\u00a0=>\u00a0{\u00a0\u00a0console.log('Server\u00a0listening\u00a0on\u00a0http://localhost:8080/\u00a0...');});", "date": "Nov 15 2020", "vote": -2, "tags": ["javascript", "nodejs"], "posted_by": "Brainy Bug", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/formidable"},
{"title": "node js event emitter", "code": "const EventEmitter = require('events');\n\nclass MyEmitter extends EventEmitter {\n  foo() {\n    this.emit('test');\n  }\n}\nconst myEmitter = new MyEmitter();\nmyEmitter.on('test', () => console.log('Yay, it works!'));\n\nmyEmitter.foo();\t// Yay it works!", "date": "Oct 29 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "event module in node js", "code": "const myEmitter = new MyEmitter();\nlet m = 0;\nmyEmitter.on('event', () => {\n  console.log(++m);\n});\nmyEmitter.emit('event');\n// Prints: 1\nmyEmitter.emit('event');\n// Prints: 2", "date": "Sep 04 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Upset Unicorn", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/events.html"},
{"title": "eventemitter nodejs", "code": "myEmitter.on('status', (code, msg)=> console.log(`Got ${code} and ${msg}`));", "date": "Sep 04 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Dead Dove", "source_name": "www.freecodecamp.org", "source_url": "https://www.freecodecamp.org/news/how-to-code-your-own-event-emitter-in-node-js-a-step-by-step-guide-e13b7e7908e1/"},
{"title": "node js event emitter", "code": "const EventEmitter = require('events');\n\nclass MyEmitter extends EventEmitter {\n  foo() {\n    this.emit('test');\n  }\n}\nconst myEmitter = new MyEmitter();\nmyEmitter.on('test', () => console.log('Yay, it works!'));\n\nmyEmitter.foo();\t// Yay it works!", "date": "Oct 29 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "event module in node js", "code": "const myEmitter = new MyEmitter();\nlet m = 0;\nmyEmitter.on('event', () => {\n  console.log(++m);\n});\nmyEmitter.emit('event');\n// Prints: 1\nmyEmitter.emit('event');\n// Prints: 2", "date": "Sep 04 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Upset Unicorn", "source_name": "nodejs.org", "source_url": "https://nodejs.org/api/events.html"},
{"title": "node js throw error", "code": "FactoryController.prototype.create = function (callback) {\n    //The throw is working, and the exception is returned.\n    throw new Error('An error occurred'); //outside callback \n    try {\n        this.check(function (check_result) {\n            callback(check_result);\n        });\n    } catch (ex) {\n        throw new Error(ex.toString());\n    }\n}\n\nFactoryController.prototype.create = function (callback) {\n    try {\n        this.check(function (check_result) {\n            //The throw is not working on this case to return the exception to the caller(parent)\n            throw new Error('An error occurred'); //inside callback \n        });\n    } catch (ex) {\n        throw new Error(ex.toString());\n    }\n}", "date": "May 05 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Helpless Hoopoe", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/34017767/nodejs-throw-exception"},
{"title": "error handling in node js", "code": "app.get('/', function (req, res, next) {\n  Promise.resolve().then(function () {\n    throw new Error('BROKEN')\n  }).catch(next) // Errors will be passed to Express.\n})\n", "date": "Jul 30 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Beautiful Badger", "source_name": "expressjs.com", "source_url": "https://expressjs.com/en/guide/error-handling.html"},
{"title": "error handling in call back function in nodejs", "code": "fs.readFile('/foo.txt', function(err, data) {\n  // TODO: Error Handling Still Needed!\n  console.log(data);\n});\n", "date": "Aug 20 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Yucky Yacare", "source_name": "fredkschott.com", "source_url": "http://fredkschott.com/post/2014/03/understanding-error-first-callbacks-in-node-js/"},
{"title": "enumerate node js", "code": "const foobar = ['A', 'B', 'C'];\n\nfor (const [index, element] of foobar.entries()) {\n  console.log(index, element);\n}", "date": "Feb 26 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Inexpensive Impala", "source_name": null, "source_url": null},
{"title": "encrypt and decrypt in nodejs", "code": "const\u00a0Cryptr\u00a0=\u00a0require('cryptr');const\u00a0cryptr\u00a0=\u00a0new\u00a0Cryptr('myTotalySecretKey');\u00a0const\u00a0encryptedString\u00a0=\u00a0cryptr.encrypt('bacon');const\u00a0decryptedString\u00a0=\u00a0cryptr.decrypt(encryptedString);\u00a0console.log(encryptedString);\u00a0//\u00a0e7b75a472b65bc4a42e7b3f78833a4d00040beba796062bf7c13d9533b149e5ec3784813dc20348fdf248d28a2982df85b83d1109623bce45f08238f6ea9bd9bb5f406427b2a40f969802635b8907a0a57944f2c12f334bd081d5143a357c173a611e1b64aconsole.log(decryptedString);\u00a0//\u00a0bacon", "date": "Jan 11 2021", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Cute Cicada", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/cryptr"},
{"title": "edit json via nodejs", "code": "//Using edit-json-file for NodeJS, based off the NPM documentation for edit-file-json\nconst editJsonFile = require(\"edit-json-file\");\nlet file = editJsonFile(`${__dirname}/filename.json`);\nfile.set(\"name\", \"value\");\nfile.save();\nfile = editJsonFile(`${__dirname}/filename.json`, {\n    autosave: true\n});", "date": "Oct 02 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "lightsbane", "source_name": null, "source_url": null},
{"title": "ec2 yum nodejs", "code": "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash\n. ~/.nvm/nvm.sh\nnvm install node\n", "date": "Sep 28 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "knozcan", "source_name": "docs.aws.amazon.com", "source_url": "https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/setting-up-node-on-ec2-instance.html"},
{"title": "Error: ENOENT: no such file or directory, stat 'C:\\Users\\DELL\\OneDrive\\Documents\\BackEnd Tutorials\\NodeJs Tutorial with Max\\intro-to-express\\views\\add_product.html'", "code": "Error: ENOENT: no such file or directory, stat 'C:\\Users\\DELL\\OneDrive\\Documents\\BackEnd Tutorials\\NodeJs Tutorial with Max\\intro-to-express\\views\\add_product.html'", "date": "May 12 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Stormy Skipper", "source_name": null, "source_url": null},
{"title": "dynamodb pagination nodejs", "code": "const getAllData = async (params) => { \n\n    console.log(\"Querying Table\");\n    let data = await docClient.query(params).promise();\n\n    if(data['Items'].length > 0) {\n        allData = [...allData, ...data['Items']];\n    }\n\n    if (data.LastEvaluatedKey) {\n        params.ExclusiveStartKey = data.LastEvaluatedKey;\n        return await getAllData(params);\n\n    } else {\n        return data;\n    }\n}\n", "date": "Dec 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Poor Polecat", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/42765437/pagination-in-dynamodb-using-node-js"},
{"title": "download image in nodejs", "code": "const request = require('request');\nconst fs = require('fs');\n\nasync function download(url, dest) {\n\n    /* Create an empty file where we can save data */\n    const file = fs.createWriteStream(dest);\n\n    /* Using Promises so that we can use the ASYNC AWAIT syntax */\n    await new Promise((resolve, reject) => {\n      request({\n        /* Here you should specify the exact link to the file you are trying to download */\n        uri: url,\n        gzip: true,\n      })\n          .pipe(file)\n          .on('finish', async () => {\n            console.log(`The file is finished downloading.`);\n            resolve();\n          })\n          .on('error', (error) => {\n            reject(error);\n          });\n    })\n        .catch((error) => {\n          console.log(`Something happened: ${error}`);\n        });\n}\n\n// example\n\n(async () => {\n  \tconst data = await download('https://random.dog/vh7i79y2qhhy.jpg', './images/image.jpg');\n  \tconsole.log(data); // The file is finished downloading.\n})();", "date": "Jun 01 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Vu Nguyen", "source_name": null, "source_url": null},
{"title": "nodejs download image from url", "code": "var fs = require('fs'),\n    request = require('request');\n\nvar download = function(uri, filename, callback){\n  request.head(uri, function(err, res, body){\n    console.log('content-type:', res.headers['content-type']);\n    console.log('content-length:', res.headers['content-length']);\n\n    request(uri).pipe(fs.createWriteStream(filename)).on('close', callback);\n  });\n};\n\ndownload('https://www.google.com/images/srpr/logo3w.png', 'google.png', function(){\n  console.log('done');\n});", "date": "Jun 22 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "ROCKY6", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/12740659/downloading-images-with-node-js"},
{"title": "download file nodejs", "code": "const http = require('http');\nconst fs = require('fs');\n\nconst url = 'www.example.com/image.png'; // link to file you want to download\nconst path = 'app/assets/my_image_name.xlsx' // where to save a file\n\nconst request = http.get(url, function(response) {\n    if (response.statusCode === 200) {\n        var file = fs.createWriteStream(path);\n        response.pipe(file);\n    }\n    request.setTimeout(60000, function() { // if after 60s file not downlaoded, we abort a request \n        request.abort();\n    });\n});", "date": "Aug 27 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Scatterbrained Pennyduck", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/a/26233209/5466757"},
{"title": "node js download file to folder", "code": "var http = require('http');\nvar fs = require('fs');\n\nvar download = function(url, dest, cb) {\n  var file = fs.createWriteStream(dest);\n  var request = http.get(url, function(response) {\n    response.pipe(file);\n    file.on('finish', function() {\n      file.close(cb);  // close() is async, call cb after close completes.\n    });\n  }).on('error', function(err) { // Handle errors\n    fs.unlink(dest); // Delete the file async. (But we don't check the result)\n    if (cb) cb(err.message);\n  });\n};", "date": "Aug 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Quaint Quelea", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/11944932/how-to-download-a-file-with-node-js-without-using-third-party-libraries"},
{"title": "download a file nodejs", "code": "const http = require('http');\nconst fs = require('fs');\n\nconst file = fs.createWriteStream(\"file.jpg\");\nconst request = http.get(\"http://i3.ytimg.com/vi/J---aiyznGQ/mqdefault.jpg\", function(response) {\n  response.pipe(file);\n});\n", "date": "Dec 21 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Weary Wombat", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/11944932/how-to-download-a-file-with-node-js-without-using-third-party-libraries"},
{"title": "download file axios nodejs", "code": "export async function downloadFile(fileUrl: string, outputLocationPath: string) {\n  const writer = createWriteStream(outputLocationPath);\n\n  return Axios({\n    method: 'get',\n    url: fileUrl,\n    responseType: 'stream',\n  }).then(response => {\n\n    //ensure that the user can call `then()` only when the file has\n    //been downloaded entirely.\n\n    return new Promise((resolve, reject) => {\n      response.data.pipe(writer);\n      let error = null;\n      writer.on('error', err => {\n        error = err;\n        writer.close();\n        reject(err);\n      });\n      writer.on('close', () => {\n        if (!error) {\n          resolve(true);\n        }\n        //no need to call the reject here, as it will have been called in the\n        //'error' stream;\n      });\n    });\n  });\n}\nThis way, you can call downloadFile(), call then() on the returned promise, and making sure that the downloaded file will have completed processing.\n\nOr, if you use a more modern version of NodeJS, you can try this instead:\n\nimport * as stream from 'stream';\nimport { promisify } from 'util';\n\nconst finished = promisify(stream.finished);\n\nexport async function downloadFile(fileUrl: string, outputLocationPath: string): Promise<any> {\n  const writer = createWriteStream(outputLocationPath);\n  return Axios({\n    method: 'get',\n    url: fileUrl,\n    responseType: 'stream',\n  }).then(async response => {\n    response.data.pipe(writer);\n    return finished(writer); //this is a Promise\n  });\n}", "date": "Mar 03 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "DevLorenz02", "source_name": null, "source_url": null},
{"title": "download file axios nodejs", "code": "axios.get('https://xxx/my.pdf', {responseType: 'blob'}).then(response => {\n    fs.writeFile('/temp/my.pdf', response.data, (err) => {\n        if (err) throw err;\n        console.log('The file has been saved!');\n    });\n});\n", "date": "Mar 03 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "DevLorenz02", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/55374755/node-js-axios-download-file-stream-and-writefile"},
{"title": "dotenv not loading process.env in node", "code": "Rename your file to just .env, removing any prefix\nrequire it as early as possible in your application with the code snippet below\nrequire('dotenv').config();", "date": "Jun 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "ZionLloyd", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/26973484/how-do-i-setup-the-dotenv-file-in-node-js"},
{"title": "dockerfile nodejs", "code": "FROM node:10-alpine\n\nRUN mkdir -p /home/node/app/node_modules && chown -R node:node /home/node/app\n\nWORKDIR /home/node/app\n\nCOPY package*.json ./\n\nUSER node\n\nRUN npm install\n\nCOPY --chown=node:node . .\n\nEXPOSE 8080\n\nCMD [ \"node\", \"index.js\" ]", "date": "Nov 30 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Skull Sherbet", "source_name": null, "source_url": null},
{"title": "simple nodejs dockerfile", "code": "FROM node:12-alpine\nWORKDIR /app\nCOPY package.json yarn.lock ./\nRUN yarn install --production\nCOPY . .\nCMD [\"node\", \"/app/src/index.js\"]", "date": "May 28 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "lieven121", "source_name": "github.com", "source_url": "https://github.com/docker/getting-started"},
{"title": "dockerfile for nodejs", "code": "# Choose the Image which has Node installed already\nFROM node:alpine\n\n# COPY all the files from Current Directory into the Container\nCOPY ./ ./\n\n# Install the Project Dependencies like Express Framework\nRUN npm install\n\n# Tell that this image is going to Open a Port \nEXPOSE 8080\n\n# Default Command to launch the Application\nCMD [\"npm\", \"start\"]", "date": "Jun 08 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "iamhanumanth", "source_name": "www.middlewareinventory.com", "source_url": "https://www.middlewareinventory.com/blog/docker-nodejs-example/#Step_5_Publish_your_Docker_NodeJS_image_to_Docker_Hub"},
{"title": "docker run npm install express syntax", "code": "FROM node:12\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\nRUN npm install\n# If you are building your code for production\n# RUN npm ci --only=production\n\n# Bundle app source\nCOPY . .\n\nEXPOSE 8080\nCMD [ \"node\", \"server.js\" ]", "date": "Sep 29 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Repulsive Raccoon", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/nodejs-docker-webapp/"},
{"title": "nodejs docker", "code": "FROM node:boron\n\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\nCOPY package.json /usr/src/app/\nRUN npm install\n\nCOPY . /usr/src/app\n\nEXPOSE 3000\n\nCMD [\"npm\",\"start\"]\n\n", "date": "Dec 18 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Super Skimmer", "source_name": "nextflow.in.th", "source_url": "https://nextflow.in.th/2017/easy-create-docker-image-for-express-and-nodejs/"},
{"title": "simple nodejs dockerfile", "code": "{\n  \"name\": \"docker_web_app\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Node.js on Docker\",\n  \"author\": \"First Last <first.last@example.com>\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.16.1\"\n  }\n}", "date": "Jan 25 2021", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Annoying Alpaca", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/nodejs-docker-webapp/"},
{"title": "delete single image in node js mongodb", "code": "// Delete single image\nconst deleteImage = (req, res) => {\n  Imageup.deleteOne({ _id: req.params.id })\n    .then(() => {\n      res.status(200).json({\n        message: \"Image deleted successfully!\",\n      });\n    })\n    .catch((error) => {\n      res.status(400).json({\n        error: error,\n      });\n    });\n};", "date": "Apr 12 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Frail Fox", "source_name": null, "source_url": null},
{"title": "download file nodejs", "code": "const http = require('http');\nconst fs = require('fs');\n\nconst url = 'www.example.com/image.png'; // link to file you want to download\nconst path = 'app/assets/my_image_name.xlsx' // where to save a file\n\nconst request = http.get(url, function(response) {\n    if (response.statusCode === 200) {\n        var file = fs.createWriteStream(path);\n        response.pipe(file);\n    }\n    request.setTimeout(60000, function() { // if after 60s file not downlaoded, we abort a request \n        request.abort();\n    });\n});", "date": "Aug 27 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Scatterbrained Pennyduck", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/a/26233209/5466757"},
{"title": "download a file nodejs", "code": "const http = require('http');\nconst fs = require('fs');\n\nconst file = fs.createWriteStream(\"file.jpg\");\nconst request = http.get(\"http://i3.ytimg.com/vi/J---aiyznGQ/mqdefault.jpg\", function(response) {\n  response.pipe(file);\n});\n", "date": "Dec 21 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Weary Wombat", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/11944932/how-to-download-a-file-with-node-js-without-using-third-party-libraries"},
{"title": "delete single image by using user id in node js mongodb", "code": "// User delete his single image by using user id and image id\nconst deleteSingleImageByUserId = async (req, res) => {\n  try {\n    const user = await User.findByIdAndUpdate(\n      req.params.userId,\n      {\n        $pull: {\n          images: {\n            _id: req.params.imageId,\n          },\n        },\n      },\n      { new: true }\n    );\n\n    //console.log(\"req params imageId: \", req.params.imageId + images);\n\n    if (!user) {\n      return res.status(400).send(\"User not found\");\n    }\n\n    await Imageup.findByIdAndDelete(req.params.imageId);\n\n    res.send(\"Image is deleted successfully!\");\n    console.log(\"user user: \", user);\n  } catch (err) {\n    res.status(500).send(\"Something went wrong!\");\n  }\n};", "date": "Apr 12 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Frail Fox", "source_name": null, "source_url": null},
{"title": "delete single image in node js mongodb", "code": "// Delete single image\nconst deleteImage = (req, res) => {\n  Imageup.deleteOne({ _id: req.params.id })\n    .then(() => {\n      res.status(200).json({\n        message: \"Image deleted successfully!\",\n      });\n    })\n    .catch((error) => {\n      res.status(400).json({\n        error: error,\n      });\n    });\n};", "date": "Apr 12 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Frail Fox", "source_name": null, "source_url": null},
{"title": "delete dir nodejs", "code": "fs.rmdirSync(dir, { recursive: true });", "date": "Aug 06 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bloody Boar", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/18052762/remove-directory-which-is-not-empty"},
{"title": "end code nodejs", "code": "process.exit()", "date": "Dec 13 2019", "vote": 8, "tags": ["javascript", "nodejs"], "posted_by": "1337", "source_name": null, "source_url": null},
{"title": "delete all childs in node", "code": "while (myNode.firstChild) {\n  myNode.removeChild(myNode.lastChild);\n}", "date": "Jun 15 2020", "vote": 6, "tags": ["javascript", "nodejs"], "posted_by": "George_agg", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/3955229/remove-all-child-elements-of-a-dom-node-in-javascript"},
{"title": "Javascript remove all child elements", "code": "var myDiv = document.getElementById(\"myDivID\");\r\n    myDiv.innerHTML = \"\";//remove all child elements inside of myDiv", "date": "Jul 26 2019", "vote": 7, "tags": ["javascript", "nodejs"], "posted_by": "Grepper", "source_name": null, "source_url": null},
{"title": "aws lambda dynamodb nodejs scan", "code": "export const scanTable = async (tableName) => {\n    const params = {\n        TableName: tableName,\n    };\n\n    let scanResults = [];\n    let items;\n    do{\n        items =  await documentClient.scan(params).promise();\n        items.Items.forEach((item) => scanResults.push(item));\n        params.ExclusiveStartKey  = items.LastEvaluatedKey;\n    }while(typeof items.LastEvaluatedKey != \"undefined\");\n\n    return scanResults;\n\n};", "date": "Aug 11 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "White guy from Tokyo", "source_name": null, "source_url": null},
{"title": "dynamodb get all items nodejs", "code": "var docClient = new AWS.DynamoDB.DocumentClient();\n\nvar params = {\n    TableName: \"users\",\n    FilterExpression: \"#user_status = :user_status_val\",\n    ExpressionAttributeNames: {\n        \"#user_status\": \"user_status\",\n    },\n    ExpressionAttributeValues: { \":user_status_val\": 'somestatus' }\n\n};\n\ndocClient.scan(params, onScan);\nvar count = 0;\n\nfunction onScan(err, data) {\n    if (err) {\n        console.error(\"Unable to scan the table. Error JSON:\", JSON.stringify(err, null, 2));\n    } else {        \n        console.log(\"Scan succeeded.\");\n        data.Items.forEach(function(itemdata) {\n           console.log(\"Item :\", ++count,JSON.stringify(itemdata));\n        });\n\n        // continue scanning if we have more items\n        if (typeof data.LastEvaluatedKey != \"undefined\") {\n            console.log(\"Scanning for more...\");\n            params.ExclusiveStartKey = data.LastEvaluatedKey;\n            docClient.scan(params, onScan);\n        }\n    }\n}", "date": "May 13 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Yellowed Yak", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/44589967/how-to-fetch-scan-all-items-from-aws-dynamodb-using-node-js"},
{"title": "node run shell command", "code": "// You can use 'exec' this way\n\nconst { exec } = require(\"child_process\");\n\nexec(\"ls -la\", (error, stdout, stderr) => {\n    if (error) {\n        console.log(`error: ${error.message}`);\n        return;\n    }\n    if (stderr) {\n        console.log(`stderr: ${stderr}`);\n        return;\n    }\n    console.log(`stdout: ${stdout}`);\n});\n", "date": "Apr 20 2020", "vote": 5, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Kaotik", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/executing-shell-commands-with-node-js/"},
{"title": "node execute shell commands", "code": "const { exec } = require(\"child_process\");\nexec(\"cat index.js\", (error, data, getter) => {\n\tif(error){\n\t\tconsole.log(\"error\",error.message);\n\t\treturn;\n\t}\n\tif(getter){\n\t\tconsole.log(\"data\",data);\n\t\treturn;\n\t}\n\tconsole.log(\"data\",data);\n\n});\n", "date": "Apr 11 2020", "vote": 9, "tags": ["javascript", "nodejs"], "posted_by": "If-dev", "source_name": null, "source_url": null},
{"title": "execute terminal command nodejs", "code": "// You can use 'exec' this way\n// LINUX EXAMPLE\n\nconst { exec } = require(\"child_process\");\n\nexec(\"ls -la\", (error, stdout, stderr) => {\n    if (error) {\n        console.log(`error: ${error.message}`);\n        return;\n    }\n    if (stderr) {\n        console.log(`stderr: ${stderr}`);\n        return;\n    }\n    console.log(`stdout: ${stdout}`);\n});", "date": "Oct 12 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Lucky Lapwing", "source_name": "www.codegrepper.com", "source_url": "https://www.codegrepper.com/code-examples/shell/electron+js+run+bash+command+from+inside"},
{"title": "node run command", "code": "// Run a command asynchronously\nconst { spawn } = require('child_process');\nconst dir = spawn('cmd', ['/c', 'dir']);\n\ndir.stdout.on('data', data => console.log(`Stdout: ${data}`));\ndir.stderr.on('data', data => console.log(`Stderr: ${data}`));\ndir.on('close', code => console.log(`Exit code: ${code}`));\n\n// Run a command synchronously\nconst { spawnSync } = require( 'child_process' );\nconst dir = spawnSync('cmd', ['/c', 'dir']);\n\nconsole.log(`Stdout: ${dir.stdout.toString()}`);\nconsole.log(`Stderr: ${dir.stderr.toString()}`);", "date": "Aug 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "0nline", "source_name": null, "source_url": null},
{"title": "define maxmum size of schema field in nodejs", "code": "db.createCollection(\"people\", {\n   validator: {\n      $jsonSchema: {\n         bsonType: \"object\",\n         required: [ \"name\" ],\n         properties: {\n            name: {\n               bsonType: [\"string\"],\n               description: \"must be a string\"\n            },\n            friends: {\n               bsonType: [\"array\"],\n               items : { bsonType: [\"string\"] },\n               minItems: 0,\n               maxItems: 10,\n               description: \"must be a array of string and max is 10\"\n            }\n         }\n      }\n   }\n});", "date": "May 31 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Faithful Fish", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/28514790/how-to-set-limit-for-array-size-in-mongoose-schema"},
{"title": "define async function in node js", "code": "async function name([param[, param[, ...param]]]) {\n   statements\n}", "date": "Mar 24 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Nutty Newt", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function"},
{"title": "dockerfile nodejs", "code": "FROM node:10-alpine\n\nRUN mkdir -p /home/node/app/node_modules && chown -R node:node /home/node/app\n\nWORKDIR /home/node/app\n\nCOPY package*.json ./\n\nUSER node\n\nRUN npm install\n\nCOPY --chown=node:node . .\n\nEXPOSE 8080\n\nCMD [ \"node\", \"index.js\" ]", "date": "Nov 30 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Skull Sherbet", "source_name": null, "source_url": null},
{"title": "simple nodejs dockerfile", "code": "FROM node:12-alpine\nWORKDIR /app\nCOPY package.json yarn.lock ./\nRUN yarn install --production\nCOPY . .\nCMD [\"node\", \"/app/src/index.js\"]", "date": "May 28 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "lieven121", "source_name": "github.com", "source_url": "https://github.com/docker/getting-started"},
{"title": "dockerfile for nodejs", "code": "# Choose the Image which has Node installed already\nFROM node:alpine\n\n# COPY all the files from Current Directory into the Container\nCOPY ./ ./\n\n# Install the Project Dependencies like Express Framework\nRUN npm install\n\n# Tell that this image is going to Open a Port \nEXPOSE 8080\n\n# Default Command to launch the Application\nCMD [\"npm\", \"start\"]", "date": "Jun 08 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "iamhanumanth", "source_name": "www.middlewareinventory.com", "source_url": "https://www.middlewareinventory.com/blog/docker-nodejs-example/#Step_5_Publish_your_Docker_NodeJS_image_to_Docker_Hub"},
{"title": "docker run npm install express syntax", "code": "FROM node:12\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\nRUN npm install\n# If you are building your code for production\n# RUN npm ci --only=production\n\n# Bundle app source\nCOPY . .\n\nEXPOSE 8080\nCMD [ \"node\", \"server.js\" ]", "date": "Sep 29 2020", "vote": 1, "tags": ["javascript", "nodejs", "shell"], "posted_by": "Repulsive Raccoon", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/nodejs-docker-webapp/"},
{"title": "nodejs docker", "code": "FROM node:boron\n\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\nCOPY package.json /usr/src/app/\nRUN npm install\n\nCOPY . /usr/src/app\n\nEXPOSE 3000\n\nCMD [\"npm\",\"start\"]\n\n", "date": "Dec 18 2020", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "Super Skimmer", "source_name": "nextflow.in.th", "source_url": "https://nextflow.in.th/2017/easy-create-docker-image-for-express-and-nodejs/"},
{"title": "simple nodejs dockerfile", "code": "{\n  \"name\": \"docker_web_app\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Node.js on Docker\",\n  \"author\": \"First Last <first.last@example.com>\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"dependencies\": {\n    \"express\": \"^4.16.1\"\n  }\n}", "date": "Jan 25 2021", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Annoying Alpaca", "source_name": "nodejs.org", "source_url": "https://nodejs.org/en/docs/guides/nodejs-docker-webapp/"},
{"title": "difference between synchronous and asynchronous in node js", "code": "// Example 1 - Synchronous (blocks)\nvar result = database.query(\"SELECT * FROM hugetable\");\nconsole.log(\"Query finished\");\nconsole.log(\"Next line\");\n\n\n// Example 2 - Asynchronous (doesn't block) \ndatabase.query(\"SELECT * FROM hugetable\", function(result) {\n    console.log(\"Query finished\");\n});\nconsole.log(\"Next line\");", "date": "Jul 09 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Enthusiastic Echidna", "source_name": null, "source_url": null},
{"title": "define a route with path paramters in nodejs", "code": "var users = {\n  'azat': {\n    email: 'hi@azat.co',\n    website: ' http://azat.co ',\n    blog: ' http://webapplog.com '\n  }\n};\n\nvar findUserByUsername = function (username, callback) {\n  // Perform database query that calls callback when it's done\n  // This is our fake database\n  if (!users[username])\n    return callback(new Error(\n      'No user matching '\n       + username\n      )\n    );\n  return callback(null, users[username]);\n};\n\napp.get('/v1/users/:username', function(request, response, next) {\n  var username = request.params.username;\n  findUserByUsername(username, function(error, user) {\n    if (error) return next(error);\n    return response.render('user', user);\n  });\n});\n\napp.get('/v1/admin/:username', function(request, response, next) {\n  var username = request.params.username;\n  findUserByUsername(username, function(error, user) {\n    if (error) return next(error);\n    return response.render('admin', user);\n  });\n}); \n", "date": "Jun 09 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Difficult Dingo", "source_name": "webapplog.com", "source_url": "https://webapplog.com/url-parameters-and-routing-in-express-js/"},
{"title": "route parameter in node", "code": "var express = require('express');\nvar fs  = require('fs');\nvar app= express();\n app.get('/index/profile/:id',function(req,res){\n    //  res.send('profile with id' + req.params.id)\n\n    \n    \n });\napp.listen(3000,'127.0.0.1');\nconsole.log('lsitng');", "date": "May 26 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Beautiful Badger", "source_name": null, "source_url": null},
{"title": "difference between ajax and node js", "code": "AJAX is client side programming technology and it executes in the browser.\nwhereas\nNodeJs is server-side scripting language and it executes on the server.", "date": "Nov 17 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Zealous Zebra", "source_name": null, "source_url": null},
{"title": "data not write in file node js", "code": "const fs = require('fs');\n\nfs.readFile('file.txt', 'utf-8', (err, data) => {\n    if(err) {\n        throw err;\n    }\n    console.log(data);\n});\n", "date": "Oct 22 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Disgusted Dragonfly", "source_name": "attacomsian.com", "source_url": "https://attacomsian.com/blog/reading-writing-files-nodejs"},
{"title": "decode jwt token nodejs", "code": "var ca = yourToken;\nvar base64Url = ca.split('.')[1];\nvar decodedValue = JSON.parse(window.atob(base64Url));", "date": "Apr 12 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "RedGuy12", "source_name": "medium.com", "source_url": "https://medium.com/@ddevinda/decode-jwt-token-6c75fa9aba6f"},
{"title": "js jwt decode", "code": "import\u00a0jwt_decode\u00a0from\u00a0\"jwt-decode\";\nvar\u00a0token\u00a0=\u00a0\"eyJ0eXAiO...\";\nvar\u00a0decoded\u00a0=\u00a0jwt_decode(token);\nconsole.log(decoded);\n\n/*\u00a0prints:\u00a0*\u00a0{\u00a0foo:\u00a0\"bar\",\u00a0*\u00a0\u00a0\u00a0exp:\u00a01393286893,\u00a0*\u00a0\u00a0\u00a0iat:\u00a01393268893\u00a0\u00a0}\u00a0*/", "date": "Jan 09 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Awful Anaconda", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/jwt-decode"},
{"title": "declare an array nodejs", "code": "var arr1 = new Array();\nvar arr2 = [];", "date": "Dec 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "MitchAloha", "source_name": null, "source_url": null},
{"title": "data at transit encrypting nodejs stack overflow", "code": "var crypto = require('crypto');\nvar assert = require('assert');\n\nvar algorithm = 'aes256'; // or any other algorithm supported by OpenSSL\nvar key = 'password';\nvar text = 'I love kittens';\n\nvar cipher = crypto.createCipher(algorithm, key);  \nvar encrypted = cipher.update(text, 'utf8', 'hex') + cipher.final('hex');\nvar decipher = crypto.createDecipher(algorithm, key);\nvar decrypted = decipher.update(encrypted, 'hex', 'utf8') + decipher.final('utf8');\n\nassert.equal(decrypted, text);", "date": "Jul 24 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Uptight Unicorn", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/6953286/node-js-encrypting-data-that-needs-to-be-decrypted"},
{"title": "cross-origin request blocked the same origin policy disallows reading the remote resource fix in node js node js", "code": "app.use(function (req, res, next) {\nres.setHeader('Access-Control-Allow-Origin', '*');\nres.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE');\nres.setHeader('Access-Control-Allow-Headers', 'Content-Type');\nres.setHeader('Access-Control-Allow-Credentials', true);\nnext();\n});\n", "date": "May 15 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "TJ Max", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/45611400/cross-origin-request-blocked-the-same-origin-policy-disallows-reading-the-remot"},
{"title": "css errors in node js server", "code": "<!doctype>\n ", "date": "Oct 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Frightened Flamingo", "source_name": null, "source_url": null},
{"title": "css errors in node js server", "code": "<!doctype>\n ", "date": "Oct 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Frightened Flamingo", "source_name": null, "source_url": null},
{"title": "css errors in node js server", "code": "<!doctype>\n ", "date": "Oct 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Frightened Flamingo", "source_name": null, "source_url": null},
{"title": "css errors in node js server", "code": "<!doctype>\n ", "date": "Oct 03 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Frightened Flamingo", "source_name": null, "source_url": null},
{"title": "crypto 32 characers encryption node js", "code": "const crypto = require('crypto');\nconst algorithm = 'aes-256-cbc';\nconst key = 'pass'; //Here I would get the password of the user\n\nfunction encrypt(text) {\n   const iv = crypto.randomBytes(16);\n   let cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(key), iv);\n   let encrypted = cipher.update(text);\n   encrypted = Buffer.concat([encrypted, cipher.final()]);\n   return { iv: iv.toString('hex'), encryptedData: encrypted.toString('hex') };\n}\n\nfunction decrypt(text) {\n   let iv = Buffer.from(text.iv, 'hex');\n   let encryptedText = Buffer.from(text.encryptedData, 'hex');\n   let decipher = crypto.createDecipheriv('aes-256-cbc', Buffer.from(key), iv);\n   let decrypted = decipher.update(encryptedText);\n   decrypted = Buffer.concat([decrypted, decipher.final()]);\n   return decrypted.toString();\n}", "date": "Apr 15 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Attractive Ape", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/63327730/node-js-crypto-too-short-encryption-key"},
{"title": "crud mongodb node js github", "code": "> db.users.insert({name:\"Mukesh Chapagain\", age:88, email:\"mukesh@example.com\"})\n> db.users.insert({name:\"Raju Sharma\", age:77, email:\"raju@example.com\"})\n> db.users.insert({name:\"Krishna Yadav\", age:65, email:\"krishna@example.com\"})\n", "date": "Jan 05 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Gorgeous Gharial", "source_name": "github.com", "source_url": "https://github.com/chapagain/nodejs-mongodb-crud"},
{"title": "creating room in ws nodejs", "code": "const rooms = {};\n\nwss.on(\"connection\", socket => {\n  const uuid = ...; // create here a uuid for this connection\n\n  const leave = room => {\n    // not present: do nothing\n    if(! rooms[room][uuid]) return;\n\n    // if the one exiting is the last one, destroy the room\n    if(Object.keys(rooms[room]).length === 1) delete rooms[room];\n    // otherwise simply leave the room\n    else delete rooms[room][uuid];\n  };\n\n  socket.on(\"message\", data => {\n    const { message, meta, room } = data;\n\n    if(meta === \"join\") {\n      if(! rooms[room]) rooms[room] = {}; // create the room\n      if(! rooms[room][uuid]) rooms[room][uuid] = socket; // join the room\n    }\n    else if(meta === \"leave\") {\n      leave(room);\n    }\n    else if(! meta) {\n      // send the message to all in the room\n      Object.entries(rooms[room]).forEach(([, sock]) => sock.send({ message }));\n    }\n  });\n\n  socket.on(\"close\", () => {\n    // for each room, remove the closed socket\n    Object.keys(rooms).forEach(room => leave(room));\n  });\n});", "date": "Apr 22 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tired Toucan", "source_name": null, "source_url": null},
{"title": "creating function in node js", "code": "function functionName(arg1, arg2...) {\n   // function body\n   // optional return; \n} ", "date": "Jan 26 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Minecraftian14", "source_name": null, "source_url": null},
{"title": "how to create node js server", "code": "/* ====== create node.js server with core 'http' module ====== */\n// dependencies\nconst http = require(\"http\");\n\n// PORT\nconst PORT = 3000;\n\n// server create\nconst server = http.createServer((req, res) => {\n   if (req.url === \"/\") {\n      res.write(\"This is home page.\");\n      res.end();\n   } else if (req.url === \"/about\" && req.method === \"GET\") {\n      res.write(\"This is about page.\");\n      res.end();\n   } else {\n      res.write(\"Not Found!\");\n      res.end();\n   }\n});\n\n// server listen port\nserver.listen(PORT);\n\nconsole.log(`Server is running on PORT: ${PORT}`);\n\n/* ========== *** ========== */\n\n/* ====== create node.js server with express.js framework ====== */\n// dependencies\nconst express = require(\"express\");\n\nconst app = express();\n\napp.get(\"/\", (req, res) => {\n   res.send(\"This is home page.\");\n});\n\napp.post(\"/\", (req, res) => {\n   res.send(\"This is home page with post request.\");\n});\n\n// PORT\nconst PORT = 3000;\n\napp.listen(PORT, () => {\n   console.log(`Server is running on PORT: ${PORT}`);\n});\n\n\n// ======== Instructions ========\n// save this as index.js\n// you have to download and install node.js on your machine\n// open terminal or command prompt\n// type node index.js\n// find your server at http://localhost:3000", "date": "Jan 09 2021", "vote": 34, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": null, "source_url": null},
{"title": "create server with node js", "code": "const express = require('express');\nconst server = express();\n\nconst PORT = 3000;\n\n// Homme page\nserver.get('/', (req, res) => {\n  return res.send(\"<h1 style='text-align: center;'>Hello,<br />from the Express.js server!</h1>\");\n})\n\n// About page\nserver.get('/about', (req, res) => {\n  return res.send('<h2 style=\"text-align:center\">About us</h2>');\n})\n\n// 404 page\nserver.use((req, res, next) =>{\n  res.status(404);\n\n  // respond with html page\n  if (req.accepts('html')) {\n    res.sendFile(__dirname + '/error404.html');\n    return;\n  }\n  // respond with json\n  else if (req.accepts('json')){\n    res.send({\n      status: 404,\n      error: 'Not found'\n    });\n    return;\n  }\n  // respond with text\n  else {\n    res.type('txt').send('Error 404 - Not found');\n  }\n});\n\nserver.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});\n", "date": "Apr 16 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Puzzled Penguin", "source_name": null, "source_url": null},
{"title": "simple node server", "code": "// content of index.js\nconst http = require('http')\nconst port = 3000\n\nconst requestHandler = (request, response) => {\n  console.log(request.url)\n  response.end('Hello Node.js Server!')\n}\n\nconst server = http.createServer(requestHandler)\n\nserver.listen(port, (err) => {\n  if (err) {\n    return console.log('something bad happened', err)\n  }\n\n  console.log(`server is listening on ${port}`)\n})\n", "date": "May 08 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Cruel Chipmunk", "source_name": "blog.risingstack.com", "source_url": "https://blog.risingstack.com/your-first-node-js-http-server/"},
{"title": "how to create a server in node js", "code": "// code by VARSHITH REDDY SATTI\n// to create a server in node.js you should.\nvar http = require('http');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(\"write html code to display you test\")\n  res.end();\n}).listen(8080);\n// save this as httpServer.js\n// run this by typing node httpServer.js in the command line\n// to acess your server got to http://localhost:8080", "date": "Dec 28 2019", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Crown Of Thorns Starfish", "source_name": null, "source_url": null},
{"title": "how to create node js server", "code": "//HTTP MODULE NODE.JS\nvar http = require('http');\nvar server = http.createServer(function(req, res){\n  //write code here\n});\nserver.listen(5000); ", "date": "Jan 13 2021", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Repulsive Ray", "source_name": null, "source_url": null},
{"title": "create node js server", "code": "import express from 'express';\nconst server = express();\n\nconst port = 8080;\n\nserver.get('/', (req, res) => {\n  return res.send('Hello, Express.js!');\n})\n\nserver.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});", "date": "Mar 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mysterious Monkey", "source_name": "learn.coderslang.com", "source_url": "https://learn.coderslang.com/0047-node.js-create-your-first-express-server/"},
{"title": "create nodejs new object", "code": "let Person = function (firstName, lastName, email) {\n\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.email = email;\n}\n\nlet PersonBuilder = function () {\n\n    let firstName;\n    let lastName;\n    let email;\n\n    return {\n        setFirstName: function (firstName) {\n            this.firstName = firstName;\n            return this;\n        },\n        setLastName: function (lastName) {\n            this.lastName = lastName;\n            return this;\n        },\n        setEmail: function (email) {\n            this.email = email;\n            return this;\n        },\n        info: function () {\n            return `${this.firstName} ${this.lastName}, ${this.email}`;\n        },\n        build: function () {\n            return new Person(firstName, lastName, email);\n        }\n    };\n};\n\nvar person = new PersonBuilder().setFirstName('John').setLastName('Doe')\n    .setEmail('jdoe@example.com');\nconsole.log(person.info());\n", "date": "Nov 28 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Yellowed Yacare", "source_name": "zetcode.com", "source_url": "http://zetcode.com/javascript/createobject/"},
{"title": "create nodejs new object", "code": "class Person {\n  constructor(fname, lname) {\n    this.firstName = fname;\n    this.lastName = lname;\n  }\n}\n\nconst person = new Person('testFirstName', 'testLastName');\n\nconsole.log(person.firstName); // testFirstName\nconsole.log(person.lastName); // testLastName\n\n", "date": "Nov 28 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Yellowed Yacare", "source_name": "www.freecodecamp.org", "source_url": "https://www.freecodecamp.org/news/a-complete-guide-to-creating-objects-in-javascript-b0e2450655e8/"},
{"title": "create nodejs new object", "code": "const personFactory = (firstName, lastName, email) => {\n    return {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        info() {\n            return `${this.firstName} ${this.lastName}, ${this.email}`;\n        }\n    };\n};\n\nlet person = personFactory('John', 'Doe', 'jdoe@example.com');\n\nconsole.log(person.info());\n", "date": "Nov 28 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Yellowed Yacare", "source_name": "zetcode.com", "source_url": "http://zetcode.com/javascript/createobject/"},
{"title": "create nodejs new object", "code": "function Person(fname, lname) {\n  this.firstName = fname;\n  this.lastName = lname;\n}", "date": "Nov 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Yellowed Yacare", "source_name": "www.freecodecamp.org", "source_url": "https://www.freecodecamp.org/news/a-complete-guide-to-creating-objects-in-javascript-b0e2450655e8/"},
{"title": "how to create node js server", "code": "/* ====== create node.js server with core 'http' module ====== */\n// dependencies\nconst http = require(\"http\");\n\n// PORT\nconst PORT = 3000;\n\n// server create\nconst server = http.createServer((req, res) => {\n   if (req.url === \"/\") {\n      res.write(\"This is home page.\");\n      res.end();\n   } else if (req.url === \"/about\" && req.method === \"GET\") {\n      res.write(\"This is about page.\");\n      res.end();\n   } else {\n      res.write(\"Not Found!\");\n      res.end();\n   }\n});\n\n// server listen port\nserver.listen(PORT);\n\nconsole.log(`Server is running on PORT: ${PORT}`);\n\n/* ========== *** ========== */\n\n/* ====== create node.js server with express.js framework ====== */\n// dependencies\nconst express = require(\"express\");\n\nconst app = express();\n\napp.get(\"/\", (req, res) => {\n   res.send(\"This is home page.\");\n});\n\napp.post(\"/\", (req, res) => {\n   res.send(\"This is home page with post request.\");\n});\n\n// PORT\nconst PORT = 3000;\n\napp.listen(PORT, () => {\n   console.log(`Server is running on PORT: ${PORT}`);\n});\n\n\n// ======== Instructions ========\n// save this as index.js\n// you have to download and install node.js on your machine\n// open terminal or command prompt\n// type node index.js\n// find your server at http://localhost:3000", "date": "Jan 09 2021", "vote": 34, "tags": ["javascript", "nodejs"], "posted_by": "Mehedi Islam Ripon", "source_name": null, "source_url": null},
{"title": "create server with node js", "code": "const express = require('express');\nconst server = express();\n\nconst PORT = 3000;\n\n// Homme page\nserver.get('/', (req, res) => {\n  return res.send(\"<h1 style='text-align: center;'>Hello,<br />from the Express.js server!</h1>\");\n})\n\n// About page\nserver.get('/about', (req, res) => {\n  return res.send('<h2 style=\"text-align:center\">About us</h2>');\n})\n\n// 404 page\nserver.use((req, res, next) =>{\n  res.status(404);\n\n  // respond with html page\n  if (req.accepts('html')) {\n    res.sendFile(__dirname + '/error404.html');\n    return;\n  }\n  // respond with json\n  else if (req.accepts('json')){\n    res.send({\n      status: 404,\n      error: 'Not found'\n    });\n    return;\n  }\n  // respond with text\n  else {\n    res.type('txt').send('Error 404 - Not found');\n  }\n});\n\nserver.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}`);\n});\n", "date": "Apr 16 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Puzzled Penguin", "source_name": null, "source_url": null},
{"title": "simple node server", "code": "// content of index.js\nconst http = require('http')\nconst port = 3000\n\nconst requestHandler = (request, response) => {\n  console.log(request.url)\n  response.end('Hello Node.js Server!')\n}\n\nconst server = http.createServer(requestHandler)\n\nserver.listen(port, (err) => {\n  if (err) {\n    return console.log('something bad happened', err)\n  }\n\n  console.log(`server is listening on ${port}`)\n})\n", "date": "May 08 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Cruel Chipmunk", "source_name": "blog.risingstack.com", "source_url": "https://blog.risingstack.com/your-first-node-js-http-server/"},
{"title": "node js server", "code": "const express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))", "date": "Apr 01 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Encouraging Elk", "source_name": null, "source_url": null},
{"title": "how to create a server in node js", "code": "// code by VARSHITH REDDY SATTI\n// to create a server in node.js you should.\nvar http = require('http');\nhttp.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/html'});\n  res.write(\"write html code to display you test\")\n  res.end();\n}).listen(8080);\n// save this as httpServer.js\n// run this by typing node httpServer.js in the command line\n// to acess your server got to http://localhost:8080", "date": "Dec 28 2019", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Crown Of Thorns Starfish", "source_name": null, "source_url": null},
{"title": "create node js server", "code": "import express from 'express';\nconst server = express();\n\nconst port = 8080;\n\nserver.get('/', (req, res) => {\n  return res.send('Hello, Express.js!');\n})\n\nserver.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});", "date": "Mar 07 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Mysterious Monkey", "source_name": "learn.coderslang.com", "source_url": "https://learn.coderslang.com/0047-node.js-create-your-first-express-server/"},
{"title": "creating room in ws node js", "code": "const rooms = {};\n\nwss.on(\"connection\", socket => {\n  const uuid = ...; // create here a uuid for this connection\n\n  const leave = room => {\n    // not present: do nothing\n    if(! rooms[room][uuid]) return;\n\n    // if the one exiting is the last one, destroy the room\n    if(Object.keys(rooms[room]).length === 1) delete rooms[room];\n    // otherwise simply leave the room\n    else delete rooms[room][uuid];\n  };\n\n  socket.on(\"message\", data => {\n    const { message, meta, room } = data;\n\n    if(meta === \"join\") {\n      if(! rooms[room]) rooms[room] = {}; // create the room\n      if(! rooms[room][uuid]) rooms[room][uuid] = socket; // join the room\n    }\n    else if(meta === \"leave\") {\n      leave(room);\n    }\n    else if(! meta) {\n      // send the message to all in the room\n      Object.entries(rooms[room]).forEach(([, sock]) => sock.send({ message }));\n    }\n  });\n\n  socket.on(\"close\", () => {\n    // for each room, remove the closed socket\n    Object.keys(rooms).forEach(room => leave(room));\n  });\n});", "date": "Apr 22 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Tired Toucan", "source_name": null, "source_url": null},
{"title": "create gatsby pages node js", "code": "const axios = require('axios');\n\nrequire(\"dotenv\").config({\n  path: `.env.${process.env.NODE_ENV}`\n});\n\nconst getRepositoryData = async () => {\n  console.log(process.env.API_URL);\n  return axios.get(`${process.env.API_URL}/repositories`);\n};\n\nexports.createPages = async ({\n  actions: {\n    createPage\n  }\n}) => {\n  let repositories = await getRepositoryData();\n  repositories = repositories.data;\n\n  // Create a page that lists all repositories.\n  createPage({\n    path: `/`,\n    component: require.resolve('./src/templates/all-repositories.js'),\n    context: {\n      repositories\n    }\n  });\n\n  // Create a page for each repository.\n  repositories.forEach(repository => {\n    createPage({\n      path: `/repository/${repository.owner}/${repository.name}`,\n      component: require.resolve('./src/templates/repository.js'),\n      context: {\n        repository\n      }\n    });\n  });\n};\n", "date": "Apr 05 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Better Bug", "source_name": "www.toptal.com", "source_url": "https://www.toptal.com/front-end/gatsby-js-node-js-static-site-generator-pt-2"},
{"title": "do while loop in javascript", "code": "do {\n  text += \"The number is \" + i;\n  i++;\n}\nwhile (i < 10);", "date": "Nov 25 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "Creepy G\u00e1bor", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/do...while"},
{"title": "define a while loop in node js", "code": "while (n < 3) {\n  n++;\n}", "date": "Jan 29 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "shravani", "source_name": "developer.mozilla.org", "source_url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/while"},
{"title": "create directory when writing to file in nodejs", "code": "fs.mkdir now accepts a { recursive: true } option like so:\n\n// Creates /tmp/a/apple, regardless of whether `/tmp` and /tmp/a exist.\nfs.mkdir('/tmp/a/apple', { recursive: true }, (err) => {\n  if (err) throw err;\n});", "date": "May 13 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Unusual Unicorn", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/13542667/create-directory-when-writing-to-file-in-node-js"},
{"title": "create a web server node js w socket.io", "code": "var app = require('express')();\nvar http = require('http').createServer(app);\nvar io = require('socket.io')(http);\n\napp.get('/', (req, res) => {\n  // Ran when a GET request to path '/'\n  res.sendFile(__dirname + '/index.html');\n});\n\nio.on('connection', (socket) => {\n  // Ran when a socket connected\n});\n\nhttp.listen(3000, () => {\n  // Ran when server is ready to take requestes\n});", "date": "Dec 31 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Clean Chinchilla", "source_name": "socket.io", "source_url": "https://socket.io/get-started/chat/"},
{"title": "create a node js project in with worker", "code": "louji", "date": "Dec 16 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Annoyed Anaconda", "source_name": null, "source_url": null},
{"title": "create csv file nodejs", "code": "const csv = require('csv-parser');\nconst fs = require('fs');\n\nfs.createReadStream('data.csv')\n  .pipe(csv())\n  .on('data', (row) => {\n    console.log(row);\n  })\n  .on('end', () => {\n    console.log('CSV file successfully processed');\n  });\n", "date": "Apr 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Suspect Camel", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-csv-files-with-node-js/"},
{"title": "create csv file nodejs", "code": "const createCsvWriter = require('csv-writer').createObjectCsvWriter;\nconst csvWriter = createCsvWriter({\n  path: 'out.csv',\n  header: [\n    {id: 'name', title: 'Name'},\n    {id: 'surname', title: 'Surname'},\n    {id: 'age', title: 'Age'},\n    {id: 'gender', title: 'Gender'},\n  ]\n});\n\nconst data = [\n  {\n    name: 'John',\n    surname: 'Snow',\n    age: 26,\n    gender: 'M'\n  }, {\n    name: 'Clair',\n    surname: 'White',\n    age: 33,\n    gender: 'F',\n  }, {\n    name: 'Fancy',\n    surname: 'Brown',\n    age: 78,\n    gender: 'F'\n  }\n];\n\ncsvWriter\n  .writeRecords(data)\n  .then(()=> console.log('The CSV file was written successfully'));\n", "date": "Apr 15 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Suspect Camel", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/reading-and-writing-csv-files-with-node-js/"},
{"title": "concept of node js with react js", "code": "app.get(\u2018/\u2019, function(req, res) {  res.send(\u2018Hello World\u2019)})", "date": "Dec 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Precious Panther", "source_name": "medium.com", "source_url": "https://medium.com/@etherealm/node-and-react-a-brief-introduction-99b672262fed"},
{"title": "colors in node js console", "code": "// Second argument is inserted in place of %s\n\nconsole.log('\\x1b[36m%s\\x1b[0m', 'I am cyan');  //cyan\nconsole.log('\\x1b[33m%s\\x1b[0m', stringToMakeYellow);  //yellow\n\nReset = \"\\x1b[0m\"\nBright = \"\\x1b[1m\"\nDim = \"\\x1b[2m\"\nUnderscore = \"\\x1b[4m\"\nBlink = \"\\x1b[5m\"\nReverse = \"\\x1b[7m\"\nHidden = \"\\x1b[8m\"\n\nFgBlack = \"\\x1b[30m\"\nFgRed = \"\\x1b[31m\"\nFgGreen = \"\\x1b[32m\"\nFgYellow = \"\\x1b[33m\"\nFgBlue = \"\\x1b[34m\"\nFgMagenta = \"\\x1b[35m\"\nFgCyan = \"\\x1b[36m\"\nFgWhite = \"\\x1b[37m\"\n\nBgBlack = \"\\x1b[40m\"\nBgRed = \"\\x1b[41m\"\nBgGreen = \"\\x1b[42m\"\nBgYellow = \"\\x1b[43m\"\nBgBlue = \"\\x1b[44m\"\nBgMagenta = \"\\x1b[45m\"\nBgCyan = \"\\x1b[46m\"\nBgWhite = \"\\x1b[47m\"", "date": "Jun 16 2020", "vote": 4, "tags": ["javascript", "nodejs"], "posted_by": "One Eyed Willy", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color"},
{"title": "node console color", "code": "Reset = \"\\x1b[0m\"\nBright = \"\\x1b[1m\"\nDim = \"\\x1b[2m\"\nUnderscore = \"\\x1b[4m\"\nBlink = \"\\x1b[5m\"\nReverse = \"\\x1b[7m\"\nHidden = \"\\x1b[8m\"\n\nFgBlack = \"\\x1b[30m\"\nFgRed = \"\\x1b[31m\"\nFgGreen = \"\\x1b[32m\"\nFgYellow = \"\\x1b[33m\"\nFgBlue = \"\\x1b[34m\"\nFgMagenta = \"\\x1b[35m\"\nFgCyan = \"\\x1b[36m\"\nFgWhite = \"\\x1b[37m\"\n\nBgBlack = \"\\x1b[40m\"\nBgRed = \"\\x1b[41m\"\nBgGreen = \"\\x1b[42m\"\nBgYellow = \"\\x1b[43m\"\nBgBlue = \"\\x1b[44m\"\nBgMagenta = \"\\x1b[45m\"\nBgCyan = \"\\x1b[46m\"\nBgWhite = \"\\x1b[47m\"", "date": "May 26 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "L", "source_name": null, "source_url": null},
{"title": "connect nodejs to mariadb", "code": "const mariadb = require('mariadb');\nconst pool = mariadb.createPool({\n     host: 'mydb.com', \n     user:'myUser', \n     password: 'myPassword',\n     connectionLimit: 5\n});\nasync function asyncFunction() {\n  let conn;\n  try {\n\tconn = await pool.getConnection();\n\tconst rows = await conn.query(\"SELECT 1 as val\");\n\tconsole.log(rows); //[ {val: 1}, meta: ... ]\n\tconst res = await conn.query(\"INSERT INTO myTable value (?, ?)\", [1, \"mariadb\"]);\n\tconsole.log(res); // { affectedRows: 1, insertId: 1, warningStatus: 0 }\n\n  } catch (err) {\n\tthrow err;\n  } finally {\n\tif (conn) return conn.end();\n  }\n}\n", "date": "Jan 27 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Plain Puma", "source_name": "mariadb.com", "source_url": "https://mariadb.com/kb/en/getting-started-with-the-nodejs-connector/"},
{"title": "client.connect is not a function node js mongodb", "code": "//Just add this line of code and client.connect and \n//-other dot functions will work\n\nvar mongo = require('mongodb').MongoClient;", "date": "Mar 19 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Fierce Flatworm", "source_name": null, "source_url": null},
{"title": "clear terminal node js", "code": "process.stdout.write('\\x1Bc'); ", "date": "Jun 07 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Adarsh077", "source_name": null, "source_url": null},
{"title": "console.log clear screen", "code": "console.clear()", "date": "Sep 10 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Different Donkey", "source_name": null, "source_url": null},
{"title": "clear the command prompt node", "code": "console.log('\\033[2J');", "date": "Feb 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Innocent Iguana", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/9006988/node-js-on-windows-how-to-clear-console"},
{"title": "configuration file must specify a supported nodejs10 version that is compatible with the runtime specified in the deployment.", "code": "Add this to package.json:\n\"engines\": {\n    \"node\": \">=10.0\"\n  }", "date": "Dec 23 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Expensive Eel", "source_name": "github.com", "source_url": "https://github.com/GoogleCloudPlatform/nodejs-docs-samples/issues/1314"},
{"title": "child process spawn python node js", "code": "const path = require('path')\nconst {spawn} = require('child_process')\n/**\n\u00a0 \u00a0* Run python myscript, pass in `-u` to not buffer console output\n\u00a0 \u00a0* @return {ChildProcess}\n*/\nfunction runScript(){\n\u00a0 \u00a0return spawn('python', [\n\u00a0 \u00a0 \u00a0 \"-u\",\n\u00a0 \u00a0 \u00a0 path.join(__dirname, 'myscript.py'),\n\u00a0 \u00a0 \u00a0\"--foo\", \"some value for foo\",\n\u00a0 \u00a0]);\n}\nconst subprocess = runScript()\n// print output of script\nsubprocess.stdout.on('data', (data) => {\n   console.log(`data:${data}`);\n});\nsubprocess.stderr.on('data', (data) => {\n   console.log(`error:${data}`);\n});\nsubprocess.stderr.on('close', () => {\n   console.log(\"Closed\");\n});", "date": "Jun 13 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Gentle Goosander", "source_name": "www.tutorialspoint.com", "source_url": "https://www.tutorialspoint.com/run-python-script-from-node-js-using-child-process-spawn-method"},
{"title": "child process spawn python node js", "code": "#Import library\nimport sys, getopt, time\ndef main(argv):\n\u00a0 \u00a0argument = ''\n\u00a0 \u00a0usage = 'usage: myscript.py -f <sometext>'\n\u00a0 \u00a0# parse incoming arguments\n\u00a0 \u00a0try:\n\u00a0 \u00a0 \u00a0 opts, args = getopt.getopt(argv,\"hf:\",[\"foo=\"])\n\u00a0 \u00a0except getopt.GetoptError:\n\u00a0 \u00a0 \u00a0 print(usage)\n\u00a0 \u00a0 \u00a0 sys.exit(2)\n\u00a0 \u00a0for opt, arg in opts:\n\u00a0 \u00a0 \u00a0 if opt == '-h':\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0print(usage)\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0sys.exit()\n\u00a0 \u00a0 \u00a0 elif opt in (\"-f\", \"--foo\"):\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0argument = arg\n\u00a0 \u00a0# print output\n\u00a0 \u00a0print(\"Start : %s\" % time.ctime())\n\u00a0 \u00a0time.sleep( 2 )\n\u00a0 \u00a0print('Foo is')\n\u00a0 \u00a0time.sleep( 2 )\n\u00a0 \u00a0print(argument)\n\u00a0 \u00a0print(\"End : %s\" % time.ctime())\nif __name__ == \"__main__\":\nmain(sys.argv[1:])", "date": "Jun 13 2020", "vote": 0, "tags": ["javascript", "nodejs", "python"], "posted_by": "Gentle Goosander", "source_name": "www.tutorialspoint.com", "source_url": "https://www.tutorialspoint.com/run-python-script-from-node-js-using-child-process-spawn-method"},
{"title": "cat command implementation using node js", "code": "\"cat\": function (fullPath){   const fileName = fullPath[0];   fs.readFile(fileName, (err, data) => {      if (err) throw err;      console.log(data);   done(data);});", "date": "Mar 04 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Puzzled Plover", "source_name": "medium.com", "source_url": "https://medium.com/@aratakagan/implementing-basic-shell-commands-with-node-js-eac5dba33174"},
{"title": "convert excel file to json using node js", "code": "let express = require('express'),\n    app = express(),\n    bodyParser = require('body-parser'),\n    multer = require('multer'),\n    crypto = require('crypto'),\n    xlsxtojson = require('xlsx-to-json'),\n    xlstojson = require(\"xls-to-json\");\n\nlet fileExtension = require('file-extension');\n\n    app.use(bodyParser.json());  \n\n    let storage = multer.diskStorage({ //multers disk storage settings\n        destination: function (req, file, cb) {\n            cb(null, './input/')\n        },\n        filename: function (req, file, cb) {\n            crypto.pseudoRandomBytes(16, function (err, raw) {\n                cb(null, raw.toString('hex') + Date.now() + '.' + fileExtension(file.mimetype));\n                });\n        }\n    });\n\n    let upload = multer({storage: storage}).single('file');\n\n    /** Method to handle the form submit */\n    app.post('/sendFile', function(req, res) {\n        let excel2json;\n        upload(req,res,function(err){\n            if(err){\n                 res.json({error_code:401,err_desc:err});\n                 return;\n            }\n            if(!req.file){\n                res.json({error_code:404,err_desc:\"File not found!\"});\n                return;\n            }\n\n            if(req.file.originalname.split('.')[req.file.originalname.split('.').length-1] === 'xlsx'){\n                excel2json = xlsxtojson;\n            } else {\n                excel2json = xlstojson;\n            }\n\n           //  code to convert excel data to json  format\n            excel2json({\n                input: req.file.path,  \n                output: \"output/\"+Date.now()+\".json\", // output json \n                lowerCaseHeaders:true\n            }, function(err, result) {\n                if(err) {\n                  res.json(err);\n                } else {\n                  res.json(result);\n                }\n            });\n\n        })\n\n    });\n    // load index file to upload file on http://localhost:3000/\n    app.get('/',function(req,res){\n        res.sendFile(__dirname + \"/index.html\");\n    });\n\n    app.listen('3000', function(){\n        console.log('Server running on port 3000');\n    });\n", "date": "Feb 15 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Clear Crossbill", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/28286319/converting-excel-file-to-json-in-nodejs"},
{"title": "canvas nodejs", "code": "const\u00a0{\u00a0createCanvas,\u00a0loadImage\u00a0}\u00a0=\u00a0require('canvas')const\u00a0canvas\u00a0=\u00a0createCanvas(200,\u00a0200)const\u00a0ctx\u00a0=\u00a0canvas.getContext('2d')\u00a0//\u00a0Write\u00a0\"Awesome!\"ctx.font\u00a0=\u00a0'30px\u00a0Impact'ctx.rotate(0.1)ctx.fillText('Awesome!',\u00a050,\u00a0100)\u00a0//\u00a0Draw\u00a0line\u00a0under\u00a0textvar\u00a0text\u00a0=\u00a0ctx.measureText('Awesome!')ctx.strokeStyle\u00a0=\u00a0'rgba(0,0,0,0.5)'ctx.beginPath()ctx.lineTo(50,\u00a0102)ctx.lineTo(50\u00a0+\u00a0text.width,\u00a0102)ctx.stroke()\u00a0//\u00a0Draw\u00a0cat\u00a0with\u00a0lime\u00a0helmetloadImage('examples/images/lime-cat.jpg').then((image)\u00a0=>\u00a0{\u00a0\u00a0ctx.drawImage(image,\u00a050,\u00a00,\u00a070,\u00a070)\u00a0\u00a0\u00a0console.log('<img\u00a0src=\"'\u00a0+\u00a0canvas.toDataURL()\u00a0+\u00a0'\"\u00a0/>')})", "date": "Dec 30 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Nervous Nightingale", "source_name": "www.npmjs.com", "source_url": "https://www.npmjs.com/package/canvas"},
{"title": "cannot get issue in nodejs", "code": "app.get('/', function (req, res) {\n  res.render('index', {});\n});", "date": "Jun 15 2020", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Comfortable Caterpillar", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/21317981/cannot-get-nodejs-error/21318071"},
{"title": "call node js function from javascript", "code": "<script src=\"/socket.io/socket.io.js\"></script>\n<script>\n  var socket = io.connect('http://localhost'); // connec to server\n  socket.on('news', function (data) { // listen to news event raised by the server\n    console.log(data);\n    socket.emit('my other event', { my: 'data' }); // raise an event on the server\n  });\n</script>\n", "date": "Feb 21 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Grotesque Goldfinch", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/14951251/how-to-call-node-js-server-side-method-from-javascript"},
{"title": "call node js function from javascript", "code": "var io = require('socket.io').listen(80); // initiate socket.io server\n\nio.sockets.on('connection', function (socket) {\n  socket.emit('news', { hello: 'world' }); // Send data to client\n\n  // wait for the event raised by the client\n  socket.on('my other event', function (data) {  \n    console.log(data);\n  });\n});\n", "date": "Feb 21 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Grotesque Goldfinch", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/14951251/how-to-call-node-js-server-side-method-from-javascript"},
{"title": "calculate init code hash nodejs", "code": "import { INIT_CODE_HASH } from '../src/constants'\n\nimport { bytecode } from '@uniswap/v2-core/build/UniswapV2Pair.json'\nimport { keccak256 } from '@ethersproject/solidity'\n\nconst COMPUTED_INIT_CODE_HASH = keccak256(['bytes'], [`0x${bytecode}`])\n", "date": "Mar 05 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Handsome Hoopoe", "source_name": "github.com", "source_url": "https://github.com/Uniswap/uniswap-v2-core/issues/102"},
{"title": "build an api in nodejs using express to send emails using the gmail rest api without client libraries", "code": "/**\n* @param $service Google_Service_Gmail an authorized Gmail API service instance.\n* @param $userId string User's email address or \"me\"\n* @param $message Google_Service_Gmail_Message\n* @return null|Google_Service_Gmail_Message\n*/\nfunction sendMessage($service, $userId, $message) {\n try {\n   $message = $service->users_messages->send($userId, $message);\n   print 'Message with ID: ' . $message->getId() . ' sent.';\n   return $message;\n } catch (Exception $e) {\n   print 'An error occurred: ' . $e->getMessage();\n }\n\n return null;\n}", "date": "Oct 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Good Gecko", "source_name": "blog.mailtrap.io", "source_url": "https://blog.mailtrap.io/send-emails-with-gmail-api/#Nodejs"},
{"title": "build an api in nodejs using express to send emails using the gmail rest api without client libraries", "code": "def send_message(service, user_id, message):\n  try:\n    message = service.users().messages().send(userId=user_id, body=message).execute()\n\n    print('Message Id: %s' % message['id'])\n\n    return message\n  except Exception as e:\n    print('An error occurred: %s' % e)\n    return None\n\n\ndef create_message_with_attachment(sender, to, subject, message_text, file):\n  message = MIMEMultipart()\n  message['to'] = to\n  message['from'] = sender\n  message['subject'] = subject\n\n  msg = MIMEText(message_text)\n  message.attach(msg)\n\n  content_type, encoding = mimetypes.guess_type(file)\n\n  if content_type is None or encoding is not None:\n    content_type = 'application/octet-stream'\n\n  main_type, sub_type = content_type.split('/', 1)\n\n  if main_type == 'text':\n    fp = open(file, 'rb')\n    msg = MIMEText(fp.read().decode(\"utf-8\"), _subtype=sub_type)\n    fp.close()\n  elif main_type == 'image':\n    fp = open(file, 'rb')\n    msg = MIMEImage(fp.read(), _subtype=sub_type)\n    fp.close()\n  elif main_type == 'audio':\n    fp = open(file, 'rb')\n    msg = MIMEAudio(fp.read(), _subtype=sub_type)\n    fp.close()\n  else:\n    fp = open(file, 'rb')\n    msg = MIMEBase(main_type, sub_type)\n    msg.set_payload(fp.read())\n    fp.close()\n  filename = os.path.basename(file)\n  msg.add_header('Content-Disposition', 'attachment', filename=filename)\n  message.attach(msg)\n\n  raw_message = base64.urlsafe_b64encode(message.as_string().encode(\"utf-8\"))\n  return {'raw': raw_message.decode(\"utf-8\")}", "date": "Oct 28 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Good Gecko", "source_name": "blog.mailtrap.io", "source_url": "https://blog.mailtrap.io/send-emails-with-gmail-api/#Nodejs"},
{"title": "begins_with node js AWS dynamodb sort key", "code": "let AWS = require('aws-sdk');\nlet util = require('util');\n\nAWS.config.update({\n    region: 'us-east-1'\n});\n\nlet connection = new AWS.DynamoDB.DocumentClient();\n\nlet params = {\n    TableName: 'user_details',\n    KeyConditionExpression: 'user_id = :user_id and user_relation begins_with :user_relation',\n    ExpressionAttributeValues: {\n        ':user_id': \"1234\",\n        ':user_relation': \"followed-by\"\n    }\n};\n\nconsole.log('getQuery Params => ', params);\nlet dynamoDb = util.promisify(connection.query).bind(connection);\nlet results = await dynamoDb(params);\nconsole.log('results => ', results);\n", "date": "Nov 19 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Selfish Sardine", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/59192592/how-to-use-begins-with-in-aws-dynamodb-js-sdk"},
{"title": "begins_with node js AWS dynamodb sort key", "code": "const params = {\n  TableName: 'user_details',\n  KeyConditionExpression: '#user_id = :user_id and begins_with(#user_relation, :user_relation)',\n  ExpressionAttributeNames:{\n    \"#user_id\": \"user_id\",\n    \"#user_relation\": 'user_relation'\n  },\n  ExpressionAttributeValues: {\n    \":user_id\": \"1234\",\n    \":user_relation\": \"followed-by\"\n  }\n}\n", "date": "Nov 19 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Selfish Sardine", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/59192592/how-to-use-begins-with-in-aws-dynamodb-js-sdk"},
{"title": "begin transaction in node js using pool query", "code": "module.exports = {\n  creatUser: (req) => {\n    return new Promise((resolve, reject) => {\n      pool.getConnection(function (err, connection) {\n        connection.beginTransaction(function (err) {\n          if (err) {\n            //Transaction Error (Rollback and release connection)\n            connection.rollback(function () {\n              connection.release();\n            });\n\n            return reject(err);\n          } else {\n            connection.query(\n              `insert into ?? (name, email) values (?,?)`,\n              [\n                \"user\",\n                req.name.trim(),\n                req.email.trim()\n              ],\n\n              function (err, uResults) {\n                if (err) {\n                  //Query Error (Rollback and release connection)\n                  connection.rollback(function () {\n                    connection.release();\n                  });\n                  return reject(err);\n                } else {\n                  let values = [];\n                  req.departmentId.forEach(function (result) {\n                    let l = [uResults.insertId, result];\n                    values.push(l);\n                  });\n                  console.log(\"vale\", values);\n                  connection.query(\n                    `insert into u_dep (u_id, dep_id) values ?`,\n                    [values],\n                    function (err, results) {\n                      if (err) {\n                         connection.rollback(function () {\n                          connection.release();\n                        });\n                        return reject(err);\n                      } else {\n                        connection.commit(function (err) {\n                          if (err) {\n                            connection.rollback(function () {\n                              connection.release();\n                            });\n                            return reject(err);\n                          } else {\n                            connection.release();\n                            return resolve(uResults);\n                          }\n                        });\n                      }\n                    }\n                  );\n                }\n              }\n            );\n          }\n        });\n      });\n    });\n  },\n};", "date": "Mar 22 2021", "vote": 1, "tags": ["javascript", "nodejs"], "posted_by": "Tough Thrush", "source_name": null, "source_url": null},
{"title": "cai nodejs ubuntu", "code": "sudo apt install npm", "date": "Apr 29 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Good Gorilla", "source_name": "www.hostinger.vn", "source_url": "https://www.hostinger.vn/huong-dan/install-node-js-ubuntu"},
{"title": "bcrypt always return faslse in node js", "code": "first thing make sure to increase the length(must be greater than 60/70) in database and then checkout", "date": "Apr 08 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Wild Weevil", "source_name": null, "source_url": null},
{"title": "base64 encode node js", "code": "> console.log(Buffer.from(\"Hello World\").toString('base64'));\nSGVsbG8gV29ybGQ=\n> console.log(Buffer.from(\"SGVsbG8gV29ybGQ=\", 'base64').toString('ascii'))\nHello World", "date": "Nov 12 2020", "vote": 5, "tags": ["javascript", "nodejs"], "posted_by": "Calm Crocodile", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/6182315/how-to-do-base64-encoding-in-node-js"},
{"title": "Encoding and Decoding Base64 Strings in Node.js", "code": "'use strict';\n\nlet data = 'stackabuse.com';\nlet buff = new Buffer(data);\nlet base64data = buff.toString('base64');\n\nconsole.log('\"' + data + '\" converted to Base64 is \"' + base64data + '\"');\n", "date": "Mar 01 2020", "vote": -2, "tags": ["javascript", "nodejs"], "posted_by": "Shiny Shark", "source_name": "stackabuse.com", "source_url": "https://stackabuse.com/encoding-and-decoding-base64-strings-in-node-js/"},
{"title": "axios node js set user agent", "code": "axios\n    .get(`https://www.ebay.com/itm/Apple-iPhone-11-64GB-All-Colors-GSM-CDMA-Unlocked-Apple-Factory-Warranty-/163856625084`, \n{ headers: { 'User-Agent': 'YOUR-SERVICE-NAME' }  } )\n    .then(response => {\n      \n      // here will be cheerio scraping\n    })\n    .catch(function(e) {\n      console.log(e);\n    });", "date": "Mar 24 2021", "vote": 2, "tags": ["javascript", "nodejs"], "posted_by": "RedGuy12", "source_name": "github.com", "source_url": "https://github.com/axios/axios/issues/2560#issuecomment-555778304"},
{"title": "aws lambda function setup for node js", "code": "// first install serverless\n$  npm install -g serverless\n// create basic template\n$  serverless create --template aws-nodejs --name candidate\n// configure aws and genrate client id and client secret\nserverless config credentials --provider aws --key <your_access_key_id> --secret <your_access_key_secret>\n // deploy\n  serverless deploy", "date": "Jan 13 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Bright Bee", "source_name": "www.serverless.com", "source_url": "https://www.serverless.com/blog/node-rest-api-with-serverless-lambda-and-dynamodb"},
{"title": "aws lambda dynamodb nodejs scan", "code": "export const scanTable = async (tableName) => {\n    const params = {\n        TableName: tableName,\n    };\n\n    let scanResults = [];\n    let items;\n    do{\n        items =  await documentClient.scan(params).promise();\n        items.Items.forEach((item) => scanResults.push(item));\n        params.ExclusiveStartKey  = items.LastEvaluatedKey;\n    }while(typeof items.LastEvaluatedKey != \"undefined\");\n\n    return scanResults;\n\n};", "date": "Aug 11 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "White guy from Tokyo", "source_name": null, "source_url": null},
{"title": "dynamodb get all items nodejs", "code": "var docClient = new AWS.DynamoDB.DocumentClient();\n\nvar params = {\n    TableName: \"users\",\n    FilterExpression: \"#user_status = :user_status_val\",\n    ExpressionAttributeNames: {\n        \"#user_status\": \"user_status\",\n    },\n    ExpressionAttributeValues: { \":user_status_val\": 'somestatus' }\n\n};\n\ndocClient.scan(params, onScan);\nvar count = 0;\n\nfunction onScan(err, data) {\n    if (err) {\n        console.error(\"Unable to scan the table. Error JSON:\", JSON.stringify(err, null, 2));\n    } else {        \n        console.log(\"Scan succeeded.\");\n        data.Items.forEach(function(itemdata) {\n           console.log(\"Item :\", ++count,JSON.stringify(itemdata));\n        });\n\n        // continue scanning if we have more items\n        if (typeof data.LastEvaluatedKey != \"undefined\") {\n            console.log(\"Scanning for more...\");\n            params.ExclusiveStartKey = data.LastEvaluatedKey;\n            docClient.scan(params, onScan);\n        }\n    }\n}", "date": "May 13 2020", "vote": 3, "tags": ["javascript", "nodejs"], "posted_by": "Yellowed Yak", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/44589967/how-to-fetch-scan-all-items-from-aws-dynamodb-using-node-js"},
{"title": "nodejs gitignore", "code": "# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# Snowpack dependency directory (https://snowpack.dev/)\nweb_modules/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Microbundle cache\n.rpt2_cache/\n.rts2_cache_cjs/\n.rts2_cache_es/\n.rts2_cache_umd/\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n.env.test\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n.parcel-cache\n\n# Next.js build output\n.next\nout\n\n# Nuxt.js build / generate output\n.nuxt\ndist\n\n# Gatsby files\n.cache/\n# Comment in the public line in if your project uses Gatsby and not Next.js\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public\n\n# vuepress build output\n.vuepress/dist\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n# TernJS port file\n.tern-port\n\n# Stores VSCode versions used for testing VSCode extensions\n.vscode-test\n\n# yarn v2\n.yarn/cache\n.yarn/unplugged\n.yarn/build-state.yml\n.yarn/install-state.gz\n.pnp.*", "date": "Oct 01 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Usama.dev", "source_name": "github.com", "source_url": "https://github.com/github/gitignore/blob/master/Node.gitignore"},
{"title": ".gitignore nodejs", "code": "# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# Snowpack dependency directory (https://snowpack.dev/)\nweb_modules/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Microbundle cache\n.rpt2_cache/\n.rts2_cache_cjs/\n.rts2_cache_es/\n.rts2_cache_umd/\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n.env.test\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n.parcel-cache\n\n# Next.js build output\n.next\nout\n\n# Nuxt.js build / generate output\n.nuxt\ndist\n\n# Gatsby files\n.cache/\n# Comment in the public line in if your project uses Gatsby and not Next.js\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public\n\n# vuepress build output\n.vuepress/dist\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n# TernJS port file\n.tern-port\n\n# Stores VSCode versions used for testing VSCode extensions\n.vscode-test\n\n# yarn v2\n.yarn/cache\n.yarn/unplugged\n.yarn/build-state.yml\n.yarn/install-state.gz\n.pnp.*\n", "date": "Nov 30 2020", "vote": -1, "tags": ["javascript", "nodejs"], "posted_by": "Lively Lark", "source_name": "gist.github.com", "source_url": "https://gist.github.com/ericelliott/a9c8e7810d94fdd90993e30552674244"},
{"title": "automatic compile nodejs when edit", "code": "$ npm install nodemon -g\n$ nodemon app.js", "date": "Feb 09 2021", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Difficult Dormouse", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/40362291/node-compile-on-file-change/40362448"},
{"title": "node js download image from url as buffer", "code": "var request = require('request').defaults({ encoding: null });\nrequest.get(s3Url, function (err, res, body) {\n      //process exif here\n});", "date": "Aug 11 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Agreeable Ant", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/18264346/how-to-load-an-image-from-url-into-buffer-in-nodejs"},
{"title": "buffer to image nodejs", "code": "function toBase64(arr) {\n   //arr = new Uint8Array(arr) if it's an ArrayBuffer\n   return btoa(\n      arr.reduce((data, byte) => data + String.fromCharCode(byte), '')\n   );\n}\n\n$('#two').prepend($('<img>',{id:'theImg2',src:`data:image/png;base64,${toBase64( selected[0].image2.data)}`}))\n\n", "date": "Sep 16 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Worried Weevil", "source_name": "stackoverflow.com", "source_url": "https://stackoverflow.com/questions/59430269/how-to-convert-buffer-object-to-image-in-javascript"},
{"title": "async awiat", "code": "const data = async ()  => {\n  const got = await fetch('https://jsonplaceholder.typicode.com/todos/1');\n  \n  console.log(await got.json())\n}\n\ndata();", "date": "Jul 24 2020", "vote": 11, "tags": ["javascript", "nodejs"], "posted_by": "Salo Hopeless", "source_name": null, "source_url": null},
{"title": "await in node js", "code": "// server.js\n\nfunction square(x) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(Math.pow(x, 2));\n    }, 2000);\n  });\n}\n\nasync function layer(x)\n{\n  const value = await square(x);\n  console.log(value);\n}\n\nlayer(10);", "date": "Nov 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Hilarious Hoopoe", "source_name": "frugalisminds.com", "source_url": "https://frugalisminds.com/simplify-callback-promise-node-js-application-async-await/"},
{"title": "js async await", "code": "/* Notes:\n\t1. written like synchronous code\n    2. compatible with try/catch blocks\n    3. avoids chaining .then statements\n    4. async functions always return a promise\n    5. function pauses on each await expression\n    6. A non promise value is converted to \n       Promise.resolve(value) and then resolved\n*/\n\n// Syntax\n// Function Declaration\nasync function myFunction(){\n  await ... // some code goes here\n}\n  \n// Arrow Declaration\nconst myFunction2 = async () => {\n  await ... // some code goes here\n}\n  \n // OBJECT METHODS\n\nconst obj = {\n\tasync getName() {\n\t\treturn fetch('https://www.example.com');\n\t}\n}\n\n// IN A CLASS\n\nclass Obj {\n\t// getters and setter CANNOT be async\n\tasync getResource {\n\t\treturn fetch('https://www.example.com');\n\t}\n}\n  ", "date": "Feb 25 2020", "vote": 13, "tags": ["javascript", "nodejs"], "posted_by": "Impossible Impala", "source_name": null, "source_url": null},
{"title": "await in node js", "code": "// Normal Function\nfunction add(a,b){\n  return a + b;\n}\n// Async Function\nasync function add(a,b){\n  return a + b;\n}", "date": "Nov 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Hilarious Hoopoe", "source_name": "frugalisminds.com", "source_url": "https://frugalisminds.com/simplify-callback-promise-node-js-application-async-await/"},
{"title": "await in node js", "code": "// server.js\n\nfunction square(x) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(Math.pow(x, 2));\n    }, 2000);\n  });\n}\n\nsquare(10).then(data => {\n  console.log(data);\n});", "date": "Nov 22 2020", "vote": 0, "tags": ["javascript", "nodejs"], "posted_by": "Hilarious Hoopoe", "source_name": "frugalisminds.com", "source_url": "https://frugalisminds.com/simplify-callback-promise-node-js-application-async-await/"}
]